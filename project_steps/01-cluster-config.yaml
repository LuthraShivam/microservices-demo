apiVersion: eksctl.io/v1alpha5
availabilityZones:
- us-east-1f
- us-east-1b
cloudWatch:
  clusterLogging: {}

iam:
  vpcResourceControllerPolicy: true
  withOIDC: true
  serviceAccounts:
  - metadata:
      name: ebs-csi-controller-sa
      namespace: kube-system
    attachPolicyARNs: 
    - "arn:aws:iam::aws:policy/service-role/AmazonEBSCSIDriverPolicy"
    roleOnly: true
    roleName: AmazonEKS_EBS_CSI_DriverRole

kind: ClusterConfig
kubernetesNetworkConfig:
  ipFamily: IPv4

managedNodeGroups:
- amiFamily: AmazonLinux2
  desiredCapacity: 2
  disableIMDSv1: true
  disablePodIMDS: false
    #  taints:
    #   - key: "node.cilium.io/agent-not-ready"
    #     value: "true"
    #     effect: "NoExecute"
  iam:
    withAddonPolicies:
      albIngress: false
      appMesh: false
      appMeshPreview: false
      autoScaler: false
      awsLoadBalancerController: false
      certManager: false
      cloudWatch: false
      ebs: false
      efs: false
      externalDNS: false
      fsx: false
      imageBuilder: false
      xRay: false
  instanceSelector: {}
  instanceType: t3a.medium
  labels:
    alpha.eksctl.io/cluster-name: microservices-demo
    alpha.eksctl.io/nodegroup-name: ng-2a0e1baa
  maxSize: 2
  minSize: 2
  name: ng-2a0e1baa
  privateNetworking: false
  releaseVersion: ""
  securityGroups:
    withLocal: null
    withShared: null
  ssh:
    allow: false
    publicKeyPath: ""
  tags:
    alpha.eksctl.io/nodegroup-name: ng-2a0e1baa
    alpha.eksctl.io/nodegroup-type: managed
  volumeIOPS: 3000
  volumeSize: 80
  volumeThroughput: 125
  volumeType: gp3

metadata:
  name: microservices-demo
  region: us-east-1
  version: "1.25"
privateCluster:
  enabled: false
  skipEndpointCreation: false

vpc:
  autoAllocateIPv6: false
  cidr: 192.168.0.0/16
  clusterEndpoints:
    privateAccess: false
    publicAccess: true
  manageSharedNodeSecurityGroupRules: true
  nat:
    gateway: Single

addons:
  - name: aws-ebs-csi-driver
    serviceAccountRoleARN: arn:aws:iam::096791037869:role/AmazonEKS_EBS_CSI_DriverRole
