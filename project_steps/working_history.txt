    1  vi ~/.zshrc
    2  exit
    3  clear
    4  exit
    5  ls
    6  cd Documents
    7  ls
    8  vi package_installation.sh
    9  cd
   10  curl https://pyenv.run | bash
   11  exit
   12  pyenv
   13  exit
   14  pyenv versions
   15  cd Documents
   16  ls
   17  vi package_installation.sh
   18  clear
   19  cd
   20  git clone --depth=1 https://github.com/romkatv/powerlevel10k.git ${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}/themes/powerlevel10k
   21  vi ~/.zshrc
   22  exec zsh
   23  clear
   24  ls
   25  vi ~/.zshrc
   26  vi ~/.p10k.zsh
   27  clear
   28  ls
   29  dfd
   30  fdf
   31  clear
   32  cat /etc/issue
   33  cat /etc/os-release
   34  clear
   35  ssh shivam@192.168.1.69
   36  ls
   37  cd .ssh
   38  ls
   39  pwd
   40  clear
   41  ls
   42  scp shivam@192.168.1.69:/home/shivam/.ssh/* .
   43  ping 192.168.1.69
   44  sshpass -p Titan151376 scp shivam@192.168.1.69:/home/shivam/.ssh/* .
   45  scp shivam@192.168.1.69:/home/shivam/.ssh/\* .
   46  clear
   47  ls
   48  vi known_hosts
   49  ks
   50  ls
   51  cat known_hosts.old
   52  ls
   53  cp known_hosts.old known_hosts_laptop_bkp
   54  clear
   55  ls
   56  rm -rf known_hosts.old
   57  clear
   58  ls
   59  ssh shivam@192.168.1.69
   60  clear
   61  exit
   62  clear
   63  cd 
   64  clear
   65  ls
   66  clear
   67  ls
   68  sudo dnf install 
   69  ls
   70  sudo dnf install me
   71  ls
   72  sudo dnf install megasync-Fedora_38.x86_64.rpm
   73  sudo dnf install sq
   74  sudo dnf install sqllite
   75  sudo dnf install sqlite
   76  ls
   77  clear
   78  ls
   79  clear
   80  ls
   81  rm -rf *
   82  clear
   83  ls
   84  exit
   85  ls
   86  cd Documents
   87  ls
   88  vi package_installation.sh
   89  sudo dnf install -y calibre
   90  clear
   91  df -h
   92  exit
   93  ls
   94  clar
   95  clear
   96  vi /tmp/folders.txt
   97  ls | grep tex
   98  sudo dnf install -y texmaker-5.1.4_fedora_38.x86_64.rpm
   99  vi package_installation.sh
  100  clear
  101  exit
  102  ls
  103  clear
  104  exit
  105  sudo dnf install transmission
  106  exit
  107  pwd
  108  ls
  109  cd .wine/drive_c/Program\ Files/
  110  ks
  111  clear
  112  ls
  113  cd 
  114  ls
  115  cd Documents/stuff/ls
  116  cd Documents/stuff/
  117  ls
  118  cd ..
  119  cd
  120  cd Downloads/stuff
  121  ls
  122  cd BeingADIK-0.9.1-pc
  123  ls
  124  cd BeingADIK-0.9.1-pc/
  125  ls
  126  clear
  127  ls
  128  vi BeingADIK.py
  129  ls
  130  vi BeingADIK.sh
  131  exit
  132  ls
  133  cd lib
  134  ls
  135  cd linux-x86_64
  136  ls
  137  cd ..
  138  ls
  139  cd ..
  140  ls
  141  cd renpy/
  142  ls
  143  vi savelocation.py
  144  grep -inr "beingadik" .
  145  ls
  146  cd .
  147  cd ..
  148  ls
  149  grep -inr "beingadik" .
  150  clear
  151  ls
  152  sudo dnf install -y megasync-Fedora_38.x86_64.rpm
  153  exit
  154  top
  155  clear
  156  top | grep -i pleasure
  157  ps -ef | grep wine
  158  sensors
  159  clear
  160  sensors
  161  ls
  162  cd Desktop
  163  ls
  164  sudo dnf install -y playonlinux-yum-4-1.noarch.rpm
  165  winecfg
  166  exit
  167  wine MyPleasure.exe& > debug.txt
  168  ll
  169  cat debug.txt
  170  ls
  171  cd Downloads
  172  ls
  173  cd stuff
  174  ls
  175  clear
  176  ls
  177  cd Games
  178  ls
  179  clear
  180  ols
  181  clear
  182  ls
  183  mkdir saves
  184  cd saves
  185  ls
  186  ssh shivam@192.168.1.69
  187  ls
  188  scp shivam@192.168.1.69:/home/shivam/.renpy/\* .
  189  scp -r shivam@192.168.1.69:/home/shivam/.renpy/\* .
  190  clear
  191  ls
  192  cd BeingaDIK
  193  ls
  194  ll ~/
  195  wcho ~/
  196  echo ~/
  197  ls
  198  cd ..
  199  ls
  200  mkdir ~/.renpy
  201  mv BeingaDIK ~/.renpy
  202  cd ~/.renpy
  203  ls
  204  cd BeingaDIK
  205  ls
  206  cd
  207  exit
  208  ls
  209  cd ~/.renpy
  210  ls
  211  cd BeingaDIK
  212  ls
  213  cd persistent
  214  ls
  215  mv /home/luthra/Downloads/stuff/1-1-LT1.save .
  216  clear
  217  ls
  218  wine MyPleasure.exe& > debug.txt
  219  sudo dnf install winehq-stable
  220  dnf config-manager --add-repo https://dl.winehq.org/wine-builds/fedora/38/winehq.repo
  221  sudo dnf config-manager --add-repo https://dl.winehq.org/wine-builds/fedora/38/winehq.repo
  222  sudo dnf install winehq-stable
  223  sudo dnf install winehq-stable --allowerasing
  224  clear
  225  exit
  226  reboot -f
  227  sudo reboot -f
  228  ll ~/.wine
  229  rm -rf ~/.wine
  230  sudo apt-get remove wine* --purge
  231  sudo dnf remove wine -y
  232  clear
  233  sudo dnf clean all
  234  sudo dnf update -y
  235  sudo dnf -y install dnf-plugins-core \nsudo rpm --import https://dl.winehq.org/wine-builds/winehq.key
  236  echo $VERSION_ID
  237  source /etc/os-release
  238  echo $VERSION_ID
  239  sudo dnf config-manager --add-repo https://dl.winehq.org/wine-builds/fedora/$\{VERSION_ID\}/winehq.repo
  240  sudo dnf config-manager --add-repo https://dl.winehq.org/wine-builds/fedora/38/winehq.repo
  241  sudo dnf install winehq-stable
  242  sudo dnf install winehq-stable --allowerasing
  243  wine --version
  244  sudo dnf install winehq-stable --allowerasing
  245  dnf list | grep wine
  246  dnf list installed | grep wine
  247  sudo dnf install winehq-devel
  248  sudo dnf provides wine
  249  sudo dnf list installed wine*
  250  sudo dnf remove wine
  251  ll ~/.w
  252  ll ~/
  253  cd ~/.wine
  254  dnf list installed | grep wine
  255  sudo dnf purge wine*
  256  sudo dnf remove wine*
  257  sudo dnf remove winehq-stable.x86_64
  258  dnf list installed | grep wine
  259  sudo dnf install winehq-stable
  260  dnf list installed | grep wine
  261  ls
  262  clear
  263  ls
  264  chmod 644 HailDicktator.x86_64
  265  LL
  266  ll
  267  chmod 777 HailDicktator.x86_64
  268  ll
  269  ./HailDicktator.x86_64
  270  cd ~/.renpy
  271  ls
  272  cd
  273  clear
  274  cd ~/.config
  275  ls
  276  cd unity3d/HachiGames
  277  ls
  278  cd HailDicktator
  279  LS
  280  ls
  281  cd save
  282  ls
  283  rm -rf *
  284  ls
  285  mv /home/luthra/Downloads/stuff/Games/Hail\ Dicktator/Hail_Dicktator_0.52.1_Save/save0000.hdsav .
  286  clear
  287  ip a
  288  systemctl status sshd
  289  systemctl status enable sshd
  290  sudo systemctl status start sshd
  291  sudo systemctl start sshd
  292  systemctl status sshd
  293  exit
  294  ls
  295  cd ~/.renpy/BeingaDIK/persistent
  296  ls
  297  cd
  298  clear
  299  cd ~/.wine/drive_c/
  300  ls
  301  ll
  302  ls
  303  cd windows/
  304  ls
  305  cd ..
  306  ls
  307  cd Program
  308  cd ProgramData
  309  ls
  310  cd ..
  311  ls
  312  cd users
  313  ls
  314  cd luthra
  315  ls
  316  cd ..
  317  ls
  318  c d..
  319  cd ..
  320  ls
  321  cd qi
  322  cd windows
  323  ls
  324  clear
  325  ls
  326  cd ..
  327  ls
  328  cd ..
  329  find . -type d -iname "*witness*"
  330  cd users/luthra/AppData/Roaming/RenPy
  331  cd rive_c/users/luthra/AppData/Roaming/RenPy/
  332  cd drive_c/users/luthra/AppData/Roaming/RenPy/
  333  ls
  334  cd BeingaDIK-1535311494/
  335  ls
  336  clear
  337  ls
  338  \tcd
  339  ls
  340  cd .renpy
  341  ls
  342  cd BeingaDIK
  343  ls
  344  cd persistent
  345  ls
  346  cd ..
  347  ls
  348  cd BareWitness-1615628163/l
  349  cd BareWitness-1615628163/
  350  ld
  351  ls
  352  clear
  353  ll persistent
  354  cd ..
  355  ls
  356  cd persistent/
  357  ls
  358  cd ..
  359  ls
  360  cd BeingaDIK-1535311494/
  361  ls
  362  pwd
  363  cp /home/luthra/.renpy/BeingaDIK/persistent/* .
  364  ls
  365  cat persistent
  366  clear
  367  ls
  368  cd ..
  369  ls
  370  cd BeingaDIKSeason3-Patreon-1535311494
  371  ls
  372  cd ..
  373  ls
  374  cd BeingaDIK-1535311494/
  375  ls
  376  cat debug.txt
  377  cp *.save ../BeingaDIKSeason3-Patreon-1535311494/
  378  cd ../BeingaDIKSeason3-Patreon-1535311494
  379  LS
  380  ls
  381  rm -rf 9*
  382  ls
  383  clear
  384  ls
  385  rm -rf 1-1-LT1.save
  386  ls
  387  cd ..
  388  ls
  389  cd BeingaDIK-1535311494
  390  ls
  391  cp 9-12-LT1.save ../BeingaDIKSeason3-Patreon-1535311494
  392  ls
  393  cd renpy
  394  ls
  395  cd common/_
  396  cd common/
  397  ls
  398  vi 00action_file.rpy
  399  vi 00action_file.rpy +462
  400  ls
  401  python3 -m venv iitk
  402  ls
  403  source iitk/bin/activate
  404  pip install jupyter
  405  exit
  406  jupyter notebook
  407  sudo dnf install https://mirrors.rpmfusion.org/free/fedora/rpmfusion-free-release-$\(rpm -E %fedora).noarch.rpm https://mirrors.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-$\(rpm -E %fedora).noarch.rpm
  408  clear
  409  sudo dnf -y install https://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-$\(rpm -E %fedora).noarch.rpm\nsudo dnf -y install https://download1.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-$\(rpm -E %fedora).noarch.rpm\n
  410  sudo dnf -y install https://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-$\(rpm -E %fedora).noarch.rpm
  411  rpm -E fedora
  412  rpm -E %fedora
  413  sudo dnf install https://mirrors.rpmfusion.org/free/fedora/rpmfusion-free-release-$\38.noarch.rpm https://mirrors.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-$\38.noarch.rpm
  414  sudo dnf upgrade
  415  sudo dnf update
  416  sudo dnf install ffmpeg ffmpeg-devel\n
  417  sudo dnf install ffmpeg ffmpeg-devel --allowerasing\n
  418  ffmpeg --version
  419  ffmpeg -version
  420  clear
  421  ffmpeg -version
  422  ll
  423  ffmpeg -i The\ Halo\ Effect\ -\ How\ To\ Treat\ Fickle\ High\ Value\ People\ VS\ Your\ \"Real\"\ Friends\ \(And\ Know\ Who\ Is\ Who\).mp4 The_Halo_Effect.mp3
  424  ll
  425  ls
  426  ffmpeg -i Crush\ Your\ Social\ Anxiety:\ The\ Ultimate\ Crash\ Course\ In\ Hard\ Core\ OG\ Social\ Skills.mp4 Crush_Social_Anxiety.mp3
  427  ll
  428  clear
  429  ls
  430  ffmpeg -i Game\ Re-Visited:\ My\ OG\ Hardcore\ Dating\ Secrets\ Revealed.mp4 Game_Revisited.mp3
  431  ll
  432  ip a
  433  systemctl status sshd
  434  systemctl start sshd
  435  systemctl status sshd
  436  fancontrol
  437  systemctl status fancontrol
  438  sensors-detect
  439  clear
  440  sudo sensors-detect
  441  sensors
  442  clear
  443  sensors
  444  sensors -v
  445  sensors help
  446  sensors -h
  447  sensors -u
  448  clear
  449  sensors -h
  450  fancontrol
  451  ls
  452  cd ws
  453  ls
  454  cd s-tui_stuff
  455  mkdir s-tui_stuff
  456  cd s-tui_stuff
  457  ls
  458  python3 -m venv stui
  459  ls
  460  source stui/bin/activate
  461  ls
  462  pip install s-tui
  463  s-tui
  464  sudo dnf install stress
  465  clear
  466  s-tui
  467  s-tui --csv-file stress1.csv
  468  ls
  469  nvim
  470  clear
  471  ls
  472  cd ws/ls
  473  cd ws
  474  ls
  475  clear
  476  ls
  477  mkdir vi-tutorial
  478  cd vi-tutorial
  479  clea
  480  rls
  481  clear
  482  ls
  483  vi temp.py
  484  nvim temp.py
  485  vi temp.py
  486  vim temp.py
  487  nvim temp.py
  488  ls
  489  vi notes.txt
  490  nvim notes.txt
  491  ls
  492  cd ws
  493  ls
  494  clear
  495  ls
  496  cd vi-tutorial
  497  clear
  498  ls
  499  vi notes.txt
  500  ls
  501  cd ~/.config/
  502  mkdir nvim
  503  ll
  504  cd nvim
  505  touch init.vim
  506  vi init.vim
  507  cd 
  508  cd ws
  509  ls
  510  clear
  511  ls
  512  cd vi-tutorial
  513  ls
  514  nvim notes.txt
  515  vi ~/.config/nvim/init.vim
  516  vi notes.txt
  517  nvim notes.txt
  518  vi ~/.config/nvim/init.vim
  519  nvim notes.txt
  520  vi ~/.config/nvim/init.vim
  521  nvim notes.txt
  522  sensors
  523  ls
  524  clear
  525  ls
  526  cd ws
  527  ls
  528  cd s-tui_stuff
  529  ls
  530  source stui/bin/activate
  531  ls
  532  s-tui
  533  fancontrol
  534  clearr
  535  fancontrol -v
  536  fancontrol -h
  537  /usr/sbin/fancontrol 
  538  man pwmconfig
  539  man fancontrol
  540  pwmconfig
  541  sudo pwmconfig
  542  sensors
  543  ls
  544  cd ws
  545  ls
  546  cd s-tui_stuff
  547  ls
  548  source stui/bin/activate
  549  ls
  550  s-tui
  551  s
  552  ls
  553  cd ws
  554  ls
  555  cd s-tui_stuff
  556  ls
  557  souce stui/bin/activate
  558  ls
  559  source stui/bin/activate
  560  ls
  561  s-tui
  562  cd ws
  563  ls
  564  cd s-tui_stuff
  565  ls
  566  source stui/bin/activate
  567  s-tui
  568  ls
  569  cd was
  570  cd ws
  571  kls
  572  ls
  573  cd s-tui_stuff
  574  ls
  575  source stui/bin/activate
  576  s-tui
  577  sensors
  578  lss
  579  ls
  580  cd ws
  581  ls
  582  cd ..
  583  ls
  584  cd Software\ Developement
  585  ls
  586  cd Python\ Projects
  587  ls
  588  cd ..
  589  ls
  590  cd 
  591  ls
  592  cd ws
  593  ls
  594  mkdir instaloader
  595  cd instaloader
  596  sl
  597  ls
  598  python3 -m venv insta
  599  source insta/bin/activate
  600  pip3 install instaloader\n
  601  pip list
  602  instaloader profile dontfeed__theunicorns
  603  ks
  604  ls
  605  cd dontfeed__theunicorns
  606  ls
  607  ll
  608  top
  609  clear
  610  ll
  611  ls -lhtr
  612  clear
  613  exit
  614  ip a
  615  sudo systemctl status sshd
  616  sudo systemctl start sshd
  617  sudo systemctl status sshd
  618  whoami
  619  cd Cer
  620  ls
  621  cd Documents
  622  ls
  623  cd Certifications
  624  ls
  625  clear
  626  ls
  627  mkdir  CompTIA-Security_plus
  628  ls
  629  cd CompTIA-Security_plus
  630  ls
  631  clear
  632  ls
  633  touch Notes.md
  634  ls
  635  nvim Notes.md
  636  bat Notes.md
  637  sudo dnf install bat
  638  clear
  639  ls
  640  bat Notes.md
  641  ls
  642  nvim Notes.md
  643  clear
  644  bat Notes.md
  645  ls
  646  nvim Notes.md
  647  ll ~/.local/share/nvim/
  648  bat ~/.local/share/nvim/
  649  bat ~/.local/share/nvim/rplugin.vim
  650  clear
  651  neovim --version
  652  nvim --version
  653  nvim
  654  nvim Notes.md
  655  vi ~/.zshrc
  656  source ~/.zshrc
  657  ls
  658  clear
  659  ls
  660  nv Notes.md
  661  clear
  662  vi ~/.config/nvim/init.vim 
  663  clear
  664  ls
  665  cd
  666  clear
  667  ls
  668  sh -c 'curl -fLo "${XDG_DATA_HOME:-$HOME/.local/share}"/nvim/site/autoload/plug.vim --create-dirs \\n       https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim'
  669  ls
  670  cd .config/nvim
  671  ls
  672  cd 
  673  cd .local/share/nvim
  674  ls
  675  cd site
  676  ls
  677  cd autoload
  678  ls
  679  vi plug.vim
  680  cd ../..
  681  ls
  682  cd 
  683  ls
  684  clear
  685  ls
  686  history 10
  687  clear
  688  ls
  689  vi ~/.config/nvim/init.vim 
  690  git -version
  691  git -v
  692  clear
  693  \tls
  694  vi ~/.config/nvim/init.vim 
  695  nv ~/.config/nvim/init.vim
  696  cd
  697  ls
  698  cd Documents/Certifications
  699  ls
  700  cd CompTIA-Security_plus
  701  ls
  702  nv Notes.md
  703  \tvi ~/.config/nvim/init.vim 
  704  nv Notes.md
  705  nv
  706  vi .config/nvim/init.vim
  707  nv
  708  vi .config/nvim/init.vim
  709  nv
  710  vi .config/nvim/init.vim
  711  nv
  712  cd Software\ Developement/Python\ Projects
  713  LS
  714  clear
  715  ls
  716  vi passwd_parser.py
  717  nv
  718  cd Manga-Downloader
  719  ls
  720  cd manhwa18
  721  ls
  722  cd src
  723  l
  724  nv
  725  vi .config/nvim/init.vim
  726  nv
  727  vi .config/nvim/init.vim
  728  nv
  729  vi .config/nvim/init.vim
  730  nv
  731  vi .config/nvim/init.vim
  732  nv
  733  exit
  734  \tvi ~/.config/nvim/init.vim 
  735  nv
  736  vi .config/nvim/init.vim
  737  exit
  738  sensors
  739  nv
  740  nv ~/.config/nvim/init.vim
  741  ls
  742  nv ws/instaloader/insta/
  743  nv ~/.config/nvim/init.vim
  744  sudo dnf install universal-ctags
  745  cd Desktop
  746  ls
  747  tar -xvf uctags-2023.05.15-linux-x86_64.tar.xz
  748  ls
  749  cd uctags-2023.05.15-linux-x86_64
  750  ls
  751  cd bin
  752  l
  753  clear
  754  ls
  755  ctags --version
  756  ls
  757  cd ..
  758  ls
  759  cd ..
  760  ls
  761  rm -rf uctags-2023.05.15-linux-x86_64*
  762  clear
  763  ls
  764  cd
  765  clear
  766  ls
  767  cd ws
  768  ls
  769  git clone https://github.com/universal-ctags/ctags.git
  770  cd ctags
  771  ./autogen.sh\n
  772  ls
  773  ./autogen.sh\n
  774  make --verison
  775  make --version
  776  clear
  777  ll
  778  sudo dnf install autoconf automake
  779  ls
  780  cd ..
  781  ls
  782  cd
  783  ls
  784  cd Software\ Developement
  785  ls
  786  cd ..
  787  ls
  788  cd Documents
  789  ls
  790  ls | grep .sh
  791  vi package_installation.sh
  792  cd
  793  ls
  794  cd ws/ctags
  795  ls
  796  \t./autogen.sh\n
  797  ll
  798  ll /usr/local
  799  omz update
  800  exit
  801  ks
  802  ls
  803  vi zshrc
  804  vi git_plugin_list.txt
  805  exit
  806  ls
  807  ./config
  808  ./configure
  809  make
  810  make install
  811  ls
  812  cd ..
  813  ls
  814  cd ctags
  815  ls
  816  sudo make install
  817  ctags
  818  ctags --version
  819  which ctags
  820  clear
  821  cd 
  822  ls
  823  cd ws
  824  ls 
  825  cd ..
  826  ls
  827  vi Documents/dotfiles-master/gitconfig
  828  vi Documents/dotfiles-master/git_plugin_list.txt
  829  vi ~/.config/nvim/init.vim 
  830  nv ~/.config/nvim/init.vim
  831  ls
  832  cd ws
  833  ls
  834  rm -rf ctags
  835  ctags --version
  836  clear
  837  ls
  838  cd iv
  839  cd vi-tutorial
  840  clear
  841  ls
  842  cd ..
  843  lx
  844  clear
  845  ls
  846  docker images
  847  sudo docker images
  848  docker images
  849  sudo docker images
  850  clear
  851  ls
  852  ll MEGAsync\ Downloads
  853  ll Downloads
  854  clear
  855  ls
  856  cd ws
  857  ls
  858  l
  859  c dv
  860  cd vi-tutorial
  861  ls
  862  cd ..
  863  ls
  864  cd ..
  865  ls
  866  cd Downloads
  867  cd ..
  868  ls
  869  cd Documents
  870  ls
  871  clear
  872  ls
  873  cd 
  874  ls
  875  cd Documents
  876  ls
  877  cd ..
  878  cd ws
  879  ls
  880  clear
  881  ls
  882  mkdir docker_stuff
  883  cd docker_stuff
  884  gh repo clone ArjanCodes/2022-docker
  885  ls
  886  git clone https://github.com/ArjanCodes/2022-docker.git
  887  ls
  888  cd 2022-docker
  889  ls
  890  clear
  891  ls
  892  git branch
  893  clear
  894  ls
  895  nv main.py
  896  ls
  897  cd
  898  ls
  899  cd Desktop
  900  ls
  901  sudo dnf install zoom_x86_64.rpm
  902  ls
  903  ./zoom
  904  rpm -qi zoom
  905  clear
  906  rpm -qi zoom
  907  ./zoom
  908  zoom
  909  nv ~/.config/nvim/init.vim
  910  nslookup 0.nic.sbi
  911  clear
  912  exit
  913  nv ~/.config/nvim/init.vim
  914  ls
  915  cd ws
  916  clear
  917  ls
  918  git clone https://github.com/ryanoasis/nerd-fonts.git
  919  clear
  920  ls
  921  nv ~/.config/nvim/init.vim
  922  ls
  923  cd
  924  ls
  925  ll Documents/ | grep sh
  926  vi Documents/package_installation.sh
  927  dnf search fonts
  928  clear
  929  cd .local/s
  930  cd .local/
  931  ls
  932  cd share
  933  ;s
  934  ls
  935  pwd
  936  mkdir fonts
  937  cd fonts
  938  cleaer
  939  clear
  940  ls
  941  vi ~/.config/nvim/init.vim
  942  nv ~/.config/nvim/init.vim
  943  ls
  944  mkdir NerdFonts
  945  cd NerdFonts
  946  ls
  947  clar
  948  clear
  949  ls
  950  cd
  951  ls
  952  cd Desktop
  953  \tLS
  954  ls
  955  clear
  956  ls
  957  unzip NerdFontsSymbolsOnly.zip
  958  ls
  959  rm -rf LICENSE readme.md
  960  ls
  961  mv SymbolsNerdFont* ~/.local/share/fonts/NerdFonts/.
  962  ll
  963  ci ~/.config/nvim/init.vim 
  964  nv ~/.config/nvim/init.vim 
  965  ls
  966  mv * ..
  967  ls
  968  cd ..
  969  ls
  970  nv ~/.config/nvim/init.vim 
  971  vi ~/Software\ Developement/Golang\ Projects/exercises/def_pan_rec.go
  972  nv ~/Software\ Developement/Golang\ Projects/quiz-game/quiz.go
  973  nv ~/.config/nvim/init.vim 
  974  ll
  975  ls
  976  mv SymbolsNerdFont* NerdFonts
  977  ls
  978  cd NerdFonts/
  979  LS
  980  ls
  981  clear
  982  ls
  983  nv
  984  ls
  985  cd Software\ Developement
  986  ls
  987  cd Python\ Projects
  988  ls
  989  cd Manga-Downloader
  990  ls
  991  cd manhwa18
  992  ls
  993  vi src/download_manager.py
  994  nv src/download_manager.py
  995  nv
  996  vi ~/.config/nvim/init.vim
  997  nv ~/.config/nvim/init.vim
  998  ll ~/.local/share/fonts/NerdFonts/SymbolsNerdFont
  999  ll ~/.local/share/fonts/NerdFonts/
 1000  ls
 1001  cd ..
 1002  ls
 1003  c d..
 1004  cd ..
 1005  ls
 1006  cd ..
 1007  l;s
 1008  cd C\ Projects/ls
 1009  cd C\ Projects/
 1010  ls
 1011  nv
 1012  nv ~/.config/nvim/init.vim 
 1013  nv
 1014  cd ..
 1015  ls
 1016  cd Golang\ Projects
 1017  ls
 1018  cd quiz-game
 1019  ls
 1020  nv
 1021  nv ~/.config/nvim/init.vim 
 1022  ls
 1023  cd
 1024  ls
 1025  mv Desktop/Font\ Awesome\ 6\ * ~/.local/share/fonts/.
 1026  clear
 1027  cd Software\ Developement
 1028  ls
 1029  cd Golang\ Projects/
 1030  LS
 1031  nv
 1032  ls
 1033  mv ~/.local/share/fonts/Font\ Awesome\ 6\ * ~/.local/share/fonts/NerdFonts
 1034  ls
 1035  ll ~/.local/share/fonts/NerdFonts
 1036  nv
 1037  ls
 1038  \tcd ~/.local/share/fonts/NerdFonts
 1039  ls
 1040  mv Font\ Awesome\ 6\ * ..
 1041  ls
 1042  mv SymbolsNerdFont* ..
 1043  ls
 1044  mv ~/Desktop/*.ttf .
 1045  ls
 1046  ll ~/Desktop
 1047  mv ~/Desktop/*.otf .
 1048  clear
 1049  ls
 1050  nv
 1051  cd 
 1052  ls
 1053  vi ~/.config/nvim/init.vim
 1054  nv ~/.config/nvim/init.vim
 1055  nv Software\ Developement/Golang\ Projects/quiz-game/quiz.go
 1056  nv ~/.config/nvim/init.vim
 1057  ls
 1058  exit
 1059  nv ~/.config/nvim/init.vim
 1060  fc-list\n
 1061  fc-list | grep .local\n
 1062  nv ~/.config/nvim/init.vim
 1063  ls
 1064  cd ws
 1065  ls
 1066  cd docker_stuff
 1067  LS
 1068  ls
 1069  clear
 1070  ls
 1071  cd 2022-docker
 1072  ls
 1073  vi channels.json
 1074  cat Docker
 1075  cat Dockerfile
 1076  clear
 1077  cat Dockerfile
 1078  cd ..
 1079  ls
 1080  clear
 1081  ls
 1082  cd 2022-docker
 1083  ls
 1084  git remote -v
 1085  clear
 1086  cd ..
 1087  ls
 1088  mkdir docker_temp
 1089  cd docker_temp
 1090  ls
 1091  touch exec.sh
 1092  nv exec.sh
 1093  touch Dockerfile
 1094  nv Dockerfile
 1095  pwd
 1096  nv Dockerfile
 1097  ls
 1098  nv Dockerfile
 1099  vi exec.sh
 1100  vi exec.shnv
 1101  nv exec.sh
 1102  lw
 1103  ls
 1104  vi Dockerfile
 1105  nv Dockerfile
 1106  clear
 1107  ip a
 1108  ls
 1109  docker build . -t rocky-httpd:latest
 1110  sudo docker build . -t rocky-httpd:latest
 1111  nv Dockerfile
 1112  sudo docker build . -t rocky-httpd:latest
 1113  sudo docker images
 1114  sudo docker run --name myrocky -d -p 80:80 rocky-httpd:latest
 1115  docker ps
 1116  sudo docker ps
 1117  ip a
 1118  sudo docker ps
 1119  sudo docker 5a8a47d81aa2
 1120  sudo docker stop 5a8a47d81aa2
 1121  sudo docker ps
 1122  sudo docker ls
 1123  sudo docker help
 1124  sudo docker container prune
 1125  sudo docker run --name myrocky -d -p 80:80 rocky-httpd:latest
 1126  sudo docker ps
 1127  sudo docker stop myrocky
 1128  sudo docker ps -f "status=exited"
 1129  sudo docker start myrocky
 1130  sudo docker exec 
 1131  clear
 1132  ls
 1133  vi exec.sh
 1134  sudo docker ps
 1135  sudo docker stop myrocky
 1136  sudo docker container prune
 1137  clear
 1138  ls
 1139  vi exec.sh
 1140  ls
 1141  which vi
 1142  vi ~/.zshrc
 1143  source ~/.zshrc
 1144  vi Dockerfile
 1145  sudo docker build . -t rocky-httpd:latest
 1146  sudo docker ps
 1147  sudo docker ps -f "status=exited"
 1148  sudo docker run --name myrocky -d -p 80:80 rocky-httpd:latest
 1149  ls
 1150  sudo docker ps
 1151  sudo docker stop myrocky
 1152  sudo docker container prune
 1153  docker image prune
 1154  sudo docker image prune
 1155  sudo docker image prune -a
 1156  sudo docker image ls
 1157  sudo docker image list
 1158  ip -4 a
 1159  clear
 1160  ip a
 1161  clear
 1162  ls
 1163  vi Dockerfile
 1164  vi exec.sh
 1165  ;s
 1166  ls
 1167  mv exec.sh script.sh
 1168  ll
 1169  vi Dockerfile
 1170  history
 1171  sudo docker build . -t rocky-httpd:latest
 1172  sudo docker ps
 1173  sudo docker run --name myrocky -d -p 80:80 rocky-httpd:latest
 1174  sudo docker ps
 1175  sudo docker ps -f="status=exited"
 1176  sudo docker start myrocky
 1177  sudo docker ps
 1178  sudo docker ps -f="status=exited"
 1179  vi Dockerfile
 1180  ls
 1181  sudo docker logs myrocky
 1182  sudo docker logs 672ec364a2bd
 1183  clear
 1184  sudo docker logs 672ec364a2bd
 1185  sudo systemctl start sshd
 1186  systemctl status sshd
 1187  man grep
 1188  ls
 1189  cd Documents
 1190  ls
 1191  cd 
 1192  clear
 1193  ls
 1194  ll /var/log/boot.log
 1195  ll /var/log/firewalld
 1196  tail -n 50 /var/log/firewalld
 1197  sudo tail -n 50 /var/log/firewalld
 1198  grep -o "COMMAND" /var/log/firewalld
 1199  sudo grep -o "COMMAND_FAILED" /var/log/firewalld | more
 1200  sudo grep "COMMAND_FAILED" /var/log/firewalld | more
 1201  clear
 1202  sudo grep -i -o "COMMAND_FAILED" /var/log/firewalld | more
 1203  clear
 1204  nc --verison
 1205  nc --version
 1206  clear
 1207  \tls
 1208  cd /var/log
 1209  ls
 1210  cd chrony
 1211  ls
 1212  sudo cd chrony
 1213  ls
 1214  cd chrony
 1215  sudo cd chrony
 1216  cd .local/s
 1217  cd .local/
 1218  ls
 1219  cd share
 1220  ls
 1221  cd
 1222  sl
 1223  la
 1224  clear
 1225  ll
 1226  ls -la
 1227  cd .renpy
 1228  ls
 1229  cd BeingaDIK
 1230  ls
 1231  cd ..
 1232  ls
 1233  cd ..
 1234  ls
 1235  ls -la
 1236  cd .wine
 1237  ls
 1238  cd drive_c/ls
 1239  cd drive_c/
 1240  ls
 1241  cd users/luthra/AppData/Roaming/RenPy/
 1242  ll
 1243  bzip2 -dk TRWTheGame-1.0-linux.tar.bz2
 1244  ll
 1245  cd TRWTheGame-1528671253
 1246  ls
 1247  ;s
 1248  ls
 1249  cd Saves\(1\)
 1250  ls
 1251  pwd
 1252  ls
 1253  mv /home/luthra/Downloads/stuff/Games/TRW/Saves\(1\)/* .
 1254  ll
 1255  clear
 1256  exit
 1257  \tll
 1258  clear
 1259  ls
 1260  cp 1-4-LT1.save /home/luthra/MEGAsync\ Downloads/1-4-LT1.save.bkp
 1261  ll
 1262  mv /home/luthra/MEGAsync\ Downloads/1-4-LT1.save .
 1263  ls
 1264  vi
 1265  vi ~/.config/nvim/init.vim 
 1266  ls
 1267  cd Software\ Developement
 1268  LS
 1269  ls
 1270  cd Golang\ Projects
 1271  ls
 1272  clear
 1273  ls
 1274  cd quiz-game
 1275  ls
 1276  nv
 1277  cat ~/.config/nvim/init.vim
 1278  nv
 1279  clear
 1280  ls
 1281  cd 
 1282  clear
 1283  ls
 1284  cd Desktop
 1285  ls
 1286  gunzip kickstart.nvim-master.zip
 1287  unzip kickstart.nvim-master.zip
 1288  ls
 1289  cd kickstart.nvim-master
 1290  ls
 1291  clear
 1292  ls
 1293  cd doc
 1294  ls
 1295  cd ..
 1296  ls
 1297  cd doc
 1298  ls
 1299  cat tags
 1300  clear
 1301  ls
 1302  vi tags
 1303  cd .
 1304  ls
 1305  cd .. 
 1306  ls
 1307  ll ~/.config/nvim
 1308  ls
 1309  mv ~/.config/nvim/init.vim ~/.config/nvim/init.vim.bkp
 1310  l
 1311  ll
 1312  clear
 1313  ls
 1314  mv * ~/.config/nvim
 1315  cd ~/.config/nvim
 1316  ll
 1317  pwd
 1318  nv
 1319  gcc --version
 1320  sudo dnf install gcc-c++
 1321  g++ --version
 1322  gcc --verison
 1323  gcc --version
 1324  clear
 1325  nv
 1326  ls
 1327  vi lazy-lock.json
 1328  clear
 1329  ls
 1330  cd 
 1331  ls
 1332  cd Desktop
 1333  ls
 1334  rm -rf kickstart.nvim-master
 1335  clear
 1336  ls
 1337  ll
 1338  gunzip linux-6.3.tar.gz
 1339  ll
 1340  exit
 1341  ll
 1342  tar -xvf linux-6.3.tar
 1343  ll
 1344  cd linux-6.3
 1345  ls
 1346  nv
 1347  cd rust
 1348  ls
 1349  vi exports.c
 1350  ls
 1351  cd ~/.config/nvim/
 1352  ls
 1353  vi init.lua
 1354  ls
 1355  cd lua
 1356  ls
 1357  cd ..
 1358  ls
 1359  rm -rf doc
 1360  ls
 1361  rm -rf LICENSE.md
 1362  ls
 1363  rm -rf README.md
 1364  ls
 1365  clear
 1366  ls
 1367  vi lazy-lock.json
 1368  rm -rf lazy-lock.json
 1369  nv
 1370  ls
 1371  vi lua
 1372  cd lua
 1373  ls
 1374  cd custom
 1375  ls
 1376  cd plugins
 1377  ls
 1378  cd ..
 1379  ls
 1380  cd ..
 1381  ls
 1382  cd kickstart
 1383  ls
 1384  cd plugins
 1385  \tls
 1386  vi debug.lua
 1387  cd ../..
 1388  ls
 1389  cd ../
 1390  ls
 1391  vi init.
 1392  vi init.lua
 1393  exit
 1394  ls
 1395  cd ..
 1396  clear
 1397  ls
 1398  cd
 1399  clear
 1400  ls
 1401  cd ~/.local/share/nvim
 1402  ls
 1403  clear
 1404  exit
 1405  cd
 1406  cd Desktop
 1407  ls
 1408  cd linux-6.3
 1409  ls
 1410  nv
 1411  ls
 1412  clear
 1413  ls
 1414  cd 
 1415  ls
 1416  cd ~/.local/share/nvim
 1417  ls
 1418  cd 
 1419  ls
 1420  cd ~/.config/nvim/
 1421  ls
 1422  rm -rf *
 1423  rm -rf ~/.local/share/nvim/\n
 1424  ll ~/.local/share/nvim/
 1425  pwd
 1426  ls
 1427  touch init.lua
 1428  which grep
 1429  /usr/bin/vi init.lua
 1430  nv
 1431  ls
 1432  nv
 1433  ls
 1434  rm -rf *
 1435  ls
 1436  cd 
 1437  ls
 1438  cd Desktop
 1439  ls
 1440  unzip kickstart.nvim-master.zip
 1441  ls
 1442  cd kickstart.nvim-master
 1443  ls
 1444  clear
 1445  la
 1446  ls
 1447  clear
 1448  ls
 1449  cp -r init.lua lua ~/.config/nvim
 1450  ll
 1451  nv
 1452  exot
 1453  exit
 1454  nv
 1455  cd 
 1456  ls
 1457  cd Software\ Developement
 1458  ls
 1459  cd Python\ Projects
 1460  ls
 1461  cd Manga-Downloader/manhwa18/src
 1462  lsd
 1463  ls
 1464  clear
 1465  ls
 1466  nv
 1467  ls
 1468  cd ~/.config/nvim
 1469  ls
 1470  cd lua
 1471  ls
 1472  cd ..
 1473  ls
 1474  vi init.lua
 1475  cd 
 1476  ls
 1477  cd Desktop
 1478  ls
 1479  cd linux-6.3
 1480  ls
 1481  clear
 1482  ls
 1483  vi Makefile
 1484  cd certs
 1485  ls
 1486  nv blacklist.c
 1487  ls
 1488  grep -nr "lsp" .
 1489  nv init.lua
 1490  nv blacklist.c
 1491  cd ~/Software\ Developement/Python\ Projects/Manga-Downloader/manhwa18/src
 1492  ls
 1493  vi download_manager.py
 1494  cd ~/Desktop/linux-6.3
 1495  ls
 1496  cd kernel
 1497  ls
 1498  vi fork.c
 1499  clear
 1500  ls
 1501  cd 
 1502  cd ~/Software\ Developement/Python\ Projects/Onlyfans/OnlyFans
 1503  ls
 1504  cd classes
 1505  ls
 1506  cd ..
 1507  ls
 1508  cd helpers
 1509  \t\tls
 1510  cd ..
 1511  ls
 1512  cd datascraper
 1513  ls
 1514  vi main_datascraper.py
 1515  ls
 1516  cd .
 1517  cd
 1518  ls
 1519  cd ws
 1520  ls
 1521  clear
 1522  ls
 1523  git clone git@github.com:LuthraShivam/coredns.git
 1524  clear
 1525  ls
 1526  cd coredns
 1527  ls
 1528  nv
 1529  cd core/dnsserver
 1530  ls
 1531  nv https
 1532  nv https.go
 1533  nv server_tls.go
 1534  vi fork.c
 1535  nv server_tls.go
 1536  go clean -modcache
 1537  go mod tidy
 1538  ls
 1539  cd ..
 1540  ls
 1541  cd ..
 1542  ls
 1543  cd
 1544  go mod tidy
 1545  cd ws/coredns
 1546  ls
 1547  vi go.
 1548  vi go.mod
 1549  cd 
 1550  ls
 1551  cd ws
 1552  ls
 1553  git clone git@github.com:LuthraShivam/e-maxx-eng.git
 1554  cd e-maxx-eng
 1555  ls
 1556  nv
 1557  ls
 1558  man find
 1559  clear
 1560  ls
 1561  find . -type f -name "*.cpp"
 1562  ls
 1563  nv test/test_dijkstra.cpp
 1564  nv test/test_lichaotree.cpp
 1565  find . -type f -name "lichaotree_line_definition.h"
 1566  CLEAR
 1567  clear
 1568  nv fork.c
 1569  cd ~/.local/share/nvim/
 1570  ls
 1571  cd mason
 1572  ls
 1573  clear
 1574  ls
 1575  cd ..
 1576  ls
 1577  tail -n 10 telescope_history
 1578  clear
 1579  ls
 1580  tail -n 100 telescope_history
 1581  cd mason
 1582  ls
 1583  clear
 1584  ls
 1585  cd packages
 1586  ls
 1587  cd clangd
 1588  ls
 1589  cd clangd_16.0.2
 1590  ls
 1591  cd ..
 1592  ls
 1593  cd mason-schemas
 1594  ls
 1595  cd ..
 1596  ls
 1597  cd clangd_16.0.2/
 1598  ls
 1599  cd bin
 1600  ls
 1601  clear
 1602  ls
 1603  ./clangd -h
 1604  cd ..
 1605  ls
 1606  cd ..
 1607  ls
 1608  cd clangd_16.0.2
 1609  ls
 1610  cd lib/ls
 1611  cd lib/
 1612  ls
 1613  cd clang
 1614  ls
 1615  cd 16/
 1616  ls
 1617  cd include
 1618  ls
 1619  cd
 1620  clear
 1621  ll
 1622  cd
 1623  cd Desktop
 1624  ls
 1625  cd kickstart.nvim-master
 1626  cd ..
 1627  ls
 1628  cd linux-6.3
 1629  ls
 1630  clear
 1631  ls
 1632  vi MAINTAINERS
 1633  clear
 1634  ls
 1635  cd 
 1636  clear
 1637  ls
 1638  vi ~/.config/nvim/init.lua
 1639  cd ~/.local/share/nvim
 1640  ls
 1641  cd mason
 1642  ls
 1643  cd packages
 1644  ls
 1645  cd clangd
 1646  ls
 1647  cd clangd_16.0.2
 1648  ls
 1649  cd ,,
 1650  cd ..
 1651  ls
 1652  cd ..
 1653  ls
 1654  cd ..
 1655  ls
 1656  cd registries
 1657  ls
 1658  cd ..
 1659  ls
 1660  cd share/
 1661  ls
 1662  cd mason-schemas/lsp
 1663  ls
 1664  vi clangd.json
 1665  vi python-lsp-server.json
 1666  cd ../../..
 1667  ls
 1668  cd ..
 1669  ls
 1670  find . -type f -name "*commands.json"
 1671  find . -type f -name "*.json"
 1672  cd 
 1673  ls
 1674  cd ~/.config/nvim/
 1675  ls
 1676  find . -type f -name "*.json"
 1677  lear
 1678  clear
 1679  ls
 1680  cd 
 1681  cd Desktop
 1682  ls
 1683  cd linux-6.3
 1684  ls
 1685  clear
 1686  ls
 1687  make
 1688  \tmake CC=clang defconfig
 1689  make CC=clang
 1690  ls
 1691  make CC=clang
 1692  ll include/config/auto.conf
 1693  ll include/config/
 1694  ll include/
 1695  vi ~/.config/nvim/init.lua
 1696  ls
 1697  clear
 1698  ls
 1699  cd include
 1700  ls
 1701  cd memory
 1702  ls
 1703  vi renesas-rpc-if.h
 1704  vi ~/.config/nvim/init.lua
 1705  ls
 1706  cd ..
 1707  ls
 1708  cd kvm
 1709  ls
 1710  cd ../..
 1711  ls
 1712  cd rust
 1713  ls
 1714  vi exports.c
 1715  cd alloc
 1716  ls
 1717  vi lib.rs
 1718  cd //
 1719  cd
 1720  cd Desktop/linux-6.3
 1721  ls
 1722  cd tools
 1723  ls
 1724  cd cgroup
 1725  ls
 1726  vi iocost_coef_gen.py
 1727  cd ..
 1728  ls
 1729  cd counter
 1730  ls
 1731  vi counter_example.c
 1732  cd .
 1733  cd ..
 1734  ls
 1735  cd kvm
 1736  ls
 1737  cd kvm_stat
 1738  ls
 1739  vi kvm_stat.
 1740  cd ..
 1741  ls
 1742  cd .
 1743  cd ..
 1744  ls
 1745  cd Desktop
 1746  ls
 1747  cd
 1748  ls
 1749  cd ws
 1750  cd coredns
 1751  ls
 1752  nv
 1753  clear
 1754  ls
 1755  clear
 1756  vi in
 1757  ls
 1758  cd ~/.config/nvim
 1759  ls
 1760  vi init.lua
 1761  ls
 1762  vp init.lua init.lua.bkp
 1763  cp init.lua init.lua.bkp
 1764  ks
 1765  ls
 1766  vi init.lua
 1767  wpd
 1768  pwd
 1769  clear
 1770  ls
 1771  cd ~/.config/nvim
 1772  ls
 1773  clear
 1774  ls
 1775  ks
 1776  ls
 1777  cd lua
 1778  ls
 1779  cd custom
 1780  ls
 1781  cd plugins
 1782  ls
 1783  cd ..
 1784  ls
 1785  cd ..
 1786  ls
 1787  cd lua
 1788  sl
 1789  ls
 1790  cd custom
 1791  ls
 1792  cd plugins
 1793  ls
 1794  vi init.lua
 1795  ls
 1796  touch clangd.lua
 1797  vi clangd.lua
 1798  /usr/bin/vi clangd.lua
 1799  vi clangd.lua
 1800  ls
 1801  cd ../
 1802  ls
 1803  cd ..
 1804  ls
 1805  cd ..
 1806  ls
 1807  cd lua/custom/plugins
 1808  ls
 1809  mv clangd.lua clangd.lua.bkp
 1810  cd ../../..
 1811  ls
 1812  vi init.lua
 1813  cd
 1814  cd ~/.config/nvim/lua
 1815  ls
 1816  cd custom/ls
 1817  cd custom/
 1818  ls
 1819  cd plugins
 1820  ls
 1821  vi clangd.lua.bkp
 1822  ls
 1823  vi clangd.lua.bkp
 1824  sudo dnf module install nodejs:18
 1825  sudo dnf install nodejs:18
 1826  sudo dnf install nodejs
 1827  node --version
 1828  clear
 1829  vi clangd.lua.bkp
 1830  clear
 1831  exit
 1832  LS
 1833  ls
 1834  vi clangd.lua.bkp
 1835  cd ../../..
 1836  ls
 1837  vi init.lua
 1838  ls
 1839  cd lua/custom/plugins
 1840  ls
 1841  mv clangd.lua.bkp clangd.lua
 1842  ls
 1843  cd ../../..
 1844  ls
 1845  vi init.lua
 1846  vi init.lua 
 1847  vi init.lua
 1848  cd lua/custom/plugins
 1849  ls
 1850  mv clangd.lua clangd.lua.bkp
 1851  history
 1852  history | grep yum
 1853  exit
 1854  \tcd
 1855  ls
 1856  vi .zshrc
 1857  source ~/.zshrc
 1858  vi
 1859  clear
 1860  exit
 1861  vi
 1862  clear
 1863  exit
 1864  clear
 1865  exit
 1866  sudo rpm --import https://packages.microsoft.com/keys/microsoft.asc\n
 1867  sudo sh -c 'echo -e "[code]\nname=Visual Studio Code\nbaseurl=https://packages.microsoft.com/yumrepos/vscode\nenabled=1\ngpgcheck=1\ngpgkey=https://packages.microsoft.com/keys/microsoft.asc" > /etc/yum.repos.d/vscode.repo'
 1868  dnf check-update\nsudo dnf install code
 1869  clear
 1870  exit
 1871  cd ~/.vscode
 1872  ls
 1873  cd extensions
 1874  ls
 1875  cd ms-vscode.cmake-tools-1.14.31
 1876  ls
 1877  cd 
 1878  cd Desktop/linux-6.3/
 1879  ls
 1880  clear
 1881  ls
 1882  make defconfig
 1883  make mrproper
 1884  make
 1885  make menuconfig
 1886  clear
 1887  make mrproper
 1888  [wd
 1889  pwd
 1890  cd ..
 1891  ls
 1892  pwd
 1893  #make O=/home/name/build/kernel menuconfig
 1894  pwd
 1895  #make O=/home/luthra/Desktop/kernel menuconfig
 1896  cd linux-6.3
 1897  make O=/home/luthra/Desktop/kernel menuconfig
 1898  ls
 1899  cd ..
 1900  ls
 1901  cd kernel
 1902  ls
 1903  cd ..
 1904  ls
 1905  rm -rf kernel
 1906  ls
 1907  cd linux-6.3
 1908  ls
 1909  clear
 1910  ls
 1911  pwd
 1912  ls
 1913  clear
 1914  ls
 1915  make x86_64_defconfig
 1916  ls
 1917  go clean -modcache
 1918  go mod tidy
 1919  ;s
 1920  ls
 1921  clear
 1922  ls
 1923  vi go.sum
 1924  ls
 1925  rm -rf go.sum
 1926  go mod tidy
 1927  clear
 1928  ls
 1929  go mod tidy
 1930  go get -u\n
 1931  LS
 1932  ls
 1933  cd ..
 1934  ls
 1935  rm -rf coredns
 1936  ll
 1937  git clone git@github.com:LuthraShivam/coredns.git
 1938  ls
 1939  cd coredns
 1940  ls
 1941  go --version
 1942  go version
 1943  clear
 1944  ls
 1945  clear
 1946  go version
 1947  go mod tidy
 1948  ls
 1949  make
 1950  clear
 1951  gi mod tidy
 1952  ls
 1953  go mod tidy
 1954  ls
 1955  clear
 1956  ls
 1957  go env
 1958  go env | grep -i cache
 1959  cd /home/luthra/go/pkg/mod
 1960  ls
 1961  cd cloud.google.com
 1962  ls
 1963  cd ..
 1964  ls
 1965  go env | grep -i proxy
 1966  ls
 1967  cd
 1968  cd ws/l
 1969  cd ws/coredns
 1970  sl
 1971  ls
 1972  rm -rg go.sum
 1973  rm -rf go.sum
 1974  clear
 1975  ls
 1976  go clean --modcache
 1977  go mod download
 1978  ls
 1979  cd ws
 1980  ls
 1981  clear
 1982  ls
 1983  git clone git@github.com:vikyd/go-checksum.git
 1984  ls
 1985  cd go-checksum
 1986  ls
 1987  clear
 1988  ls
 1989  go mod tidy
 1990  clear
 1991  ls
 1992  cd ..
 1993  ls
 1994  git clone git@github.com:outcaste-io/ristretto.git
 1995  git checkout v0.2.0
 1996  ls
 1997  cd ristretto
 1998  git checkout v0.2.0
 1999  git log
 2000  ls
 2001  cd ..
 2002  ls
 2003  cd go-checksum
 2004  ls
 2005  cd checksum
 2006  ls
 2007  cd ,,
 2008  c d..
 2009  cd ..
 2010  ls
 2011  make
 2012  ls
 2013  cd ..
 2014  l
 2015  go get -u github.com/vikyd/go-checksum\n
 2016  cd 
 2017  cd re
 2018  cd ws/ristretto
 2019  go get -u github.com/vikyd/go-checksum\n
 2020  ll
 2021  go-checksum go.mod
 2022  git status
 2023  git checkout -- go.mod
 2024  git checkout -- go.go.sum
 2025  cd ..
 2026  ls
 2027  cd go-checksum
 2028  go get -u github.com/vikyd/go-checksum\n
 2029  ;s
 2030  ls
 2031  clear
 2032  ls
 2033  cd ..
 2034  ls
 2035  rm -rf ristretto go-checksum/
 2036  clear
 2037  ls
 2038  cd coredns
 2039  l;s
 2040  clear
 2041  ls
 2042  go mod tidy
 2043  cd 
 2044  go clean -modcache
 2045  cd ws/coredns
 2046  go mod tidy
 2047  go help module-auth
 2048  cd $GOPATH
 2049  ls
 2050  cd go
 2051  ls
 2052  cd pkg/
 2053  ls
 2054  cd mod
 2055  ls
 2056  ll
 2057  cd cache
 2058  ls
 2059  cd download
 2060  ls
 2061  cd ..
 2062  ls
 2063  cd ..
 2064  ls
 2065  cd
 2066  ls
 2067  cd go
 2068  ls
 2069  cd 
 2070  ls
 2071  cd ws
 2072  ls
 2073  rm -rf coredns
 2074  ls
 2075  git clone git@github.com:LuthraShivam/coredns.git
 2076  go mod tidy
 2077  go clean -modcache
 2078  go mod tidy
 2079  echo $GOPROXY
 2080  echo GOPROXY
 2081  export GOPROXY=https://proxy.golang.org\n
 2082  ls
 2083  cd coredns
 2084  ls
 2085  go clean -modcache
 2086  go mod tidy
 2087  exit
 2088  sudo dnf install peazip
 2089  ls
 2090  cd Desktop
 2091  ls
 2092  sudo dnf install peazip-9.2.0.LINUX.GTK2-1.x86_64.rpm
 2093  exit
 2094  displaydns
 2095  cat /etc/resolv.conf
 2096  clear
 2097  ls
 2098  exit
 2099  omz update
 2100  clear
 2101  ls
 2102  mv '[NaPaTa] Pandemonium [English] [Decensored].zip' '[NaPaTa] Pandemonium [English] [Decensored].cbz'
 2103  ls
 2104  cd ws
 2105  ls
 2106  cd ws
 2107  ls
 2108  ls ~/.
 2109  touch ~/.gitignore_global
 2110  vi ~/.gitignore_global
 2111  git config --global core.excludesfile ~/.gitignore_global
 2112  git config --list
 2113  ll /home/luthra/ws/coredns
 2114  exit
 2115  ls
 2116  clear
 2117  ls
 2118  clea
 2119  clear
 2120  ls
 2121  touch 02.md
 2122  date
 2123  ls
 2124  clear
 2125  ls
 2126  touch link.txt
 2127  vi link.txt
 2128  clear
 2129  exit
 2130  sudo systemctl start sshd
 2131  ls
 2132  cd Software\ Developement
 2133  ls
 2134  cd Python\ Projects
 2135  ls
 2136  cd Manga-Downloader
 2137  ls
 2138  mkdir allporncomic
 2139  ls
 2140  cp manhwa18/src/* allporncomic
 2141  cp -r manhwa18/src/* allporncomic
 2142  ls
 2143  cd allporncomic
 2144  ls
 2145  rm -rf __pycache__
 2146  ls
 2147  vi download_manager.py
 2148  ls
 2149  head -10 directory_manager.py
 2150  vi directory_manager.py
 2151  ls
 2152  vi directory_manager.py
 2153  ls
 2154  vi manhwa.yaml
 2155  ls
 2156  vi directory_manager.py
 2157  vi ma
 2158  vi main.py
 2159  python3 directory_manager.py download_manager.py main.py
 2160  ls
 2161  cd ..
 2162  ls
 2163  cd allporncomic
 2164  ls
 2165  vi download_manager.py
 2166  ls
 2167  clear
 2168  ls
 2169  mkdir 1-hearts
 2170  cd 1-hearts
 2171  ls
 2172  python3 -m venv all
 2173  ls
 2174  rm -rf all
 2175  ls
 2176  cd ..
 2177  ls
 2178  python3 -m venv all
 2179  ls
 2180  source all/bin/activate
 2181  ls
 2182  pip --verion
 2183  pip --version
 2184  pip install beautifulsoup
 2185  pip install bs4
 2186  clear
 2187  ls
 2188  python3
 2189  vi main.py
 2190  pip install requests
 2191  ls
 2192  python3
 2193  vi download_manager.py
 2194  ls
 2195  cd 1-hearts
 2196  ls
 2197  pwd
 2198  ls
 2199  cd MEGAsync\ Downloads
 2200  ls
 2201  wget https://cdn05.influencersgonewild.net/videos/Amouranth_Nude_Hardcore_Porn_Debut_Onlyfans_Video_Leaked-KXOWED.mp4
 2202  top
 2203  exit
 2204  top
 2205  clear
 2206  top
 2207  docker ps
 2208  sudo docker ps
 2209  sudo dnf install mkvtoolnix mkvtoolnix-gui
 2210  clear
 2211  ls
 2212  cd Downloads/stuff
 2213  ll | grep -i revna
 2214  mkvmerge --version
 2215  ll | grep -i revna
 2216  mkvmerge -o revna_test.mkv Revna 4K (1).mp4 \+ Revna 4K (2).mp4
 2217  mkvmerge -o revna_test.mkv "Revna 4K (1).mp4" \+ "Revna 4K (2).mp4"
 2218  mkvmerge -o revna_test.mkv "Revna 4K (1).mp4" \+ "Revna 4K (2).mp4" \+ "Revna 4K (3).mp4" \+ "Revna 4K (4).mp4" \+ "Revna 4K (5).mp4"
 2219  clear
 2220  ls
 2221  clear
 2222  ls | grep lara
 2223  ls | grep -i lara
 2224  ls
 2225  ls | grep -i lara
 2226  ls
 2227  find -type d -name "include"
 2228  find -type d -name "stuff"
 2229  clear
 2230  ls
 2231  df -h
 2232  clear
 2233  top
 2234  free -kh
 2235  clear
 2236  exit
 2237  systemctl status ssh
 2238  systemctl status sshd
 2239  systemctl start sshd
 2240  ip a
 2241  cat /etc/passwd
 2242  clear
 2243  ls
 2244  man find
 2245  find . -exec '\bin\bash' \;
 2246  clear
 2247  pwd
 2248  CLEAR
 2249  clear
 2250  find . -exec '\bin\bash' \;
 2251  sudo -l
 2252  which find
 2253  strings find
 2254  strings /usr/bin/fi
 2255  strings /usr/bin/find
 2256  clear
 2257  pwd
 2258  ll /bin/
 2259  ll /bin/bash
 2260  clear
 2261  ls
 2262  find / -exec "/bin/bash" \;
 2263  ls
 2264  clear
 2265  find / -exec "/bin/bash" \;
 2266  ls
 2267  clear
 2268  ls
 2269  pwd
 2270  clear
 2271  pwd
 2272  clear
 2273  whoami
 2274  groups luthra
 2275  id luthra
 2276  groups wheel
 2277  clear
 2278  ls
 2279  clear
 2280  ls
 2281  cd Downloads
 2282  ls
 2283  clear
 2284  cd ..
 2285  ls
 2286  cd Documents
 2287  ls
 2288  grep -inr vm
 2289  clear
 2290  ls
 2291  grep -inr "vm" .
 2292  clear
 2293  cd
 2294  clear
 2295  ls
 2296  clear
 2297  exit
 2298  lslookup eporner.com
 2299  nslookup eporner.com
 2300  nslookup static-ca-cdn.eporner.com
 2301  clear
 2302  nslookup eporner.com
 2303  nmap -O -sV 94.75.220.1
 2304  sudo nmap -O -sV 94.75.220.1
 2305  clear
 2306  ls
 2307  cd Software\ Developement
 2308  ls
 2309  cd C\ Projects
 2310  ls
 2311  clear
 2312  ls
 2313  mkdir stack_overflow
 2314  cd s
 2315  cd stack_overflow
 2316  clear
 2317  ls
 2318  nv
 2319  nvim
 2320  nvim main.c
 2321  ls
 2322  gcc main.c
 2323  gcc --version
 2324  clear
 2325  ls
 2326  ./a.out
 2327  ls
 2328  clear
 2329  ls
 2330  vi main.c
 2331  ll
 2332  ls
 2333  clear
 2334  ls
 2335  gdb a.out
 2336  clear
 2337  ls
 2338  vi main.c
 2339  ;s
 2340  ls
 2341  gdb a.out
 2342  clear
 2343  gdb
 2344  clear
 2345  gdb
 2346  gdb 
 2347  qemu-img -h | tail -n1
 2348  clear
 2349  qemu-img -h | more
 2350  qemu-img -h | grep -i supported
 2351  qemu-img -h | grep -i supported | grep ova
 2352  qemu-img -h | grep -i supported | grep ovf
 2353  clear
 2354  qemu-ing
 2355  qemu-img
 2356  qemu-img --help
 2357  clear
 2358  lks
 2359  clear
 2360  ls
 2361  cd Software\ Developement
 2362  ls
 2363  cd C\ Projects
 2364  ls
 2365  cd objdumpstuff
 2366  ls
 2367  clear
 2368  ls
 2369  vi test2.c
 2370  vi test2.dis
 2371  ls
 2372  cd..
 2373  ls
 2374  cd
 2375  cd ..
 2376  ls
 2377  LS
 2378  ls
 2379  cd
 2380  ls
 2381  cd Software\ Developement
 2382  ls
 2383  clear
 2384  ls
 2385  cd C\ Projects
 2386  ls
 2387  ls -lhtr
 2388  vi logtest.c
 2389  cd objdumpstuff
 2390  ls
 2391  vi test2.c
 2392  ti test2.dis
 2393  vi test2.dis
 2394  clear
 2395  ls
 2396  cd ..
 2397  ls
 2398  cd objdumpstuff
 2399  ls
 2400  clear
 2401  ls
 2402  touch main.c
 2403  code main.c
 2404  clear
 2405  ls
 2406  cat main.c
 2407  clear
 2408  ls
 2409  gcc main.c
 2410  ls
 2411  ./a.out
 2412  objdump -D a.out > objdump_a
 2413  vi objdump_a
 2414  dig google.com +trace
 2415  exit
 2416  cd Documents
 2417  ls
 2418  find . -type f -name "*.sh"
 2419  vi Libvirt\ stuff/installvm.sh
 2420  clear
 2421  ls
 2422  cd
 2423  clear
 2424  ls
 2425  cd /tmp
 2426  ls
 2427  cd
 2428  ks
 2429  ls
 2430  cd Desktop
 2431  ls
 2432  rm -rf kickstart.nvim-master*
 2433  ls
 2434  rm -rf peazip-9.2.0.LINUX.GTK2-1.x86_64.rpm
 2435  ls
 2436  clear
 2437  ls
 2438  rm -rf linux-6.3*
 2439  clear
 2440  ls
 2441  ping 139.59.24.202
 2442  ls
 2443  cd Documents/Certifications/IITK\ -\ Advanced\ Certification\ Program\ in\ Cyber\ Security\ and\ Cyber\ Defense
 2444  ls
 2445  cd Certs
 2446  ls
 2447  ssh -o "IdentitiesOnly=yes" -i id_rsa_shivam shivam@139.59.24.202
 2448  ls
 2449  ls -lh
 2450  ls
 2451  chmod 600 id_rsa_shivam
 2452  ls
 2453  ll
 2454  ssh -o "IdentitiesOnly=yes" -i id_rsa_shivam shivam@139.59.24.202
 2455  ls
 2456  touch playgroundLogin.sh
 2457  vi playgroundLogin.sh
 2458  which shell
 2459  ;s
 2460  ls
 2461  vi playgroundLogin.sh
 2462  #ssh -o "IdentitiesOnly=yes" -i id_rsa_shivam shivam@139.59.24.202
 2463  vi playgroundLogin.sh
 2464  ls
 2465  chmod 644 playgroundLogin.sh
 2466  ls
 2467  ll
 2468  ./playgroundLogin.sh
 2469  ls
 2470  chmod 777 playgroundLogin.sh
 2471  ls
 2472  ll
 2473  ./playgroundLogin.sh
 2474  clear
 2475  ./playgroundLogin.sh
 2476  vi playgroundLogin.sh
 2477  clear
 2478  ls
 2479  cd 
 2480  ls
 2481  cd Documents
 2482  s
 2483  ls
 2484  cd Certifications/IITK\ -\ Advanced\ Certification\ Program\ in\ Cyber\ Security\ and\ Cyber\ Defense
 2485  ls
 2486  cd Certs
 2487  ls
 2488  cd ..
 2489  ls
 2490  cd Hands-On
 2491  ls
 2492  cp cohort_2.ova /home/luthra/Desktop
 2493  ls
 2494  cd
 2495  ls
 2496  cd Desktop
 2497  clear
 2498  ls
 2499  mkdir ova-to-qcow2
 2500  cp cohort_2.ova ova-to-qcow2
 2501  ls
 2502  cd ova-to-qcow2
 2503  ls
 2504  cd ..
 2505  ls
 2506  rm -rf cohort_2.ova
 2507  ls
 2508  cd ova-to-qcow2
 2509  clear
 2510  ls
 2511  ll
 2512  clear
 2513  ls
 2514  tar -xvf cohort_2.ova
 2515  ls
 2516  vi cohort-2.mf
 2517  ls
 2518  vi cohort-2.ovf
 2519  ls
 2520  qemu-img --versin
 2521  qemu-img --version
 2522  qemu-img convert -O qcow2 cohort-2-disk001.vmdk cohort-2-disk001.qcow2
 2523  ls
 2524  clear
 2525  ll
 2526  clear
 2527  ls
 2528  cd Documents
 2529  ls
 2530  cd Libvirt\ stuff
 2531  ls
 2532  vi prereqs-ubuntu.sh
 2533  vi virsh-test.sh
 2534  vi virsh_temp.txt
 2535  ls
 2536  cat installvm.sh
 2537  virt-install
 2538  man virt-install
 2539  virt-install --help
 2540  virt-install --help | grep -i "-c"
 2541  virt-install --help
 2542  ls
 2543  vi temp.sh
 2544  ks
 2545  cd ..
 2546  ls
 2547  cd Documents
 2548  ls
 2549  cd Libvirt\ stuff
 2550  ls
 2551  clear
 2552  ls
 2553  cat installvm.sh
 2554  ls
 2555  chmod 777 temp.sh
 2556  ls
 2557  ./temp.sh
 2558  vi temp.sh
 2559  ./temp.sh
 2560  ip a
 2561  clear
 2562  ls
 2563  libvirt
 2564  service libvirtd status
 2565  sudo service libvirtd start
 2566  ip a
 2567  ./temp.sh
 2568  vi temp.sh
 2569  ./temp.sh
 2570  ll
 2571  vi cohort-2.ovf
 2572  virt-install --osinfo list
 2573  virt-install --osinfo list | grep debian
 2574  vi temp.sh
 2575  ./temp.sh
 2576  sudo
 2577  sudo su
 2578  ls
 2579  history
 2580  qemu-img convert -O qcow2 cohort-2-disk001.vmdk cohort-2-disk001.qcow2
 2581  ll
 2582  sudo su
 2583  sudo dnf -y install @development-tools
 2584  exit
 2585  sudo dnf install kernel-headers kernel-devel dkms -y\n
 2586  sudo reboot
 2587  cat <<EOF | sudo tee /etc/yum.repos.d/virtualbox.repo \n[virtualbox]\nname=Fedora VirtualBox Repo\nbaseurl=http://download.virtualbox.org/virtualbox/rpm/fedora/38/\$basearch\nenabled=1\ngpgcheck=1\nrepo_gpgcheck=1\ngpgkey=https://www.virtualbox.org/download/oracle_vbox_2016.asc\nEOF\n
 2588  ll /etc/yum.repos.d/virtualbox.repo
 2589  cat /etc/yum.repos.d/virtualbox.repo
 2590  sudo dnf search virtualbox
 2591  sudo dnf install VirtualBox-7.0\n
 2592  sudo virtualbox
 2593  sudo dnf -y install kernel-headers kernel-devel dkms elfutils-libelf-devel qt5-qtx11extras
 2594  clear
 2595  ls
 2596  cd Documents/Certifications/IITK\ -\ Advanced\ Certification\ Program\ in\ Cyber\ Security\ and\ Cyber\ Defense
 2597  ls
 2598  cd Hands-On
 2599  ls
 2600  sudo virtualbox
 2601  pwd
 2602  ls
 2603  clear
 2604  sudo virtualbox
 2605  echo $USER
 2606  id $user
 2607  virt-v2v --version
 2608  sudo dnf install virt-v2v\n
 2609  clear
 2610  ls
 2611  cd
 2612  ls
 2613  cd Desktop
 2614  ls
 2615  cd ova-to-qcow2
 2616  ls
 2617  clear
 2618  les
 2619  ls
 2620  rm -rf cohort-2*
 2621  ll
 2622  virt-v2v -i ova cohort_2.ova -of qcow2
 2623  virsh pool-list
 2624  ls
 2625  cd 
 2626  ls
 2627  ls 
 2628  ll /media
 2629  ls
 2630  mkdir libvirt_pool
 2631  ll
 2632  pwd
 2633  virsh pool-define-as --name default --type dir --target /home/luthra/libvirt_pool
 2634  ls
 2635  cd Desktop/ova-to-qcow2
 2636  ls
 2637  virt-v2v -i ova cohort_2.ova -of qcow2
 2638  virsh list --all
 2639  virsh start cohort_02
 2640  virsh pool-autostart default
 2641  virsh pool-start default
 2642  virsh start cohort_02
 2643  virsh pool-list
 2644  virsh list --all
 2645  virsh start cohort_2
 2646  sudo virst start cohort_2
 2647  sudo virsh start cohort_2
 2648  virsh list --all
 2649  sudo virsh start cohort_2
 2650  virsh undefine cohort_2
 2651  ls
 2652  virsh list --all
 2653  virt-v2v -i ova cohort_2.ova -of qcow2
 2654  virsh list --all
 2655  sudo virsh start cohort_2
 2656  virsh start cohort_2
 2657  virsh undefine cohort_2
 2658  sudo su
 2659  ls
 2660  cd libvirt_pool
 2661  ls
 2662  cd ..
 2663  sl
 2664  ls
 2665  cd Documents/Certifications/IITK\ -\ Advanced\ Certification\ Program\ in\ Cyber\ Security\ and\ Cyber\ Defense
 2666  ls
 2667  cd Hands-On
 2668  ls
 2669  clear
 2670  cd ..
 2671  ls
 2672  touch README-OVA-QCOW2.txt
 2673  vi README-OVA-QCOW2.txt
 2674  clear
 2675  cd
 2676  clear
 2677  ls
 2678  virsh list --all
 2679  exit
 2680  ls
 2681  cd
 2682  ls
 2683  cd Documents/Certifications/IITK\ -\ Advanced\ Certification\ Program\ in\ Cyber\ Security\ and\ Cyber\ Defense
 2684  ls
 2685  cd Hands-On
 2686  ls
 2687  clear
 2688  ls
 2689  vi createUser__1_.py
 2690  ls
 2691  vi createUser__1_.py
 2692  \tpython --version
 2693  ls
 2694  python2 --version
 2695  ls
 2696  s
 2697  mkdir class01
 2698  ls
 2699  MV createUser__1_.py Lecture_1_10062023.pdf class01
 2700  LS
 2701  mv createUser__1_.py Lecture_1_10062023.pdf class01
 2702  ls
 2703  cd class01
 2704  ls
 2705  clear
 2706  ls
 2707  pyenv
 2708  sudo dnf install python2
 2709  ls
 2710  cd
 2711  sudo dnf install python2.7
 2712  python2.7 --version
 2713  ls
 2714  python2.7 createUser__1_.py -t http://192.168.124.170/ -u admin -p pass
 2715  python2.7 createUser__1_.py -t http://192.168.124.170/ -u foo -p bar
 2716  ip a
 2717  nc -lvp 9999
 2718  netcat -l -p 9999 -s 192.168.124.1/
 2719  nc -l -p 9999 -s 192.168.124.1
 2720  ip r
 2721  ip a
 2722  nc -lvp 9999 -s 192.168.1.144
 2723  nc -lvp 9999 
 2724  nc --version
 2725  nc -lvp 9999
 2726  lsof -i:9999
 2727  nc -vlp 0.0.0.0 9999
 2728  nc -vl 0.0.0.0 -p 9999
 2729  lsof -i:9999
 2730  nc -vl 0.0.0.0 -p 9999
 2731  nc -l -p 9999
 2732  nc -vl 192.168.1.144 -p 9999
 2733  ls
 2734  nc -v -l -p 9999
 2735  lsof -i:9999
 2736  nc -v -l 192.168.1.144 -p 9999
 2737  nc -v -l -p 123456
 2738  nc -v -l -p 12345
 2739  nc 192.168.1.144 12345
 2740  nc 127.0.0.1 12345
 2741  nc -v -l -p 12345
 2742  nc 127.0.0.1 12345
 2743  nc -v -l -p 12345
 2744  nc 192.168.1.144 12345
 2745  clear
 2746  nc 192.168.1.144 12345
 2747  nc -v -l -p 12345
 2748  iptables -nvL
 2749  sudo iptables -nvL
 2750  sudo iptables -nvL | grep -i reject
 2751  sudo iptables -nvL | grep -i drop
 2752  clear
 2753  ip a
 2754  sudo tcpdump -i wlp5s0 port 9999
 2755  sudo tcpdump -i wlp5s0 port 12345
 2756  ip a
 2757  sudo tcpdump -i virbr0 port 12345
 2758  sudo tcpdump -i virbr0 port 12345 -nneeevvv
 2759  ip r
 2760  nc 192.168.1.144 12345
 2761  nc -v -l -p 12345
 2762  nc 192.168.128.1 12345
 2763  ip a
 2764  nc 192.168.124.1 12345
 2765  nc -v -l -p 12345
 2766  cat /proc/sys/net/ipv4/ip_forward
 2767  iptables -nvL -t NAT
 2768  iptables
 2769  iptables -h
 2770  iptables -nvL
 2771  sudo iptables -nvL
 2772  sudo firewall-cmd --state
 2773  sudo systemctl status firewalld
 2774  firewall-cmd --list-all
 2775  sudo systemctl stop firewalld
 2776  firewall-cmd --list-all
 2777  nc -v -l -p 12345
 2778  ls
 2779  vi passwdfile
 2780  ls
 2781  vi shadowfile
 2782  clear
 2783  ls
 2784  cd
 2785  clear
 2786  ls
 2787  vi shadowfile
 2788  ls
 2789  cd Documents
 2790  ls
 2791  cd
 2792  ls
 2793  cd Desktop/LS
 2794  cd Desktop
 2795  ls
 2796  cd ova-to-qcow2
 2797  ls
 2798  vi t
 2799  ls
 2800  cd ..
 2801  ls
 2802  pwd
 2803  cd ..
 2804  ls
 2805  cd libvirt_pool
 2806  ls
 2807  cd ..
 2808  ls
 2809  mkdir vm_images
 2810  ls
 2811  mv Desktop/Kali-Image/kali-linux-2023.2-qemu-amd64.qcow2 vm_images
 2812  ls
 2813  cd vm_images
 2814  ls
 2815  rm -rf ../Desktop/Kali-Image
 2816  ls
 2817  clear
 2818  ls
 2819  cp ../Desktop/ova-to-qcow2/t .
 2820  LS
 2821  ls
 2822  vi t
 2823  mv t kali-linux-2023.2.xml
 2824  ls
 2825  ll
 2826  vi kali-linux-2023.2.xml
 2827  ls
 2828  vi kali-linux-2023.2
 2829  vi kali-linux-2023.2.xml
 2830  ssh cohort@192.168.124.170
 2831  virsh list --all
 2832  exit
 2833  clear
 2834  ls
 2835  clear
 2836  ls
 2837  cd vm_images
 2838  ls
 2839  clear
 2840  ls
 2841  cd
 2842  clear
 2843  ls
 2844  brctl show
 2845  sudo dnf install bridge-utils
 2846  brctl show
 2847  cd /etc/sysconfig/network-scripts/
 2848  ls
 2849  vi readme-ifcfg-rh.txt
 2850  cd /etc/NetworkManager/system-connections/
 2851  ls
 2852  cat NSA\ SURVEILLANCE\ VAN\ \#5.nmconnection
 2853  sudo cat NSA\ SURVEILLANCE\ VAN\ \#5.nmconnection
 2854  clear
 2855  ls
 2856  cd ..
 2857  ls
 2858  clear
 2859  ls
 2860  cd
 2861  clear
 2862  ls
 2863  ip link add br1 type bridge
 2864  sudo ip link add br1 type bridge
 2865  ip r
 2866  ip a
 2867  sudo ip l set dev br1 up
 2868  ip a
 2869  brctl show
 2870  clear
 2871  sudo brctl show
 2872  ls
 2873  cd vm_images
 2874  ls
 2875  ip a
 2876  ls
 2877  brctl delbr be1
 2878  sudo brctl delbr br1
 2879  ip l set dev br1 down
 2880  sudo ip l set dev br1 down
 2881  sudo brctl delbr br1
 2882  clear
 2883  ip a
 2884  sudo brctl show
 2885  clear
 2886  nmcli device status
 2887  sudo nmcli device status
 2888  clear
 2889  ls
 2890  sudo nmcli device status
 2891  nmcli connection add type bridge con-name br1 ifname br1
 2892  ip a
 2893  nmcli device status
 2894  ip a
 2895  sudo dnf upgrade --refresh\n
 2896  sudo dnf install gimp
 2897  clear
 2898  ls
 2899  gcc -o stack0 stack0.c
 2900  ls
 2901  ./stack0
 2902  echo `python -c 'print("A"*64)'` | ./stack0
 2903  echo `python -c 'print("A"*65)'` | ./stack0
 2904  gcc -o stack0 stack0.c
 2905  echo `python -c 'print("A"*65)'` | ./stack0
 2906  echo `python -c 'print("A"*64)'` | ./stack0
 2907  gcc -o stack0 stack0.c
 2908  echo `python -c 'print("A"*65)'` | ./stack0
 2909  echo `python -c 'print("A"*64)'` | ./stack0
 2910  gcc -o stack0 stack0.c
 2911  echo `python -c 'print("A"*64)'` | ./stack0
 2912  echo `python -c 'print("A"*65)'` | ./stack0
 2913  python -c 'print("A"*64)
 2914  python -c 'print("A"*64)'
 2915  python -c 'print("A"*65)'
 2916  ./stack0
 2917  echo `python -c 'print("A"*70)'` | ./stack0
 2918  echo `python -c 'print("A"*75)'` | ./stack0
 2919  echo `python -c 'print("A"*80)'` | ./stack0
 2920  echo `python -c 'print("A"*78)'` | ./stack0
 2921  echo `python -c 'print("A"*77)'` | ./stack0
 2922  clear
 2923  ls
 2924  gdb stack0
 2925  ls
 2926  gcc -o stack0 stack0.c
 2927  ./stack0
 2928  gcc -o stack0 stack0.c
 2929  ./stack0
 2930  python -c 'print("A"*70)'
 2931  # 64 + 13 = 79
 2932  gcc -o stack0 stack0.c
 2933  ./stack0
 2934  gcc -o stack0 stack0.c
 2935  ./stack0
 2936  gcc -o stack0 stack0.c
 2937  ./stack0
 2938  clear
 2939  ls
 2940  gdb stack0
 2941  gcc -o stack0 stack0.c
 2942  ./stack0
 2943  python
 2944  gcc -o stack0 stack0.c
 2945  ./stack0
 2946  gcc -o stack0 stack0.c
 2947  ./stack0
 2948  gcc -o stack0 stack0.c
 2949  ./stack0
 2950  gcc -o stack0 stack0.c
 2951  ./stack0
 2952  gcc -o stack0 stack0.c
 2953  ./stack0
 2954  gcc -o stack0 stack0.c
 2955  ./stack0
 2956  gcc -o stack0 stack0.c
 2957  ./stack0
 2958  python -c 'print("A"*70)'
 2959  python -c 'print("A"*75)'
 2960  python -c 'print("A"*76)'
 2961  ./stack0
 2962  gcc -o stack0 stack0.c
 2963  ./stack0
 2964  gcc -o stack0 stack0.c
 2965  ./stack0
 2966  gcc -o stack0 stack0.c
 2967  ./stack0
 2968  gcc -o stack0 stack0.c
 2969  ./stack0
 2970  echo `python -c 'print("A"*64)'` | ./stack0
 2971  echo `python -c 'print("A"*65)'` | ./stack0
 2972  ./stack0
 2973  gcc -o stack0 stack0.c
 2974  echo kernel
 2975  sysctl -l
 2976  sysctl -a | grep randomize
 2977  clear
 2978  sysctl -a | grep randomize
 2979  clear
 2980  ./stack0
 2981  ls
 2982  gdb stack0
 2983  y
 2984  ls
 2985  echo `python -c 'print("A"*10005)'` | ./stack0
 2986  echo `python -c 'print("A"*1005)'` | ./stack0
 2987  ls
 2988  cd Documents/Certifications/IITK\ -\ Advanced\ Certification\ Program\ in\ Cyber\ Security\ and\ Cyber\ Defense
 2989  clear
 2990  ls
 2991  cd Code
 2992  ls
 2993  clear
 2994  l
 2995  scat stack0
 2996  scat stack0.c
 2997  ccat stack0.c
 2998  cat stack0.c
 2999  clear
 3000  ls
 3001  vi stack1.c
 3002  clear
 3003  ls
 3004  gcc -o stack1 stack1.c
 3005  ls
 3006  ./stack1
 3007  gcc -o stack1 stack1.c
 3008  ./stack1
 3009  gcc -o stack1 stack1.c
 3010  ./stack1
 3011  gcc -o stack1 stack1.c
 3012  ./stack1
 3013  gcc -o stack1 stack1.c
 3014  ./stack1
 3015  gcc -o stack1 stack1.c
 3016  ./stack1
 3017  clear
 3018  ls
 3019  cd
 3020  clear
 3021  virsh list --all
 3022  sudo su
 3023  ls
 3024  clear
 3025  ls
 3026  gdb stack0
 3027  ls
 3028  vi stack1.c
 3029  ls
 3030  gdb stack1
 3031  man gcc
 3032  ls
 3033  gcc -fstack-protector -o stack1 stack1.c
 3034  ls
 3035  ./stack1
 3036  gdb stack1
 3037  gcc --versin
 3038  gcc --version
 3039  clang --version
 3040  gcc
 3041  gcc --help
 3042  clear
 3043  ls
 3044  cd
 3045  clear
 3046  ls
 3047  cd ws
 3048  ls
 3049  git clone https://github.com/longld/peda.git ~/peda
 3050  ls
 3051  cd ..
 3052  ls
 3053  echo "source ~/peda/peda.py" >> ~/.gdbinit
 3054  ls
 3055  vi .gdbinit
 3056  gdb
 3057  ls
 3058  cd p
 3059  cd peda
 3060  ls
 3061  vi peda.py
 3062  clear
 3063  ls
 3064  cd ..
 3065  ls
 3066  clear
 3067  ls
 3068  clear
 3069  ls
 3070  CKEAR
 3071  CLEAR
 3072  clear
 3073  ls
 3074  cd Documents/Certifications/IITK\ -\ Advanced\ Certification\ Program\ in\ Cyber\ Security\ and\ Cyber\ Defense/Code
 3075  ls
 3076  clear
 3077  ls
 3078  gcc -o ff ff.c
 3079  ls
 3080  ./ff xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'
 3081  ./ff xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
 3082  exit
 3083  objdump -d ff | grep __stack_chk_fail
 3084  objdump -d ff
 3085  cc
 3086  cc -h
 3087  cc --version
 3088  ls
 3089  file stack1
 3090  clear
 3091  ls
 3092  mkdir stack1
 3093  ls
 3094  mkdir test
 3095  cp stack1.c test
 3096  cd test
 3097  ls
 3098  clear
 3099  ls
 3100  gcc -E stack1.c
 3101  cler
 3102  clear
 3103  ls
 3104  clear
 3105  ls
 3106  clear
 3107  ls
 3108  clear
 3109  ls
 3110  cd ..
 3111  ls
 3112  cd test
 3113  ls
 3114  rm stack1.c
 3115  cd ..
 3116  ls
 3117  cp ff* test
 3118  ls
 3119  cd test
 3120  ls
 3121  rm -rf ff
 3122  clear
 3123  s
 3124  clear
 3125  ls
 3126  clear
 3127  ls
 3128  pwd
 3129  clear
 3130  ll
 3131  history
 3132  clear
 3133  ls
 3134  file ff.c
 3135  clear
 3136  ls
 3137  gcc -E ff.c ff.i
 3138  ls
 3139  clear
 3140  ls
 3141  gcc -o ff ff.c
 3142  ls
 3143  ./ff ASDVASDFASDFSDFSDF
 3144  LS
 3145  ls
 3146  vi ff
 3147  vi ff.c
 3148  clear
 3149  ls
 3150  gcc -save-temps -s -o ff ff.c
 3151  ls
 3152  clear
 3153  ls
 3154  gdb ff
 3155  objump ff
 3156  ls
 3157  objdump ff.o
 3158  history | grep objdump
 3159  objdump -d ff | more
 3160  objdump -d ff | grep -C10 main
 3161  objdump -d ff | grep -C10 -i main
 3162  objdump -d ff | grep -C10 -i "main"
 3163  ls
 3164  vi ff.c
 3165  objdump -d ff | grep main
 3166  objdump -D ff.o | grep main
 3167  objdump -D ff.o | grep -A50 main
 3168  ll
 3169  gdb ff
 3170  gdb
 3171  ls
 3172  gdb ff
 3173  clear
 3174  ls
 3175  gdb ff
 3176  ls
 3177  gdb ff
 3178  ls
 3179  gdb ff.o
 3180  ls
 3181  gdb ff.c
 3182  ls
 3183  gdb
 3184  ls
 3185  gcc -g -o ff ff.c
 3186  ls
 3187  gdb ff
 3188  sudo dnf install java-latest-openjdk
 3189  ls
 3190  clear
 3191  cd
 3192  cd /tmp
 3193  ls
 3194  echo "hello world" > temp.txt
 3195  ls
 3196  vi temp.txt
 3197  sha256sum temp.txt
 3198  sha256hmac temp.txt
 3199  sha256hmac temp.txt > checksum
 3200  vi checksum
 3201  sha256sum --check checksum
 3202  ls
 3203  sha256sum temp.txt 
 3204  sha256sum temp.txt > checksum
 3205  sha256sum --check checksum
 3206  clear
 3207  ls
 3208  sha512sum temp.txt
 3209  sha256sum temp.txt 
 3210  python3
 3211  ls
 3212  sha512sum temp.txt
 3213  python3
 3214  clear
 3215  sudo dnf update -y && sudo dnf upgrade -y\n
 3216  sudo dnf info wireshark
 3217  sudo dnf install wireshark -y\n
 3218  sudo wireshark
 3219  nslookup cloudflare.com
 3220  ip a
 3221  ip r
 3222  ipv6 r
 3223  ip -6 r
 3224  clear
 3225  exit
 3226  nslookup 54.85.240.191
 3227  dig 54.85.240.191
 3228  nslookup 54.85.240.191
 3229  clear
 3230  ls
 3231  cd Documents/Certifications/IITK\ -\ Advanced\ Certification\ Program\ in\ Cyber\ Security\ and\ Cyber\ Defense
 3232  ls
 3233  cd C
 3234  cd Code
 3235  clear
 3236  ls
 3237  vi stack1.c
 3238  vi ff.c
 3239  cat ff.c
 3240  vi ff.c
 3241  clear
 3242  ls
 3243  sudo dnf -y install @development-tools
 3244  sudo dnf install kernel-headers kernel-devel dkms -y\n
 3245  wget -q https://www.virtualbox.org/download/oracle_vbox.asc
 3246  sudo rpm --import oracle_vbox.asc
 3247  ll
 3248  rm oracle_vbox.asc
 3249  sudo dnf search virtualbox
 3250  sudo dnf install VirtualBox-7.0 -y\n
 3251  exit
 3252  wget -q https://www.virtualbox.org/download/oracle_vbox.asc
 3253  sudo rpm --import oracle_vbox.asc
 3254  clear
 3255  conntrack -l
 3256  nslookup cscd-iitk.talentsprint.com
 3257  nslookup maple.talentsprint.com
 3258  clear
 3259  man nc
 3260  nc -n
 3261  man nc
 3262  nv -v
 3263  nc -v
 3264  nc -lp 9999
 3265  ip a
 3266  nc -nv 127.0.0.1 9999 -e /bin/bash
 3267  man nc
 3268  nc -nv 127.0.0.1 9999 -e /bin/bash
 3269  nc -lp 9999
 3270  nc -nv 127.0.0.1 9999 -e /bin/bash
 3271  ls
 3272  touch example11.c
 3273  man nc
 3274  ls
 3275  vi example11.c
 3276  rm -rf example11.c
 3277  clear
 3278  ls
 3279  vi1
 3280  vi 1
 3281  clear
 3282  ls
 3283  rm 1
 3284  clear
 3285  ls
 3286  python3
 3287  clear
 3288  exit
 3289  ipconfig
 3290  ifconfig
 3291  clear
 3292  displaydns
 3293  man ip
 3294  ip --version
 3295  ip version
 3296  ip -version
 3297  ip -help
 3298  clear
 3299  netstat -r
 3300  clear
 3301  netstat -r
 3302  netstat -e
 3303  man netstat
 3304  netstat -t
 3305  netstat -tu
 3306  netstat -tun
 3307  netstat -tunp
 3308  netstat -tn
 3309  netstat -tun
 3310  man netstat
 3311  netstat -tunpl
 3312  exit
 3313  traceroute google.com
 3314  nslookup google.com
 3315  ping google.com
 3316  pathping
 3317  mtr
 3318  mtr google.com
 3319  sudo dnf install https://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-$\(rpm -E %fedora).noarch.rpm https://download1.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-$\(rpm -E %fedora).noarch.rpm\n
 3320  sudo dnf install https://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-$\(rpm -E %fedora).noarch.rpm https://download1.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-$\(rpm -E %fedora).noarch.rpm
 3321  clear
 3322  sudo dnf install https://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-$\(rpm -E %fedora).noarch.rpm https://download1.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-$\(rpm -E %fedora).noarch.rpm\n
 3323  rpm -E %fedora
 3324  $\(rpm -E %fedora)
 3325  sudo dnf install https://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-38.noarch.rpm https://download1.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-38.noarch.rpm\n
 3326  sudo dnf install obs-studio
 3327  cd Documents
 3328  find . -name "*.sh"
 3329  vi package_installation.sh
 3330  sudo dnf upgrade
 3331  sudo dnf update
 3332  sudo dnf install dnf-plugins-core
 3333  sudo dnf install audacity\n
 3334  systemctl status sshd
 3335  sudo systemctl start sshd
 3336  systemctl status sshd
 3337  systemctl stop sshd
 3338  systemctl status sshd
 3339  clear
 3340  exit
 3341  w
 3342  wxit
 3343  exit
 3344  sudo modprobe vboxdrv
 3345  sudo dnf install virtualbox-dkms
 3346  sudo usermod -a -G vboxusers $USER
 3347  newgrp vboxusers
 3348  id $USER
 3349  sudo dnf -y install kernel-headers kernel-devel dkms elfutils-libelf-devel qt5-qtx11extras 
 3350  sudo /sbin/vboxconfig
 3351  uname -r
 3352  sudo dnf install kernel-devel-6.2.9-300.fc38.x86_64
 3353  sudo dnf install kernel-devel kernel-headers
 3354  vboxmanage list extpacks
 3355  VboxManage --version
 3356  VboxManage 
 3357  vboxManage 
 3358  vboxmanage --verison
 3359  vboxmanage --version
 3360  clear
 3361  ls
 3362  cd Desktop
 3363  ls
 3364  cd ova-to-qcow2
 3365  ls
 3366  cd
 3367  ls
 3368  cd Documents/Certifications/IITK\ -\ Advanced\ Certification\ Program\ in\ Cyber\ Security\ and\ Cyber\ Defense
 3369  ls
 3370  cd OVA\ FILES
 3371  ls
 3372  cp hacking.ova ~/Desktop/ova-to-qcow2/.
 3373  LS
 3374  ls
 3375  clear
 3376  ls
 3377  #vboxmanage clonehd ""
 3378  pwd
 3379  ks
 3380  ls
 3381  cd
 3382  ls
 3383  cd Desktop/ls
 3384  cd Desktop/
 3385  ls
 3386  cd ova-to-qcow2
 3387  ls
 3388  clear
 3389  ls
 3390  ll
 3391  #vboxmanage clonehd 
 3392  pwd
 3393  vboxmanage clonehd /home/luthra/Desktop/ova-to-qcow2/hacking.ova /home/luthra/Desktop/ova-to-qcow2/hacking.img -format raw
 3394  ll
 3395  ls
 3396  tar -xvf hacking.ova
 3397  ls
 3398  mkdir hacking
 3399  ls
 3400  mv hacking.mf hacking.ovf hacking-disk001.vmdk hacking
 3401  ls
 3402  cd hacking
 3403  ls
 3404  clear
 3405  ls
 3406  cat hacking.ovf
 3407  clear
 3408  ls
 3409  vi hacking.ovf
 3410  ls
 3411  cd ..
 3412  ls
 3413  vi temp.sh
 3414  cd
 3415  ls
 3416  vboxmanage
 3417  vboxmanage -version
 3418  sudo /sbin/vboxconfig
 3419  uname -r
 3420  #sudo dnf install kernel-devel-6.2.9-300.fc38.x86_64
 3421  history | grep dnf
 3422  sudo dnf -y install kernel-headers kernel-devel
 3423  sudo dnf install kernel-devel-6.2.9-300.fc38.x86_64
 3424  sudo dnf list installed kernel-*
 3425  sudo dnf list installed | grep kernel
 3426  sudo dnf list installed | grep kernel-devel
 3427  sudo /sbin/vboxconfig
 3428  ip a
 3429  clear
 3430  ip a
 3431  virsh list --all
 3432  vlear
 3433  sudo virsh list --all
 3434  clear
 3435  exit
 3436  ls
 3437  cd Documents
 3438  ls
 3439  mkdir vpn
 3440  cd vpn
 3441  ls
 3442  echo "5258079656285021" > mullvad.txt
 3443  ls
 3444  ccencrypt
 3445  sudo dnf install ccencrypt
 3446  clear
 3447  ls
 3448  cat mullvad.txt
 3449  clear
 3450  ls
 3451  sudo dnf localinstall MullvadVPN-2023.3_x86_64.rpm
 3452  clear
 3453  exit
 3454  ls
 3455  cd Documents/vpn
 3456  ls
 3457  cat mullvad.txt
 3458  clear
 3459  ls
 3460  cat mullvad
 3461  cat mullvad.txt
 3462  ip a
 3463  clear
 3464  cd Downloads/stuff
 3465  ls
 3466  exit
 3467  ip a
 3468  ip a | grep 10
 3469  ip a | grep 10.
 3470  clear
 3471  ip r
 3472  clear
 3473  ip a
 3474  systemctl status sshd
 3475  systemctl start sshd
 3476  systemctl status sshd
 3477  clear
 3478  ls
 3479  cd Desktop
 3480  ls
 3481  whoami
 3482  pwd
 3483  path ret2libc.zip
 3484  readlink ret2libc.zip
 3485  readlink -f ret2libc.zip
 3486  exit
 3487  cd Desktop
 3488  ls
 3489  unzip ret2libc.zip
 3490  ls
 3491  vi source.c
 3492  ls
 3493  clear
 3494  ls
 3495  python3
 3496  clear
 3497  ls
 3498  cd ws
 3499  ls
 3500  clear
 3501  l
 3502  git clone --bare git@github.com:jgamblin/Mirai-Source-Code.git
 3503  ls
 3504  cd Mirai-Source-Code.git
 3505  ls
 3506  git remote -v
 3507  LS
 3508  ls
 3509  git push --mirror git@github.com:LuthraShivam/Mirai-Source-Code.git
 3510  cd ..
 3511  ls
 3512  rm -rf Mirai-Source-Code.git
 3513  clea
 3514  rls
 3515  clear
 3516  ls
 3517  netstat
 3518  netstat -tunpl
 3519  clea
 3520  clear
 3521  netstat -tunpl | more
 3522  clear
 3523  netstat
 3524  clear
 3525  ls
 3526  vi playgroundLogin.sh l
 3527  ls
 3528  vi playgroundLogin.sh
 3529  ./playgroundLogin.sh
 3530  exit
 3531  ls
 3532  ./playgroundLogin.sh
 3533  ls
 3534  cd Documents
 3535  sl
 3536  ls
 3537  cd Certifications/IITK\ -\ Advanced\ Certification\ Program\ in\ Cyber\ Security\ and\ Cyber\ Defense
 3538  ls
 3539  clear
 3540  ls
 3541  mkdir CTF
 3542  cd CTF/
 3543  ls
 3544  mkdir dirty_read
 3545  cd dirty_read
 3546  ls
 3547  vi analysis.txt
 3548  exit
 3549  ls
 3550  python3 -m venv pwnstuff
 3551  sudo dnf install python3-dev git libssl-dev libffi-dev build-essential
 3552  ls
 3553  source pwnstuff/bin/activate
 3554  ls
 3555  pip install --upgrade pwntools
 3556  ls
 3557  touch payload.py
 3558  vi payload.py
 3559  python3 payload.py
 3560  vi payload.py
 3561  python -c 'print("A"*108)'
 3562  clear
 3563  python3
 3564  lss
 3565  ls
 3566  ./playgroundLogin.sh
 3567  exit
 3568  ls
 3569  cd Documents/Certifications/IITK\ -\ Advanced\ Certification\ Program\ in\ Cyber\ Security\ and\ Cyber\ Defense
 3570  ls
 3571  cd Hands-On
 3572  ls
 3573  cd ..
 3574  ls
 3575  c dctf
 3576  cd CTF
 3577  ls
 3578  cd ..
 3579  ls
 3580  cd Code
 3581  ls
 3582  cd ..
 3583  ls
 3584  cd Certs
 3585  ls
 3586  clear
 3587  ls
 3588  ./playgroundLogin.sh
 3589  cd Documents/Certifications/IITK\ -\ Advanced\ Certification\ Program\ in\ Cyber\ Security\ and\ Cyber\ Defense
 3590  ls
 3591  cd ctf
 3592  ls
 3593  clear
 3594  ls
 3595  cd CTF
 3596  ls
 3597  cd ..
 3598  ls
 3599  cd CTF
 3600  ll dirty_read
 3601  cd .
 3602  ls
 3603  cd ..
 3604  ls
 3605  find . -type d -name "pwn*"
 3606  cd Certs/
 3607  ls
 3608  cd pwnstuff
 3609  ls
 3610  cd ..
 3611  ls
 3612  source pwnstuff/bin/activate
 3613  ls
 3614  clear
 3615  ls
 3616  vi payload.py
 3617  tmux
 3618  ls
 3619  systemctl status sshd
 3620  ip -4 a | more
 3621  pwd
 3622  mv /tmp/lib_exploit.py .
 3623  ls
 3624  vi lib_exploit.py
 3625  ls
 3626  clear
 3627  ls
 3628  vi payload.py
 3629  ls
 3630  vi lib_exploit.py
 3631  ls
 3632  cat payload.py
 3633  clear
 3634  ls
 3635  python3 payload.py
 3636  vi payload.py
 3637  python3 payload.py
 3638  clear
 3639  vi payload.py
 3640  python3 payload.py
 3641  ll
 3642  cat playgroundLogin.sh
 3643  scp exploit -i id_rsa_shivam shivam@139.59.24.202:/home/shivam/dirty_read/.
 3644  scp -i id_rsa_shivam exploit shivam@139.59.24.202:/home/shivam/dirty_read/.
 3645  ls
 3646  clear
 3647  ls
 3648  vi payload.py
 3649  #scp exploit -i id_rsa_shivam shivam@139.59.24.202:/home/shivam/dirty_read/.
 3650  ls
 3651  python3 payload.py
 3652  vi payload.py
 3653  python3 payload.py
 3654  scp exploit -i id_rsa_shivam shivam@139.59.24.202:/home/shivam/dirty_read/.
 3655  vi exploit
 3656  ls
 3657  ./playgroundLogin.sh
 3658  ls
 3659  vi exploit
 3660  scp -i id_rsa_shivam exploit shivam@139.59.24.202:/home/shivam/dirty_read/.
 3661  ls
 3662  vi payload.py
 3663  python3 payload.py
 3664  scp -i id_rsa_shivam exploit shivam@139.59.24.202:/home/shivam/dirty_read/.
 3665  clear
 3666  l
 3667  vi exploit
 3668  vi payload.py
 3669  python3 payload.py
 3670  scp -i id_rsa_shivam exploit shivam@139.59.24.202:/home/shivam/dirty_read/.
 3671  vi payload.py
 3672  python3 payload.py
 3673  scp -i id_rsa_shivam exploit shivam@139.59.24.202:/home/shivam/dirty_read/.
 3674  vi payload.py
 3675  python3 payload.py
 3676  scp -i id_rsa_shivam exploit shivam@139.59.24.202:/home/shivam/dirty_read/.
 3677  vi payload.py
 3678  python3 payload.py
 3679  scp -i id_rsa_shivam exploit shivam@139.59.24.202:/home/shivam/dirty_read/.
 3680  ls
 3681  cat exploit
 3682  python3 payload.py
 3683  vi payload.py
 3684  python3 payload.py
 3685  scp -i id_rsa_shivam exploit shivam@139.59.24.202:/home/shivam/dirty_read/.
 3686  vi payload.py
 3687  python3 payload.py
 3688  scp -i id_rsa_shivam exploit shivam@139.59.24.202:/home/shivam/dirty_read/.
 3689  vi payload.py
 3690  ls
 3691  cd ..
 3692  ls
 3693  cd CTF/
 3694  ls
 3695  cd ..
 3696  ls
 3697  cd Certs
 3698  ls
 3699  vi ../CTF/dirty_read/temp.txt
 3700  ls
 3701  vi payload.py
 3702  clear
 3703  ls
 3704  mv lib_exploit.py payload.py exploit ../CTF/dirty_read
 3705  cd ../CTF/dirty_read
 3706  ls
 3707  mkdir snapshots
 3708  cd snapshots
 3709  ls
 3710  vi 1
 3711  ls
 3712  cd ..
 3713  ls
 3714  vi payload.py
 3715  python3 payload.py
 3716  ls
 3717  pwd
 3718  clear
 3719  ls
 3720  scp -i id_rsa_shivam exploit shivam@139.59.24.202:/home/shivam/dirty_read/.
 3721  #scp -i id_rsa_shivam exploit shivam@139.59.24.202:/home/shivam/dirty_read/.
 3722  ll ../../Certs
 3723  scp -i ../../Certs/id_rsa_shivam exploit shivam@139.59.24.202:/home/shivam/dirty_read/.
 3724  vi payload.py
 3725  vi temp.txt
 3726  vi payload.pyvi payload.py
 3727  vi payload.py
 3728  vi payload.pyvi payload.py
 3729  vi payload.py
 3730  python3
 3731  scp -i ../../Certs/id_rsa_shivam exploit shivam@139.59.24.202:/home/shivam/dirty_read/.
 3732  vi payload.py
 3733  python3 payload.py
 3734  vi payload.py
 3735  python3 payload.py
 3736  scp -i ../../Certs/id_rsa_shivam exploit shivam@139.59.24.202:/home/shivam/dirty_read/.
 3737  vi payload.py
 3738  scp -i ../../Certs/id_rsa_shivam exploit shivam@139.59.24.202:/home/shivam/dirty_read/.
 3739  python3 payload.py
 3740  scp -i ../../Certs/id_rsa_shivam exploit shivam@139.59.24.202:/home/shivam/dirty_read/.
 3741  vi payload.py
 3742  python3 payload.py
 3743  scp -i ../../Certs/id_rsa_shivam exploit shivam@139.59.24.202:/home/shivam/dirty_read/.
 3744  clear
 3745  ls
 3746  vi payload.py
 3747  python3 payload.py
 3748  scp -i ../../Certs/id_rsa_shivam exploit shivam@139.59.24.202:/home/shivam/dirty_read/.
 3749  vi payload.py
 3750  vi temp.txt
 3751  ls
 3752  cp payload.py payload-new.py
 3753  vi payload-new.py
 3754  ls
 3755  python3 payload-new.py
 3756  scp -i ../../Certs/id_rsa_shivam exploit shivam@139.59.24.202:/home/shivam/dirty_read/.
 3757  vi payload-new.py
 3758  python3 payload-new.py
 3759  scp -i ../../Certs/id_rsa_shivam exploit shivam@139.59.24.202:/home/shivam/dirty_read/.
 3760  vi payload-new.py
 3761  \tls
 3762  vi lib_exploit.py
 3763  ls
 3764  vi payload.py
 3765  python3 payload.py
 3766  scp -i ../../Certs/id_rsa_shivam exploit shivam@139.59.24.202:/home/shivam/dirty_read/.
 3767  vi payload
 3768  vi payload.py
 3769  vi payload-new.py
 3770  python3 payload-new.py
 3771  scp -i ../../Certs/id_rsa_shivam exploit shivam@139.59.24.202:/home/shivam/dirty_read/.
 3772  vi payload-new.py
 3773  python3 payload-new.py
 3774  scp -i ../../Certs/id_rsa_shivam exploit shivam@139.59.24.202:/home/shivam/dirty_read/.
 3775  vi payload-new.py
 3776  python3 payload-new.py
 3777  scp -i ../../Certs/id_rsa_shivam exploit shivam@139.59.24.202:/home/shivam/dirty_read/.
 3778  vi payload-new.py
 3779  python3 payload-new.py
 3780  scp -i ../../Certs/id_rsa_shivam exploit shivam@139.59.24.202:/home/shivam/dirty_read/.
 3781  clear
 3782  ls
 3783  vi payload-new.py
 3784  python3 payload-new.py
 3785  vi payload-new.py
 3786  python3 payload-new.py
 3787  vi payload-new.py
 3788  ls
 3789  exit
 3790  ls
 3791  scp -i ../../Certs/id_rsa_shivam  shivam@139.59.24.202:/home/shivam/dirty_read/dirty_read .
 3792  ls
 3793  vi payload-new.py
 3794  echo 0 | sudo tee /proc/sys/kernel/randomize_va_space
 3795  cat lib_exploit.py
 3796  ls
 3797  pwd
 3798  cd ..
 3799  ls
 3800  cd C
 3801  cd CTF
 3802  ls
 3803  cd dirty_read
 3804  ls
 3805  gdb ./dirty_read
 3806  ls
 3807  ll
 3808  vi payload-new.py
 3809  clea
 3810  clear
 3811  ls
 3812  vi struct-payload.py
 3813  ls
 3814  python struct-payload.py
 3815  ls
 3816  vi struct-payload.py
 3817  python3 struct-payload.py
 3818  vi struct-payload.py
 3819  python3 struct-payload.py
 3820  vi struct-payload.py
 3821  python3 struct-payload.py
 3822  exit
 3823  clear
 3824  ls
 3825  scp -i ../../Certs/id_rsa_shivam  shivam@139.59.24.202:/home/shivam/dirty_read/flag.txt .
 3826  vi payload-new.py
 3827  clearl
 3828  clear
 3829  ls
 3830  python3 payload-new.py
 3831  cat exploit
 3832  vi payload-new.py
 3833  python3 payload-new.py
 3834  vi payload-new.py
 3835  ls
 3836  cd 
 3837  ls
 3838  cd ws
 3839  ls
 3840  cd .
 3841  ls
 3842  cd ..
 3843  ls
 3844  cd Software\ Developement
 3845  ls
 3846  cd C\ Projects
 3847  ls
 3848  gcc -save-temps -0 temp insertionsort.c
 3849  gcc -save-temps -o temp insertionsort.c
 3850  ls
 3851  clear
 3852  ls
 3853  cd
 3854  ls
 3855  cd Documents/Certifications/IITK\ -\ Advanced\ Certification\ Program\ in\ Cyber\ Security\ and\ Cyber\ Defense
 3856  ks
 3857  ls
 3858  cd Lib
 3859  ls
 3860  cd ..
 3861  ls
 3862  cd Code
 3863  ls
 3864  cd ..
 3865  ls
 3866  c dcr
 3867  cd CTF
 3868  ls
 3869  cd dirty_read
 3870  ls
 3871  cclear
 3872  ls
 3873  clear
 3874  ls
 3875  vi payload-new.py
 3876  vi payload.py
 3877  clear
 3878  ls
 3879  python3 payload.py
 3880  python4
 3881  python3
 3882  ls
 3883  vi struct-payload.py
 3884  exit
 3885  xit
 3886  exit
 3887  xit
 3888  exit
 3889  man curl
 3890  clear
 3891  curl --trace https://google.com
 3892  curl --trace google.com
 3893  clear
 3894  curl -v --trace out.text http://google.com
 3895  ls
 3896  vi out.text
 3897  clear
 3898  ls
 3899  clear
 3900  vi out.text
 3901  clear
 3902  ls
 3903  cd Documents/Certifications/IITK\ -\ Advanced\ Certification\ Program\ in\ Cyber\ Security\ and\ Cyber\ Defense
 3904  LS
 3905  CLEAR
 3906  LS
 3907  clea
 3908  rls
 3909  clear
 3910  ls
 3911  cd CTF
 3912  LS
 3913  ls
 3914  cd ..
 3915  ls
 3916  cd Hands-On
 3917  ;s
 3918  ls
 3919  cd ..
 3920  ls
 3921  cd Certs
 3922  clear
 3923  ls
 3924  clear
 3925  ls
 3926  ./playgroundLogin.sh
 3927  cd ..
 3928  ls
 3929  cd CTF/ls
 3930  cd CTF/
 3931  ls
 3932  mkdir executable_stack
 3933  cd executable_stack
 3934  ls
 3935  touch main_disas.txt
 3936  vi main_disas.txt
 3937  ls
 3938  vi stack.txt
 3939  clear
 3940  ls
 3941  vi main_disas.txt
 3942  ls
 3943  vi main_disas.txt
 3944  tmxu
 3945  ls
 3946  tmux
 3947  ls
 3948  vi main_disas.txt
 3949  ls
 3950  vi stack-start.txt
 3951  vi stack.txt
 3952  ls
 3953  python3
 3954  vi main_disas.txt
 3955  ls
 3956  cd ..
 3957  ls
 3958  cd dirty_read
 3959  ls
 3960  vi payload.py
 3961  ls
 3962  cp payload.py ../executable_stack
 3963  cd ../executable_stack
 3964  ls
 3965  vi payload.py
 3966  ls
 3967  cd ..
 3968  ls
 3969  cd dirty_read
 3970  sl
 3971  ls
 3972  cd ..
 3973  ls
 3974  cd ..
 3975  ls
 3976  cd CTF
 3977  ls
 3978  find . -type d -name "pwn*"
 3979  ls
 3980  cd ..
 3981  ls
 3982  find . -type d -name "pwn*"
 3983  ls
 3984  cd Certs/
 3985  ls
 3986  source pwnstuff/bin/activate
 3987  ls
 3988  cd ..
 3989  ls
 3990  cd CTF
 3991  ls
 3992  cd executable_stack
 3993  ls
 3994  python3 payload.py
 3995  ls
 3996  scp -i ../../Certs/id_rsa_shivam  payload shivam@139.59.24.202:/home/shivam/executable_stack/.
 3997  ls
 3998  scp -i ../../Certs/id_rsa_shivam exploit shivam@139.59.24.202:/home/shivam/executable_stack/.
 3999  ls
 4000  vi main_disas.txt
 4001  ls
 4002  vi payload.py
 4003  ls
 4004  vi main_disas.txt
 4005  ls
 4006  vi stack.txt
 4007  vi payload.py
 4008  python2
 4009  ls
 4010  vi payload.py
 4011  ls
 4012  vi temp.txt
 4013  exitg
 4014  exit
 4015  clear
 4016  ls
 4017  cd Desktop
 4018  ls
 4019  ll MullvadVPN-2023.4_x86_64.rpm
 4020  sudo dnf install MullvadVPN-2023.4_x86_64.rpm
 4021  sudo dnf install -y MullvadVPN-2023.4_x86_64.rpm
 4022  exit
 4023  ls
 4024  cd Documents/Certifications
 4025  LS
 4026  cd cer
 4027  cd IITK\ -\ Advanced\ Certification\ Program\ in\ Cyber\ Security\ and\ Cyber\ Defense/Certs
 4028  ls
 4029  clear
 4030  ls
 4031  ./playgroundLogin.sh
 4032  clear
 4033  ls
 4034  ./playgroundLogin.sh
 4035  ls
 4036  cat playgroundLogin.sh
 4037  clear
 4038  ls
 4039  cat playgroundLogin.sh
 4040  ls
 4041  clear
 4042  ls
 4043  clear
 4044  ./playgroundLogin.sh
 4045  ls
 4046  cd ..
 4047  ls
 4048  mkdir assembly
 4049  cd assembly
 4050  ls
 4051  touch hello-world.asm
 4052  vi hello-world.asm
 4053  nv hello-world.asm
 4054  nvim hello-world.asm
 4055  cat hello-world.asm
 4056  nasm -f elf32 hello-world.asm hello-world.o
 4057  ls
 4058  sudo dnf install nasm
 4059  nvim hello-world.asm
 4060  nasm -f elf32 hello-world.asm -o hello-world.o
 4061  ls
 4062  ld -m elf_i386 -o hello hello-world.o
 4063  nvim hello-world.asm
 4064  nasm -f elf32 hello-world.asm -o hello-world.o
 4065  ld -m elf_i386 -o hello hello-world.o
 4066  ls
 4067  file hello
 4068  ./hello
 4069  nvim hello-world.asm
 4070  nasm -f elf32 hello-world.asm -o hello-world.o
 4071  ld -m elf_i386 -o hello hello-world.o
 4072  ls
 4073  ./hello
 4074  clear
 4075  ls
 4076  cd ..
 4077  ls
 4078  cd Certs
 4079  ls
 4080  ./playgroundLogin.sh
 4081  man ls
 4082  clear
 4083  ls
 4084  ./playgroundLogin.sh
 4085  exit
 4086  ip a
 4087  clear
 4088  exit
 4089  ip a| more
 4090  route -n
 4091  ping 192.168.1.254
 4092  sudo ping 192.168.1.254
 4093  ping google.com
 4094  clear
 4095  ip a
 4096  exit
 4097  ping google.com
 4098  ping google.com -c 100
 4099  man ping
 4100  ping -f
 4101  ls
 4102  cd Documents/Certifications/IITK\ -\ Advanced\ Certification\ Program\ in\ Cyber\ Security\ and\ Cyber\ Defense
 4103  ls
 4104  cd Certs
 4105  ls
 4106  clear
 4107  ls
 4108  ./playgroundLogin.sh
 4109  python3
 4110  exit
 4111  exity
 4112  exit
 4113  git clone https://github.com/CensoredUsername/unrpyc.git
 4114  ls
 4115  cd temp
 4116  ls
 4117  cd ..
 4118  ls
 4119  cd unrpyc
 4120  ls
 4121  python2 --version
 4122  python2 unrpyc.py ../temp/images.rpy
 4123  python2 unrpyc.py ../temp/images.rpyc
 4124  ls
 4125  vi ../temp/images.rpy
 4126  clear
 4127  ls
 4128  cd ..
 4129  ls
 4130  cd UnR
 4131  cd UnRen_v0.8.2
 4132  LS
 4133  ls
 4134  clea
 4135  clear
 4136  ls
 4137  cd UnRen\ v0.8.2
 4138  ls
 4139  cd UnRen\ Tools/
 4140  ls
 4141  ll ../../../temp/
 4142  ls
 4143  cd ..
 4144  ls
 4145  ./UnRen.command
 4146  LS
 4147  ls
 4148  cd UnRen\ Tools/
 4149  ls
 4150  ./rpatool ../../../temp/archive.rpa
 4151  ./rpatool -h
 4152  ./rpatool ../../../temp/archive.rpa -x
 4153  ./rpatool ../../../temp/images.rpyc -x
 4154  clear
 4155  ./rpatool -x ../../../temp/archive.rpa
 4156  clear
 4157  cd ../../../temp
 4158  ls
 4159  vi images.rpy
 4160  ls
 4161  cd ..
 4162  ls
 4163  cd UnRen_v0.8.2
 4164  ls
 4165  cd UnRen\ v0.8.2/ls
 4166  cd UnRen\ v0.8.2/
 4167  ls
 4168  cd UnRen\ Tools/decompiler
 4169  ls
 4170  cd ..
 4171  ls
 4172  vi rpatool
 4173  cp rpatool ../../../temp
 4174  ls
 4175  cd ../../../temp
 4176  ls
 4177  clear
 4178  ls
 4179  python3 rpatool -x archive.rpa
 4180  /bin/bash rpatool -x archive.rpa
 4181  ip a
 4182  clear
 4183  exit
 4184  ls
 4185  /bin/bash
 4186  ls
 4187  /bin/bash
 4188  ls
 4189  cd Downloads/stuff
 4190  ls
 4191  cd G
 4192  cd Games
 4193  ls
 4194  clea
 4195  clear
 4196  ls
 4197  rm -rf UnRen_v0.8.2
 4198  clear
 4199  ls
 4200  rm -rf unrpyc
 4201  clear
 4202  ls
 4203  exit
 4204  python3
 4205  clear
 4206  ls
 4207  godoc --http=6060
 4208  godoc -http:=6060
 4209  godoc --help
 4210  godoc -http "localhost:6060"
 4211  ls
 4212  clear
 4213  ls
 4214  exit
 4215  ls
 4216  cd Software\ Developement
 4217  ls
 4218  cd C\ Projects
 4219  ls
 4220  clear
 4221  ls
 4222  cd
 4223  ls
 4224  cd Documents/Certifications/IITK\ -\ Advanced\ Certification\ Program\ in\ Cyber\ Security\ and\ Cyber\ Defense
 4225  clear
 4226  ls
 4227  clear
 4228  ls
 4229  cd code
 4230  ls
 4231  clear
 4232  ls
 4233  cd Code
 4234  ls
 4235  clear
 4236  ls
 4237  mkdir integer_overflow
 4238  cd integer_overflow
 4239  clear
 4240  ls
 4241  clear
 4242  vi main.c
 4243  nvim main.c
 4244  ls
 4245  gcc main.c
 4246  ls
 4247  ./a.out
 4248  vi main.c
 4249  nvim main.c
 4250  clear
 4251  ls
 4252  gdb
 4253  clear
 4254  ls
 4255  vi main.c
 4256  gcc main.c
 4257  nvim main.c
 4258  gcc main.c
 4259  ./a.out
 4260  nvim main.c
 4261  gcc main.c
 4262  ./a.out
 4263  gcc main.c
 4264  vi main.c
 4265  nvim main.c
 4266  gcc main.c
 4267  ./a.out
 4268  nvim main.c
 4269  gcc main.c
 4270  ./a.out
 4271  nvim main.c
 4272  gcc main.c
 4273  ./a.out
 4274  nvim main.c
 4275  clear
 4276  gcc main.c
 4277  ./a.out
 4278  nvim main.c
 4279  gcc main.c
 4280  ./a.out
 4281  ls
 4282  nvim sanity.c
 4283  ls
 4284  gcc -o sanity sanity.c
 4285  ./sanity
 4286  vi sanity
 4287  vi sanity.c
 4288  clear
 4289  gcc -o sanity sanity.c
 4290  ./sanity
 4291  vi sanity.c
 4292  ls
 4293  vi main.c
 4294  ls
 4295  cd Documents/Certifications/IITK\ -\ Advanced\ Certification\ Program\ in\ Cyber\ Security\ and\ Cyber\ Defense/Certs
 4296  ls
 4297  clear
 4298  l
 4299  clear
 4300  ./playgroundLogin.sh
 4301  cd
 4302  exit
 4303  ls
 4304  cd ..
 4305  ls
 4306  cd code
 4307  ls
 4308  cd Code
 4309  ls
 4310  clear
 4311  ls
 4312  cd integer_overflow
 4313  ls
 4314  vi main.c
 4315  ls
 4316  vi sanity
 4317  vi sanity.c
 4318  ls
 4319  gcc -o sanity sanity.c
 4320  ls
 4321  ./sanity
 4322  python3
 4323  sl
 4324  ls
 4325  vi sanity
 4326  vi sanity.c
 4327  ls
 4328  vi sanity
 4329  vi sanity.c
 4330  ls
 4331  cp sanity.c sanity2.c
 4332  ls
 4333  vi sanity2.c
 4334  gcc -o sanity2 sanity2.c
 4335  clear
 4336  ls
 4337  ./sanity2
 4338  ls
 4339  vi main.c 
 4340  ./a.out
 4341  vi main.c 
 4342  claer
 4343  clear
 4344  ls
 4345  gcc main.c
 4346  ./a.out
 4347  ls
 4348  vi sanity2.c
 4349  vi main.c
 4350  ./a.out
 4351  ls
 4352  clear
 4353  ls
 4354  cp sanity2.c test.c
 4355  vi test.c
 4356  ls
 4357  clear
 4358  l
 4359  clear
 4360  ls
 4361  gcc -o test test.c
 4362  ./test
 4363  python3
 4364  ls
 4365  vi sanity.c
 4366  vi test.c
 4367  gcc -o test test.c
 4368  ./test
 4369  vi test.c
 4370  gcc -o test test.c
 4371  ./test
 4372  vi test.c
 4373  gcc -o test test.c
 4374  ./test
 4375  vi test
 4376  vi test.c
 4377  ls
 4378  gcc -o test test.c
 4379  ./test
 4380  vi test
 4381  vi test.c
 4382  gcc -o test test.c
 4383  ./test
 4384  vi test.c
 4385  ls
 4386  mkdir temp
 4387  cp 180518-F-IT851-0300.jpeg temp
 4388  cd temp
 4389  ls
 4390  clear
 4391  ls
 4392  hexdump -C 180518-F-IT851-0300.jpeg
 4393  hexdump -C 180518-F-IT851-0300.jpeg | more
 4394  hexdump -C 180518-F-IT851-0300.jpeg
 4395  ckear
 4396  clear
 4397  ls
 4398  python3
 4399  exit
 4400  ping -4 localhosty
 4401  ping -4 localhost
 4402  clear
 4403  ls
 4404  cd Documents/Certifications/IITK\ -\ Advanced\ Certification\ Program\ in\ Cyber\ Security\ and\ Cyber\ Defense/Certs
 4405  clear
 4406  ls
 4407  ./playgroundLogin.sh
 4408  cd ~/Downloads
 4409  ls
 4410  cd stuff
 4411  ls
 4412  wget https://vmirror-iggy50.thub.lol/remote_control.php\?time\=1688845180\&cv\=8a1bc36525af687cd1c70446eca252a5\&lr\=0\&cv2\=7045b9e2bb91ad50cc887bfce8fb002c\&file\=%2Fcontents%2Fvideos%2F736000%2F736362%2F736362.mp4\&cv3\=4ca97e2d7cbbd47afdf9ee2b7ca82ebb\&cv4\=7b6cb0eb2a6e3ab9805fa65558268b97
 4413  ll
 4414  clear
 4415  ls
 4416  cd Documents/Certifications/IITK\ -\ Advanced\ Certification\ Program\ in\ Cyber\ Security\ and\ Cyber\ Defense
 4417  ls
 4418  mkdir capstone_project
 4419  cd capstone_project
 4420  ls
 4421  touch teamName.txt
 4422  vi teamName.txt
 4423  top
 4424  htop
 4425  clea
 4426  clear
 4427  top
 4428  ls
 4429  cd Documents/Certifications/IITK\ -\ Advanced\ Certification\ Program\ in\ Cyber\ Security\ and\ Cyber\ Defense/capstone_project
 4430  ls
 4431  cat teamName.txt
 4432  clear
 4433  systemctl status sshd
 4434  sudo systemctl start sshd
 4435  exit
 4436  vi temp.c
 4437  ls
 4438  gcc -o temp temp.c
 4439  ./temp
 4440  vi temp.c
 4441  ls
 4442  gcc -m32 -o temp temp.c
 4443  clear
 4444  exit
 4445  sudo systemctl status sshd
 4446  ip a
 4447  sudo systemctl status sshd
 4448  sudo systemctl restart sshd
 4449  clear
 4450  whoami
 4451  netstat -tunpl | grep 2
 4452  netstat -tunpl | grep 22
 4453  exit
 4454  omz update
 4455  clear
 4456  ls
 4457  python --version
 4458  python -m venv hugg
 4459  source hugg/bin/activate
 4460  clear
 4461  ls
 4462  pip install datasets evaluate transformers
 4463  ls
 4464  clear
 4465  ls
 4466  python
 4467  pip install transformers[torch]
 4468  deactivate
 4469  ls
 4470  rm -rf hugg
 4471  python -m venv hugface
 4472  source hugface/bin/activate
 4473  pip install transformers[torch]
 4474  pip install datasets evaluate transformers[sentencepiece]
 4475  pip install datasets evaluate transformers[sentencepiece] install datasets evaluate transformers[sentencepiece]
 4476  clear
 4477  ls
 4478  ./playgroundLogin.sh
 4479  ls
 4480  python3
 4481  exit
 4482  python3
 4483  cat /etc/passwd
 4484  chronyd
 4485  clear
 4486  chronyc tracking
 4487  chronyc sources
 4488  cat /etc/group
 4489  ls
 4490  clear
 4491  ll
 4492  ll /
 4493  exit
 4494  arp -n
 4495  clear
 4496  exit
 4497  ls
 4498  cd Software\ Developement
 4499  ls
 4500  cd Python\ Projects
 4501  l;s
 4502  cd Pentest/LS
 4503  cd Pentest/ls
 4504  cd Pentest/
 4505  ls
 4506  clear
 4507  ls
 4508  nv keylogger.py
 4509  nvim keylogger.py
 4510  ls
 4511  python3 keylogger.py
 4512  ls
 4513  python3 -m venv keylog
 4514  ls
 4515  source keylog/bin/activate
 4516  pip install keyboard
 4517  ls
 4518  python3 keylog
 4519  ls
 4520  python3 keylogger.py
 4521  ls
 4522  sudo su
 4523  deactivate
 4524  ls
 4525  sudo su
 4526  fgsdfdsdf
 4527  hi
 4528  hello
 4529  #titties
 4530  #bitch
 4531  #hehe
 4532  #malware
 4533  exit
 4534  python3
 4535  clear
 4536  exit
 4537  sudo dnf install aircrack-ng
 4538  sudo iwconfig
 4539  sudo airmon-ng
 4540  ip a
 4541  sudo airmon-ng start wlp5s0
 4542  exiit
 4543  exit
 4544  luname -r
 4545  uname -r
 4546  clear
 4547  ls
 4548  cd ws
 4549  ls
 4550  clear
 4551  git clone --recurse-submodules https://github.com/lizrice/learning-ebpf\ncd learning-ebpf
 4552  ls
 4553  clear
 4554  ls
 4555  cd ..
 4556  ls
 4557  sudo virsh list --all
 4558  clear
 4559  sudo systemctl status libvirtd
 4560  sudo systemctl start libvirtd
 4561  sudo systemctl enable libvirtd\n
 4562  sudo systemctl start libvirtd
 4563  sudo systemctl status libvirtd
 4564  clear
 4565  ls
 4566  cd ws
 4567  ls
 4568  cd ..
 4569  ls
 4570  cd Documents
 4571  ls
 4572  cd ..
 4573  ls
 4574  cd Software\ Developement
 4575  ls
 4576  cd ..
 4577  ls
 4578  find . -name "*.sh"
 4579  find . -name "*.sh" | grep vm
 4580  vi ./Documents/Libvirt\ stuff/installvm.sh
 4581  ip a
 4582  ip l set dev virbr0 up
 4583  sudo ip l set dev virbr0 up
 4584  ip a
 4585  clear
 4586  brctl show
 4587  ip a virbr0
 4588  ip a 
 4589  clear
 4590  ls
 4591  man virt-install
 4592  vi ./Documents/Libvirt\ stuff/installvm.sh
 4593  ls
 4594  cd Documents
 4595  ks
 4596  LS
 4597  ks
 4598  ls
 4599  cd Libvirt\ stuff
 4600  ls
 4601  clear
 4602  ls
 4603  cat nodesource_setup.sh
 4604  :q!
 4605  clear
 4606  ls
 4607  vi prereqs-ubuntu.sh
 4608  clear
 4609  ls
 4610  vi install-vm.sh
 4611  ls
 4612  cd vm_images
 4613  ls
 4614  mkdir /var/lib/libvirt/images/ubuntu22.04
 4615  sudo mkdir /var/lib/libvirt/images/ubuntu22.04
 4616  ll /var/lib/libvirt/images/ubuntu22.04
 4617  ls
 4618  ll /var/lib/libvirt/images/ubuntu22.04
 4619  cp ubuntu-22.04.2-live-server-amd64.iso /var/lib/libvirt/images/ubuntu22.04/.
 4620  sudo cp ubuntu-22.04.2-live-server-amd64.iso /var/lib/libvirt/images/ubuntu22.04/.
 4621  cd /var/lib/libvirt/images/ubuntu22.04/
 4622  ls
 4623  ll /var/lib/libvirt/images/ubuntu22.04/ubuntu-22.04.2-live-server-amd64.iso
 4624  clear
 4625  ls
 4626  chmod +x install-vm.sh
 4627  ls
 4628  sudo ./install-vm.sh
 4629  vi install-vm.sh
 4630  sudo ./install-vm.sh
 4631  vi install-vm.sh
 4632  virt-install --osinfo list
 4633  virt-install --osinfo list | grep ubuntu
 4634  vi install-vm.sh
 4635  sudo ./install-vm.sh
 4636  sudo virsh list --all
 4637  ip a
 4638  ls
 4639  virsh list --all
 4640  sudo virsh list --all
 4641  virsh console 1
 4642  sudo virt-viewer ubuntu22_04
 4643  exit
 4644  virsh list --sll
 4645  sudo virsh list --all
 4646  clear
 4647  sudo virsh list --all
 4648  sudo virsh start ubuntu22_04
 4649  sudo virsh list --all
 4650  sudo virsh console ubuntu22_04
 4651  ip a
 4652  c;ear
 4653  clear
 4654  sudo virsh console ubuntu22_04
 4655  sudo virsh list --all
 4656  virt-viewer ubuntu22_04
 4657  sudo virt-viewer ubuntu22_04
 4658  ip a
 4659  sudo virt-viewer ubuntu22_04
 4660  ssh luthra@192.168.124.51
 4661  exit
 4662  sudo virsh list --all
 4663  sudo virsh destroy ubuntu22_04
 4664  sudo systemctl status libvirtd
 4665  sudo systemctl status kvm
 4666  sudo systemctl status libvirt
 4667  sudo systemctl status libvirtd
 4668  ks
 4669  ls
 4670  clear
 4671  ls
 4672  cd Documents/Certifications/CompTIA-Security_plus
 4673  ls
 4674  clear
 4675  ls
 4676  vi things-to-revise.md
 4677  sudo systemctl status kvm
 4678  sudo systemctl status libvirtd
 4679  sudo virsh list --all
 4680  sudo /sbin/lsmod | grep kvm
 4681  sudo /sbin/lsmod | grep vbox
 4682  sudo locate kvm
 4683  python3
 4684  clear
 4685  exit
 4686  clear
 4687  ls
 4688  cd ws
 4689  ls
 4690  clear
 4691  ls
 4692  git clone git@github.com:jmorganca/ollama.git
 4693  ls
 4694  cd ollama
 4695  ls
 4696  go build .\n
 4697  exit
 4698  ls
 4699  cd ws/ollama
 4700  ls
 4701  go build .\n
 4702  ls
 4703  cd ..
 4704  ls
 4705  rm -rf ollama
 4706  git clone git@github.com:jmorganca/ollama.git
 4707  cd ollama
 4708  ls
 4709  cd llama
 4710  ls
 4711  cd ..
 4712  ls
 4713  cd ..
 4714  ls
 4715  rm -rf ollama
 4716  ls
 4717  exit
 4718  sudo systemctl status sshd
 4719  sudo systemctl start sshd
 4720  ip a
 4721  sudo systemctl status stop sshd
 4722  sudo systemctl stop sshd
 4723  python3
 4724  ls
 4725  cd ws
 4726  clear
 4727  ls
 4728  mkdir webassembly
 4729  cd webassembly
 4730  clear
 4731  ls
 4732  clear
 4733  ls
 4734  clear
 4735  ls
 4736  clear
 4737  ls
 4738  git clone git@github.com:emscripten-core/emsdk.git
 4739  clear
 4740  ls
 4741  cd emsdk
 4742  clear
 4743  ls
 4744  git pull
 4745  ls
 4746  emsdk install latest
 4747  ls
 4748  ./emsdk install latest
 4749  ;s
 4750  ls
 4751  ls -lhtr
 4752  cd downloads
 4753  ls
 4754  cd ..
 4755  ls
 4756  ll
 4757  emsdk list
 4758  echo $PATH
 4759  source ./emsdk_env.sh
 4760  echo $PATH
 4761  emsdk list
 4762  clear
 4763  ls
 4764  cd scripts
 4765  ls
 4766  cd ..
 4767  ls
 4768  cd ..
 4769  ls
 4770  mkdir tutorial
 4771  cd tutorial
 4772  ls
 4773  mkdir hello_world
 4774  cd hello_world
 4775  ls
 4776  emsdk activate
 4777  clear
 4778  ls
 4779  emsdk activate latest
 4780  emcc -v
 4781  /home/luthra/ws/webassembly/emsdk/upstream/emscripten -v
 4782  source /home/luthra/ws/webassembly/emsdk/emsdk_env.sh
 4783  emcc -v
 4784  clear
 4785  emcc -v
 4786  ls
 4787  clear
 4788  emcc -v
 4789  clear
 4790  exit
 4791  ls
 4792  emcc -v
 4793  ;s
 4794  ls
 4795  clear
 4796  ls
 4797  emcc hello_world.c
 4798  ll
 4799  ls
 4800  node -v
 4801  node a.out.js
 4802  ls
 4803  cd wrapping
 4804  ls
 4805  emcc wrapping.c -o wrapping.js
 4806  ls
 4807  exit
 4808  emcc wrapping.c -o wrapping.js
 4809  emcc wrapping.c -o wrapping.js -s NO_EXIT_RUNTIME=1
 4810  emcc wrapping.c -o wrapping.js -s NO_EXIT_RUNTIME=1 -s EXPORTED_RUNTIME_METHODS=[ccall]
 4811  emcc wrapping.c -o wrapping.js -s NO_EXIT_RUNTIME=1 -s 'EXPORTED_RUNTIME_METHODS=["ccall"]'
 4812  emcc wrapping.c -o wrapping.js -s NO_EXIT_RUNTIME=1 -s 'EXPORTED_RUNTIME_METHODS=["ccall, cwrap"]'
 4813  emcc wrapping.c -o wrapping.js -s NO_EXIT_RUNTIME=1 -s 'EXPORTED_RUNTIME_METHODS=["ccall,cwrap"]'
 4814  emcc wrapping.c -o wrapping.js -s NO_EXIT_RUNTIME=1 -s 'EXPORTED_RUNTIME_METHODS="ccall,cwrap"'
 4815  emcc wrapping.c -o wrapping.js -s NO_EXIT_RUNTIME=1 -s 'EXPORTED_RUNTIME_METHODS=["ccall,cwrap"]'
 4816  emcc wrapping.c -o wrapping.js -s NO_EXIT_RUNTIME=1 -s EXPORTED_RUNTIME_METHODS=["ccall,cwrap"]
 4817  emcc wrapping.c -o wrapping.js -s NO_EXIT_RUNTIME=1 -s 'EXPORTED_RUNTIME_METHODS=[ccall,cwrap]'
 4818  exit
 4819  emcc wrapping.c -o wrapping.js -s NO_EXIT_RUNTIME=1 -s 'EXPORTED_RUNTIME_METHODS=[ccall,cwrap]'
 4820  ls
 4821  ls -lhtr
 4822  exit
 4823  df -h
 4824  clear
 4825  exit
 4826  clear
 4827  ls
 4828  vi huggingface-tutorial.txt
 4829  touch main.md
 4830  nvim main.md
 4831  clear
 4832  ls
 4833  cd
 4834  clear
 4835  ls
 4836  cd ws
 4837  l;s
 4838  ls
 4839  clear
 4840  ls
 4841  cd i
 4842  cd ideas
 4843  ls
 4844  cd ..
 4845  ls
 4846  cd huggingface
 4847  ls
 4848  cd hugface
 4849  ls
 4850  cd ..
 4851  ls
 4852  cd hugface
 4853  ls
 4854  git status
 4855  cd ..
 4856  git status
 4857  clear
 4858  l
 4859  ls
 4860  cd ..
 4861  ls
 4862  mkdir tools
 4863  cd tools
 4864  ls
 4865  mkdir peepdf
 4866  cd peepdf
 4867  ls
 4868  cd ..
 4869  ls
 4870  rm -rf peepdf
 4871  clear
 4872  ls
 4873  git clone git@github.com:jesparza/peepdf.git
 4874  cd peepdf
 4875  ls
 4876  ckear
 4877  clear
 4878  ls
 4879  ./peepdf.py -f /home/luthra/Desktop/DCU_2022-1099-INT.pdf
 4880  ps -ef | grep 1
 4881  ps -ef | grep init
 4882  exit
 4883  sudo systemctl status sshd
 4884  sudo systemctl start sshd
 4885  sudo systemctl stop sshd
 4886  virsh list --all
 4887  sudo virsh list --all
 4888  clear
 4889  sudo virsh list --all
 4890  sudo virsh start ubuntu22_04
 4891  ip a
 4892  sudo systemctl status libvirtd
 4893  sudo systemctl start libvirtd
 4894  sudo systemctl status libvirtd
 4895  ip a
 4896  sudo virsh start ubuntu22_04
 4897  ip a
 4898  clear
 4899  virsh list --all
 4900  sudo virsh list --all
 4901  sudo virsh domifaddr ubuntu22_04
 4902  sudo virsh domiflist ubuntu22_04
 4903  virsh console 1
 4904  virsh console ubuntu22_04
 4905  sudo virsh console ubuntu22_04
 4906  sudo virt-viewer ubuntu22_04
 4907  ls
 4908  ll Documents/Libvirt\ stuff/
 4909  vi Documents/Libvirt\ stuff/install-vm.sh
 4910  ls
 4911  sudo virt-viewer ubuntu22_04
 4912  ls
 4913  find . -type f -name "*.sh"
 4914  viDocuments/Libvirt\ stuff/virsh-test.sh
 4915  vi Documents/Libvirt\ stuff/virsh-test.sh
 4916  clear
 4917  sudo virt-viewer ubuntu22_04
 4918  ls
 4919  cd Documents/Libvirt\ stuff
 4920  ls
 4921  vi install-vm.sh
 4922  ls
 4923  sudo virt-viewer ubuntu22_04
 4924  sudo virsh list --all
 4925  ll /var/lib/libvirt/images
 4926  sudo ll /var/lib/libvirt/images
 4927  sudo ls /var/lib/libvirt/images
 4928  sudo ls /var/lib/libvirt/images/ubuntu22.04
 4929  sudo virsh destroy ubuntu22_04
 4930  sudo virsh undefine ubuntu22_04 --remove-all-storage
 4931  sudo ls /var/lib/libvirt/images/ubuntu22.04
 4932  ls
 4933  vi install-vm.sh
 4934  ls
 4935  ./install-vm.sh
 4936  sudo virsh list --all
 4937  sudo virt-viewer ubuntu22_04
 4938  sudo virsh list --all
 4939  ip a
 4940  sudo virsh list --all
 4941  sudo virsh start ubuntu22_04
 4942  virsh list --all
 4943  sudo virsh list --all
 4944  sudo virsh domifaddr ubuntu22_04
 4945  sudo virsh domiflist ubuntu22_04
 4946  sudo virsh list
 4947  sudo virsh --help
 4948  sudo virsh net-dhcp-leases ubuntu22_04
 4949  ip a
 4950  sudo virsh net-dhcp-leases virbr0
 4951  ls
 4952  sudo virsh list
 4953  sudo virsh console ubuntu22_04
 4954  sudo virt-viewer ubuntu22_04
 4955  ping 192.168.124.2
 4956  ssh luthra@192.168.124.2
 4957  vi ~/.ssh/config
 4958  exit
 4959  sudo virsh list --all
 4960  sudo virt-console ubuntu22_04
 4961  sudo virt-viewer ubuntu22_04
 4962  \tcat ~/.ssh/config
 4963  ssh luthra@192.168.124.2
 4964  sudo virt-viewer ubuntu22_04
 4965  ssh luthra@192.168.124.2
 4966  ping 192.168.124.2
 4967  ip a
 4968  ping 192.168.124.2
 4969  exit
 4970  sudo systemctl start sshd
 4971  ll /usr/bin/fire
 4972  ll /usr/bin/firefox
 4973  sudo strace -f -o firefox_syscall_dump.txt /usr/bin/firefox
 4974  rpm -qa | grep strace
 4975  sudo dnf istall -y strace
 4976  sudo dnf -y istall strace
 4977  dnf install strace
 4978  sudo dnf install strace
 4979  sudo strace -f -o firefox_syscall_dump.txt /usr/bin/firefox
 4980  strace -f -o firefox_syscall_dump.txt /usr/bin/firefox
 4981  ls
 4982  vi firefox_syscall_dump.txt
 4983  ls
 4984  rm -rf firefox_syscall_dump.txt
 4985  clear
 4986  ls
 4987  strace -f -o firefox_syscall_dump.txt /usr/bin/firefox
 4988  ls
 4989  vi firefox_syscall_dump.txt
 4990  clear
 4991  ls
 4992  awk '{print $2}' firefox_syscall_dump.txt > syscall_ff.txt
 4993  vi syscall_ff.txt
 4994  awk '{print $2}' firefox_syscall_dump.txt | sort | uniq -c > syscall_ff.txt
 4995  vi syscall_ff.txt
 4996  awk '{print $2}' firefox_syscall_dump.txt > syscall_ff.txt
 4997  vi syscall_ff.txt
 4998  sudo strace -f -o ls_proc.txt ls /proc
 4999  ls
 5000  vi ls_proc.txt
 5001  clear
 5002  sudo iptables -nvL
 5003  ext
 5004  exit
 5005  ssh luthra@192.168.124.2
 5006  exit
 5007  python3
 5008  sudo dnf install pinta
 5009  clear
 5010  exit
 5011  ./pinta
 5012  ls
 5013  sudo dnf list | grep pinta
 5014  exit
 5015  clear
 5016  ls
 5017  cd Documents
 5018  ls
 5019  vi BMI.txt
 5020  clear
 5021  d
 5022  cd
 5023  clear
 5024  ls
 5025  sudo virsh list --all
 5026  clear
 5027  ls
 5028  sudo virsh list --all
 5029  ip a
 5030  sudo virsh domifaddr 1
 5031  sudo virsh list --all
 5032  sudo virsh domifaddr ubuntu22_04
 5033  ip a
 5034  brctl show
 5035  clear
 5036  ls
 5037  brctl show
 5038  brctl delbr br1
 5039  sudo brctl delbr br1
 5040  ip a
 5041  ip l set dev br1 down
 5042  sudo ip l set dev br1 down
 5043  sudo brctl delbr br1
 5044  clear
 5045  brctl show
 5046  ip a
 5047  clear
 5048  sudo docker ps
 5049  clear
 5050  ls
 5051  cd Documents/Libvirt\ stuff
 5052  ls
 5053  vi install-vm.sh
 5054  lstigris
 5055  ssh luthra@192.168.124.2
 5056  sudo virsh list --all
 5057  sudo virsh shutdown ubuntu22_04
 5058  sudo virsh list --all
 5059  sudo virsh domblklist ubuntu22_04
 5060  sudo qemu-img resize /var/lib/libvirt/images/ubuntu22.04/ubuntu22.04.img + 12G
 5061  sudo qemu-img --help
 5062  sudo qemu-img --help | grep -i resize
 5063  sudo qemu-img resize /var/lib/libvirt/images/ubuntu22.04/ubuntu22.04.img + 12G
 5064  sudo qemu-img resize /var/lib/libvirt/images/ubuntu22.04/ubuntu22.04.img +12G
 5065  ls -lhtr /var/lib/libvirt/images/ubuntu22.04/ubuntu22.04.img
 5066  sudo virsh list --all
 5067  sudo virsh start ubuntu22_04
 5068  ls -lhtr /var/lib/libvirt/images/ubuntu22.04/ubuntu22.04.img
 5069  sudo virsh list --all
 5070  df -h
 5071  ls -lhtr /var/lib/libvirt/images/ubuntu22.04/ubuntu22.04.img
 5072  ssh luthra@192.168.124.2
 5073  ls -lhtr /var/lib/libvirt/images/ubuntu22.04/ubuntu22.04.img
 5074  df -h
 5075  sudo virsh qemu-monitor-command ubuntu22_04 info block --hmp
 5076  sudo virsh qemu-monitor-command ubuntu22_04 block_resize drive-virtio-disk0 23G --hmp
 5077  ssh luthra@192.168.124.2
 5078  sudo virsh list --all
 5079  sudo virsh shutdown ubuntu22_04
 5080  sudo virsh list --all
 5081  sudo virsh qemu-monitor-command ubuntu22_04 block_resize drive-virtio-disk0 23G --hmp
 5082  sudo virsh list --all
 5083  sudo virsh start ubuntu22_04
 5084  sudo virsh list --all
 5085  sudo virsh qemu-monitor-command ubuntu22_04 info block --hmp
 5086  sudo virsh qemu-monitor-command ubuntu22_04 block_resize libvirt-2-format 23G --hmp
 5087  ssh luthra@192.168.124.2
 5088  clear
 5089  ls
 5090  cd
 5091  clear
 5092  ls
 5093  curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-latest.x86_64.rpm\nsudo rpm -Uvh minikube-latest.x86_64.rpm\n
 5094  minikube start\n
 5095  sudo docker ps
 5096  kubectl
 5097  sudo docker ps
 5098  clear
 5099  minls
 5100  ls
 5101  minikube --help
 5102  kubectl
 5103  clear
 5104  kubectl --help
 5105  clear
 5106  exit
 5107  minikube --help
 5108  minikube status
 5109  minikube profile list
 5110  clear
 5111  virt-host-validate
 5112  kvm --verison
 5113  kvm --version
 5114  exit
 5115  minikube start --driver=qemu
 5116  minikube status
 5117  sudo docker ps
 5118  kubectl get nodes
 5119  minikube status
 5120  kubectl version
 5121  kubectl version --short
 5122  kubectl version --output=yaml
 5123  clear
 5124  kubectl version --output=yaml
 5125  kubectl get nodes
 5126  kubectl get podes
 5127  kubectl get pods
 5128  kubectl get services
 5129  ip a
 5130  clear
 5131  sudo brctl show
 5132  clear
 5133  kubectl create -h
 5134  clear
 5135  kubectl create deployment nginx-depl --image=nginx
 5136  kubectl get deployment
 5137  kubectl get pod
 5138  kubectl get replicaset
 5139  kubectl get deployment
 5140  kubectl get pod
 5141  kubectl get replicaset
 5142  kubectl edit deployment nginx-depl
 5143  kubectl get pod
 5144  kubectl edit deployment nginx-depl
 5145  kubectl get replicaset
 5146  kubectl edit deployment nginx-depl
 5147  kubectl logs
 5148  kubectl logs nginx-depl-c8ddc48bf-75jr9
 5149  kubectl get pod
 5150  kubectl logs nginx-depl-6b7698588c-qsw8f
 5151  kubectl create deployment mongo-depl --image=mongo
 5152  kubectl get pod
 5153  sudo docker ps
 5154  sudo docker ls
 5155  kubectl get pod
 5156  kubectl logs mongo-depl-79585f75cf-86sjx
 5157  kubectl edit deployment mongo-depl
 5158  kubectl get pod
 5159  kubectl logs mongo-depl-5d9787b79d-rmgs7
 5160  clear
 5161  kubectl describe pod mongo-depl-5d9787b79d-rmgs7
 5162  kubectl get pod
 5163  kubectl exec mongo-depl-5d9787b79d-rmgs7
 5164  kubectl exec -it mongo-depl-5d9787b79d-rmgs7 
 5165  kubectl exec -it mongo-depl-5d9787b79d-rmgs7 -- bin/bash
 5166  kubectl status
 5167  kubectl get deployment
 5168  kubectl delete deployment mongo-depl
 5169  kubectl get deployment
 5170  kubectl get pod
 5171  kubectl get replicaset
 5172  clear
 5173  kubectl get deployment
 5174  kubectl delete deployment nginx-depl
 5175  kubectl get deployment
 5176  kubectl get replicaset
 5177  kubectl get pod
 5178  clear
 5179  ks
 5180  ls
 5181  cd ws
 5182  ls
 5183  mkdir kubernetes
 5184  cd kubernetes
 5185  clear
 5186  ls
 5187  touch nginx-deployment.yaml
 5188  vi nginx-deployment.yaml
 5189  touch nginx-service.yaml
 5190  vi nginx-service.yaml
 5191  vi nginx-deployment.yaml
 5192  ls
 5193  kubectl apply -f nginx-deployment.yaml
 5194  kubectl get pod
 5195  kubectl get deployment
 5196  ls
 5197  vi nginx-deployment.yaml
 5198  touch text.txt
 5199  vi text.txt
 5200  clear
 5201  exit
 5202  ls
 5203  cd ws
 5204  ls
 5205  cd kubernetes
 5206  ls
 5207  clea
 5208  clear
 5209  ls
 5210  vi nginx-service.yaml
 5211  vi nginx-deployment.yaml
 5212  history | grep kubectl
 5213  kubectl get deployment
 5214  kubectl get deployment nginx-deployment
 5215  kubectl delete deployment nginx-deployment
 5216  kubectl get deployment nginx-deployment
 5217  kubectl get pod
 5218  clear
 5219  ll
 5220  ls
 5221  kubectl apply -f nginx-deployment.yaml
 5222  kubectl get pod
 5223  kubectl apply -f nginx-service.yaml
 5224  kubectl get service
 5225  kubectl describe service nginx-service
 5226  kubectl describe service nginx-service --json
 5227  kubectl describe --help
 5228  kubectl describe service nginx-service --json
 5229  kubectl describe service nginx-service
 5230  ip a
 5231  clear
 5232  kubectl describe service nginx-service
 5233  kubectl get pod -o wide
 5234  kubectl get deployment nginx-deployment -o yaml
 5235  kubectl get deployment nginx-deployment -o yaml > nginx-deployment-result.yaml
 5236  ls
 5237  kubectl delete -f nginx-deployment.yaml
 5238  kubectl delete -f nginx-service.yaml
 5239  clear
 5240  ls
 5241  mkdir mongo-db-project
 5242  cd mongo-db-project
 5243  ls
 5244  clear
 5245  ls
 5246  kubectl get all
 5247  kubectl delete -f nginx-service.yaml
 5248  ls
 5249  clear
 5250  ls
 5251  clear
 5252  ls
 5253  vi mongo.yaml
 5254  clear
 5255  ks
 5256  cd Desktop
 5257  ls
 5258  sudo dnf install balena-etcher-1.18.11.x86_64.rpm
 5259  exit
 5260  ls
 5261  cd mongo-db-project
 5262  ls
 5263  kubectl apply mongo-secret.yaml
 5264  kubectl apply -f mongo-secret.yaml
 5265  kubectl --help | grep mongo
 5266  kubectl --help | grep secret
 5267  kubectl --help 
 5268  clear
 5269  ls
 5270  kubectl get secret
 5271  ll
 5272  kubcetl apply -f mongo.yaml
 5273  kubectl apply -f mongo.yaml
 5274  kubectl show deployment
 5275  kubectl get deployment
 5276  kubectl get all
 5277  clear
 5278  kubectl get all
 5279  kubectl --help | grep status
 5280  kubectl --help
 5281  kubectl get deployment
 5282  kubectl destroy mongodb-deployment
 5283  kubectl get pod
 5284  kubectl describe pod mongodb-deployment-84d7c8b6dd-gplht
 5285  ls
 5286  kubectl get pod
 5287  kubectl describe pod mongodb-deployment-84d7c8b6dd-gplht
 5288  ls
 5289  kubectl apply -f mongo-configmap.yaml 
 5290  kubectl apply -f mongo-express.yaml
 5291  kubectl get pod
 5292  kubectl get pod --watch
 5293  kubectl get deployment
 5294  kubectl delete deploymentmongo-express
 5295  kubectl delete deployment mongo-express
 5296  kubectl delete deployment mongodb-deployment
 5297  kubectl get deployment
 5298  kubectl get secret
 5299  ls
 5300  vi ingress.yaml
 5301  ls
 5302  kubectl apply -f mongo.yaml
 5303  kubectl get deployment --watch
 5304  kubectl get deployment
 5305  kubectl get pod
 5306  kubectl describe pod mongodb-deployment-84d7c8b6dd-2ls78
 5307  ls
 5308  kubectl get deployment
 5309  kubectl delete deployment mongodb-deployment
 5310  ls
 5311  cat mongo-secret.yaml
 5312  clea
 5313  clear
 5314  ls
 5315  kubectl apply -f mongo.yaml
 5316  kubectl get pod --watch
 5317  ls
 5318  kubectl logs mongodb-deployment-84d7c8b6dd-bbz9b
 5319  ls
 5320  kubectl get pod --watch
 5321  kubectl apply -f mongo.yaml
 5322  kubectl get pod --watch
 5323  kubectl get pod
 5324  ls
 5325  kubectl apply -f mongo-configmap.yaml
 5326  ls
 5327  kucebtl get service
 5328  kubectl get service
 5329  kubectl describe mongodb-service
 5330  kubectl describe service mongodb-service
 5331  kubectl get pod
 5332  ls
 5333  kubectl get configmap
 5334  kubectl get service
 5335  kubectl get pod
 5336  kubectl apply -f mongo-express.yaml
 5337  kubectl get pod
 5338  kubectl log mongo-express-58b7cb7879-4vr4r\
 5339  kubectl log mongo-express-58b7cb7879-4vr4r
 5340  kubectl logs mongo-express-58b7cb7879-4vr4r
 5341  ls
 5342  vi ingress.yaml
 5343  kubectl get service
 5344  ls
 5345  clear
 5346  kubectl get service
 5347  ip a
 5348  clear
 5349  ls
 5350  kubectl get service
 5351  minikube service mongo-express-service 
 5352  minikube start --driver qemu --network socket_vmnet
 5353  minikube service mongo-express-service 
 5354  ls
 5355  kubectl get all
 5356  kubectl status
 5357  kubectl --help
 5358  kubectl get pod
 5359  kubectl get namespace
 5360  kubectl get pods
 5361  minikube delete
 5362  kubectl get pods
 5363  clear
 5364  kubectl delete deployment --all\n
 5365  clear
 5366  history | grep minikube
 5367  minikube start --driver qemu --network socket_vmnet
 5368  kubectl version
 5369  kubectl version --client -o json
 5370  clear
 5371  kubectl version -o json
 5372  minikube start --driver=docket
 5373  minikube start --driver=docker
 5374  whoami
 5375  usermod -aG docker luthra
 5376  sudo usermod -aG docker luthra
 5377  minikube start --driver=docker
 5378  sudo groupadd docker
 5379  getent group sudo
 5380  sudo getent group sudo
 5381  whoami
 5382  groups
 5383  cat /etc/group
 5384  cat /etc/group | grep docker
 5385  clear
 5386  groups
 5387  history | grep minikube start
 5388  history | grep "minikube start"
 5389  /usr/local/bin/qemu-system-aarch64 --version
 5390  minikube version
 5391  ll /usr/local/bin
 5392  curl -LO https://storage.googleapis.com/minikube/releases/latest/docker-machine-driver-kvm2
 5393  chmod +x docker-machine-driver-kvm2
 5394  sudo mv docker-machine-driver-kvm2 /usr/local/bin/
 5395  docker-machine-driver-kvm2 version
 5396  sudo usermod -aG libvirt $USER
 5397  groups
 5398  cat /etc/group
 5399  cat /etc/group | grep libvirt
 5400  newgrp libvirt\n
 5401  groups
 5402  minikube config set vm-driver kvm2
 5403  minikube start
 5404  sudo virsh list --all
 5405  kubectl cluster-info
 5406  kubectl config view
 5407  kubectl get nodes
 5408  minikube ssh
 5409  ls
 5410  cd ws
 5411  LS
 5412  ls
 5413  cd kubernetes
 5414  clear
 5415  ls
 5416  kubectl get nodes
 5417  kubectl get all
 5418  ls
 5419  kubectl apply -f mongo-secret.yaml
 5420  ls
 5421  cd mongo-db-project
 5422  ls
 5423  kubectl apply -f mongo-secret.yaml
 5424  kubectl apply -f mongo.yaml
 5425  kubectl get all
 5426  kubectl apply -f mongo-configmap.yaml
 5427  kubectl apply -f mongo-express.yaml
 5428  kubectl get all
 5429  clear
 5430  kubectl cluster-info
 5431  minikube ssh
 5432  ls
 5433  kubectl get service
 5434  minikube service mongo-express-service
 5435  exit
 5436  kubectl get pod
 5437  kubectl logs mongodb-deployment-546dbcdf94-dhvjz
 5438  clear
 5439  ls
 5440  cd ..
 5441  ls
 5442  mkdir namespaces
 5443  kubectl get namespaces
 5444  kubectl cluster-info
 5445  kubectl create namespace my-namespace
 5446  kubectl cluster-info
 5447  kubectl get namespaces
 5448  kubectl delete namespace my-namespace
 5449  exit
 5450  kubectl describe namespaces kube-public
 5451  kubectl describe namespaces my-namespace
 5452  kubectl create namespace my-namespace
 5453  kubectl describe namespaces my-namespace
 5454  kubectl delete namespace my-namespace
 5455  ls
 5456  exit
 5457  ls
 5458  wget https://vdownload-46.sb-cd.com/1/3/13872195-720p.mp4\?secure\=UlKTytAXCMsORDaT8_2MTA,1692379888\&m\=46\&d\=1\&_tid\=13872195
 5459  kubectl api-resources --namespaced=false
 5460  kubectl api-resources --namespaced=true
 5461  ls
 5462  mkdir ingress
 5463  sudo systemctl status sshd
 5464  sudo systemctl start sshd
 5465  exit
 5466  iwgetid
 5467  nm-tool | grep \*
 5468  dnf install wireless-tools
 5469  sudo dnf install wireless-tools
 5470  sudo dnf install wireless-tools-1
 5471  nmcli
 5472  nmcli dev wifi
 5473  clear
 5474  nmcli dev wifi
 5475  exit
 5476  clear
 5477  exit
 5478  ls
 5479  exit
 5480  nslookup chat.facebook.com
 5481  nslookup facebook.com
 5482  nslookup login.facebook.com
 5483  clear
 5484  ls
 5485  cd Desc
 5486  cd Desktop
 5487  ls
 5488  clear
 5489  grep "*.tar.gz" .
 5490  grep -r "*.tar.gz" .
 5491  ls
 5492  ls | grep tar
 5493  tar -xvf discord-0.0.28.tar.gz
 5494  ls
 5495  cd Discord
 5496  ls
 5497  clear
 5498  ls
 5499  exit
 5500  sudo virsh list --all
 5501  history | grep kubectl
 5502  kubectl get nodes
 5503  kubectl get namespaces
 5504  kubectl get pods
 5505  kubectl get ingress
 5506  kubectl get namespaces
 5507  kubectl get ingress kube-system
 5508  ls
 5509  history | grep -i kubectl > kubectl_history_01.txt
 5510  vi kubectl_history_01.txt
 5511  grep -i 30 kubectl_history_01.txt
 5512  ls
 5513  sudo virsh list --all
 5514  vi kubectl_history_01.txt
 5515  minikube ssh
 5516  minikube addons enable ingress
 5517  kubectl get pod -n kube-system
 5518  kubectl get pod
 5519  kubectl get namespace
 5520  kubectl get pod -n kube-public
 5521  kubectl get pod ingress-nginx
 5522  ls
 5523  cd ws
 5524  ls
 5525  cd u
 5526  cd kubernetes
 5527  clear
 5528  ls
 5529  cd ingress
 5530  ls
 5531  vi dashboard-ingress.yaml
 5532  ls
 5533  vi ../../../kubectl_history_01.txt
 5534  kubectl create namespace kubernetes-dashboard
 5535  ls
 5536  kubernetes get ns
 5537  kubectl get ns
 5538  kubectl get all -n kubernetes-dashboard
 5539  ks
 5540  ls
 5541  mkdir helm
 5542  dmesg
 5543  ls -l /dev/ttyUSB0
 5544  echo $USERNAME
 5545  echo USERNAME
 5546  sudo usermod -aG dialout $USERNAME
 5547  screen -v
 5548  sudo dnf install -y screen
 5549  screen /dev/ttyUSB0 115500
 5550  ls -l /dev/ttyUSB0
 5551  ls -l /dev
 5552  ls -l /dev | grep -i usb
 5553  getfacl /dev/ttyUSB0
 5554  exit
 5555  ls
 5556  screen /dev/ttyUSB0 115500
 5557  sudo dnf -y install gtkterm
 5558  ./gtkterm
 5559  gtktern
 5560  gtkter,
 5561  gtkterm
 5562  sudo gtkterm
 5563  cd ws/kubernetes
 5564  ls
 5565  clear
 5566  ls
 5567  cd helm
 5568  ls
 5569  clear
 5570  ls
 5571  mkdir volumes
 5572  cd volumes
 5573  ls
 5574  clear
 5575  kubectl top pod
 5576  ls
 5577  cd ..
 5578  ls
 5579  mkdir statefulset
 5580  ls
 5581  cd .ssh
 5582  ls
 5583  cat aws.pub
 5584  vi aws
 5585  clear
 5586  ls
 5587  ckear
 5588  ks
 5589  cclear
 5590  clear
 5591  ls
 5592  cd
 5593  clear
 5594  ls
 5595  vi syscall_ff.txt
 5596  clear
 5597  ls
 5598  rm -rf syscall_ff.txt
 5599  clear
 5600  ls
 5601  cd go
 5602  ls
 5603  cd ..
 5604  ls
 5605  clear
 5606  ls
 5607  vi ls_proc.txt
 5608  rm ls_proc.txt
 5609  cler
 5610  ls
 5611  clear
 5612  ls
 5613  rm minikube-latest.x86_64.rpm
 5614  clea
 5615  rls
 5616  clear
 5617  ls
 5618  vi out.text
 5619  vi firefox_syscall_dump.txt
 5620  rm firefox_syscall_dump.txt
 5621  clear
 5622  ls
 5623  vi temp
 5624  vi temp.c
 5625  rm -rf temp.c
 5626  ls
 5627  rm -rf temp
 5628  clear
 5629  ls
 5630  cd ws
 5631  clearl
 5632  clear
 5633  ls
 5634  ARCH=amd64
 5635  PLATFORM=$(uname -s)_$ARCH
 5636  echo $PLATFORM
 5637  curl -sLO "https://github.com/eksctl-io/eksctl/releases/latest/download/eksctl_$PLATFORM.tar.gz"\n
 5638  LS
 5639  ls
 5640  curl -sL "https://github.com/eksctl-io/eksctl/releases/latest/download/eksctl_checksums.txt" | grep $PLATFORM | sha256sum --check
 5641  tar -xzf eksctl_$PLATFORM.tar.gz -C /tmp && rm eksctl_$PLATFORM.tar.gz
 5642  sudo mv /tmp/eksctl /usr/local/bin
 5643  eksctl --version
 5644  eksctl -v
 5645  eksctl 
 5646  eksctl version
 5647  clear
 5648  ls
 5649  cd
 5650  ls
 5651  cd .aws
 5652  ls
 5653  clear
 5654  ls
 5655  #shivamluthra_test (#497942555447)
 5656  clear
 5657  exit
 5658  cd .aws
 5659  mkdir .aws
 5660  cd .aws
 5661  ls
 5662  touch credentials
 5663  vi credentials
 5664  ls
 5665  vi config
 5666  cd
 5667  ls
 5668  eksctl cluster create \\n--name test-cluster \\n--version 1.26 \\n--region us-east-1 \\n--nodegroup-name linux-nodes \\n--node-type t2.micro \\n--nodes 2
 5669  eksctl create cluster \\n--name test-cluster \\n--version 1.26 \\n--region us-east-1 \\n--nodegroup-name linux-nodes \\n--node-type t2.micro \\n--nodes 2
 5670  vi /home/luthra/.kube/config
 5671  curl -Lo aws-iam-authenticator https://github.com/kubernetes-sigs/aws-iam-authenticator/releases/download/v0.5.9/aws-iam-authenticator_0.5.9_linux_amd64\n
 5672  ls
 5673  rm -rf aws-iam-authenticator
 5674  aws --version
 5675  curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
 5676  unzip awscliv2.zip
 5677  ks
 5678  ls
 5679  sudo ./aws/install
 5680  aws --version
 5681  kubectl get nodes
 5682  eksctl delete cluster --name test-cluster
 5683  kubectl get nodes
 5684  kubectl list
 5685  kubectl get nodes
 5686  kubectl get node
 5687  clear
 5688  sudo virsh list --all
 5689  clear
 5690  ls
 5691  aws --versin
 5692  aws help
 5693  cat .aws/credentials
 5694  aws help
 5695  aws iam list-access-keys
 5696  eksctl create cluster \\n--name test-cluster \\n--version 1.26 \\n--region us-east-1 \\n--nodegroup-name linux-nodes \\n--node-type t2.micro \\n--nodes 2
 5697  helm version
 5698  exit
 5699  kubectl get nodes
 5700  kubectl get cluster-info
 5701  kubectl get cluster 
 5702  kubectl help
 5703  kubectl cluster-info
 5704  kubectl cluster-info dump
 5705  kubectl cluster-info dump > test_cluster_info.json
 5706  vi test_cluster_info.json
 5707  ls
 5708  rm -rf test_cluster_info.json
 5709  eksctl delete cluster --name test-cluster
 5710  ip a
 5711  ip a | grep -B5 "mullvad"
 5712  ext
 5713  exit
 5714  systemctl start sshd
 5715  python3
 5716  clear
 5717  exit
 5718  ll .ssh/
 5719  cat .ssh/known_hosts
 5720  ls
 5721  ssh -P 2222 root@143.244.134.73
 5722  ssh -v -P 2222 root@143.244.134.73
 5723  ssh -v -p 2222 root@143.244.134.73
 5724  reset
 5725  ssh root@143.244.134.73
 5726  ssh -p 2222 root@143.244.134.73
 5727  /
 5728  ssh -p 2222 root@143.244.134.73
 5729  ssh -p 22 root@143.244.134.73
 5730  reset
 5731  ssh root@143.244.134.73
 5732  ssh -p 22 root@143.244.134.73
 5733  nftables
 5734  iptables --version
 5735  iptables -nvL
 5736  sudo iptables -nvL
 5737  iptables --version
 5738  exit
 5739  ls
 5740  gunzip Hunchly_Dark_Web_Archive.tar.gz
 5741  LS
 5742  ls
 5743  tar -xvf Hunchly_Dark_Web_Archive.tar
 5744  sudo wireshark
 5745  sudo systemctl status sshd
 5746  ls
 5747  cd Documents/Books
 5748  ls
 5749  mkdir Art_Of_Clear_Thinking
 5750  cd Art_Of_Clear_Thinking
 5751  ls
 5752  touch keywords.md
 5753  vi keywords.md
 5754  python3
 5755  awscli --version
 5756  aws --version
 5757  helm version
 5758  ls
 5759  curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3\n
 5760  ls
 5761  chmod 700 get_helm.sh
 5762  vi get_helm.sh
 5763  ./get_helm.sh
 5764  ll
 5765  rm get_helm.sh
 5766  clear
 5767  helm version
 5768  eksctl list clusters
 5769  eksctl --help
 5770  history | grep eksctl
 5771  ls
 5772  cd ws
 5773  ls
 5774  clear
 5775  eksctl create cluster --name k8s-goat-cluster --region us-east-1 --node-type t4g.medium --nodes 2
 5776  kubectl get nodes
 5777  aws eks update-kubeconfig --name k8s-goat-cluster --region us-east-1
 5778  git clone https://github.com/madhuakula/kubernetes-goat.git
 5779  cd kubernetes
 5780  ls
 5781  cd ..
 5782  ls
 5783  cd kubernetes-goat
 5784  ls
 5785  vi setup-kubernetes-goat.sh
 5786  cd scenarios
 5787  ls
 5788  vi build-code
 5789  vi build-code/deployment.yaml
 5790  ls
 5791  cd ..
 5792  ls
 5793  bash setup-kubernetes-goat.sh
 5794  kubectl get nodes
 5795  kubectl get pods
 5796  ls
 5797  kubectl get pods
 5798  kubectl get namespaces
 5799  kubectl get pods
 5800  kubectl describe pod health-check-deployment
 5801  systemctl status docker
 5802  ls
 5803  vi scenarios/health-check/deployment.yaml
 5804  kubectl get pods
 5805  kubectl describe pod --name "health-check-deployment-77c7b6686-qnjn7"
 5806  kubectl describe pod name health-check-deployment-77c7b6686-qnjn7
 5807  ls
 5808  grep -inr "docker.sock" scenarios
 5809  kubectl get pods
 5810  ls
 5811  bash teardown-kubernetes-goat.sh
 5812  ls
 5813  vi scenarios/health-check/deployment-kind.yaml
 5814  vi scenarios/health-check/deployment.yaml
 5815  bash setup-kubernetes-goat.sh
 5816  kubectl get pods
 5817  kubectl get pods\
 5818  kubectl get pods
 5819  ks
 5820  kubectl get pods
 5821  bash access-kubernetes-goat.sh
 5822  ls
 5823  bash teardown-kubernetes-goat.sh
 5824  history | grep eskctl
 5825  history | grep escktl
 5826  history | grep eksctl
 5827  eksctl list clusters
 5828  eksctl delete cluster --name k8s-goat-cluster
 5829  history 50
 5830  eksctl create cluster --name k8s-goat-cluster --region us-east-1 --node-type t4g.medium --nodes 2
 5831  ls
 5832  bash setup-kubernetes-goat.sh
 5833  kubectl get pods
 5834  ls
 5835  bash access-kubernetes-goat.sh
 5836  helm repo add cilium https://helm.cilium.io
 5837  helm repo update
 5838  kubectl get cluster
 5839  kubectl get namespaces
 5840  helm install tetragon cilium/tetragon -n kube-system
 5841  kubectl rollout status -n kube-system ds/tetragon -w\n\n
 5842  kubectl get pods -n kube-system --selector app.kubernetes.io/instance=tetragon
 5843  kubectl logs -n kube-system -l app.kubernetes.io/name=tetragon -c export-stdout -f 
 5844  export POD_NAME=$(kubectl get pods -l "app=system-monitor" -o jsonpath="{.items[0].metadata.name}")\nkubectl exec -it $POD_NAME bash
 5845  kubectl logs -n kube-system -l app.kubernetes.io/name=tetragon -c export-stdout -f | ./tetra getevents -o compact --namespace default --pod system-monitor-deployment-*
 5846  kubectl logs -n kube-system -l app.kubernetes.io/name=tetragon -c export-stdout -f | ./tetra getevents -o compact --namespace default --pod system-monitor-deployment
 5847  ls
 5848  cd ..
 5849  ls
 5850  wget https://github.com/cilium/tetragon/releases/download/v0.9.0/tetra-linux-amd64.tar.gz\n
 5851  tar -xvzf tetra-linux-amd64.tar.gz\n\n
 5852  ls
 5853  cd kubernetes
 5854  ls
 5855  kubectl logs -n kube-system -l app.kubernetes.io/name=tetragon -c export-stdout -f | ./tetra getevents -o compact --namespace default --pod system-monitor-deployment-*
 5856  kubectl logs -n kube-system -l app.kubernetes.io/name=tetragon -c export-stdout -f
 5857  clear
 5858  export POD_NAME=$(kubectl get pods -l "app=system-monitor" -o jsonpath="{.items[0].metadata.name}")\nkubectl exec -it $POD_NAME bash
 5859  kubectl logs -n kube-system -l app.kubernetes.io/name=tetragon -c export-stdout -f
 5860  kubectl exec -it -n kube-system ds/tetragon -c tetragon -- tetra getevents -o compact
 5861  export POD_NAME=$(kubectl get pods -l "app=system-monitor" -o jsonpath="{.items[0].metadata.name}")\nkubectl exec -it $POD_NAME bash
 5862  kubectl exec -it -n kube-system ds/tetragon -c tetragon -- tetra getevents -o compact
 5863  kubectl logs -n kube-system -l app.kubernetes.io/name=tetragon -c export-stdout -f | tetra getevents -o compact
 5864  s
 5865  ls
 5866  cd ..
 5867  ls
 5868  cd kubernetes
 5869  cd ..
 5870  ls
 5871  cd tetr
 5872  ls
 5873  cd tetra
 5874  kubectl logs -n kube-system -l app.kubernetes.io/name=tetragon -c export-stdout -f | tetra getevents -o compact
 5875  kubectl logs -n kube-system -l app.kubernetes.io/name=tetragon -c export-stdout -f | ./tetra getevents -o compact
 5876  export POD_NAME=$(kubectl get pods -l "app=system-monitor" -o jsonpath="{.items[0].metadata.name}")\nkubectl exec -it $POD_NAME bash
 5877  kubectl edit cm -n kube-system tetragon-config
 5878  kubectl rollout restart -n kube-system ds/tetragon\n
 5879  export POD_NAME=$(kubectl get pods -l "app=system-monitor" -o jsonpath="{.items[0].metadata.name}")\nkubectl exec -it $POD_NAME bash
 5880  kubectl logs -n kube-system -l app.kubernetes.io/name=tetragon -c export-stdout -f | ./tetra getevents -o compact
 5881  ls
 5882  cd ..
 5883  ls
 5884  cd kubernetes-goat
 5885  clear
 5886  ls
 5887  grep "/custom/docker/docker.sock" ,
 5888  grep "/custom/docker/docker.sock" .
 5889  grep -inr "/custom/docker/docker.sock" .
 5890  vi ./guide/docs/scenarios/scenario-2/scenario-2.md
 5891  ls
 5892  cd Documents/Certifications/IITK\ -\ Advanced\ Certification\ Program\ in\ Cyber\ Security\ and\ Cyber\ Defense
 5893  ls
 5894  cd capstone_project
 5895  clear
 5896  ls
 5897  touch temp.txt
 5898  vi temp.txt
 5899  export POD_NAME=$(kubectl get pods -l "app=system-monitor" -o jsonpath="{.items[0].metadata.name}")\nkubectl exec -it $POD_NAME bash
 5900  ls
 5901  bash teardown-kubernetes-goat.sh
 5902  history | grep eksctl
 5903  eksctl delete cluster --name k8s-goat-cluster
 5904  history | grep kubectl
 5905  clear
 5906  ls
 5907  cd ..
 5908  ls
 5909  vi temp.txt
 5910  ls
 5911  clear
 5912  ls
 5913  mkdir tetragon_tutorial
 5914  cd tetragon_tutorial/ls
 5915  cd tetragon_tutorial/
 5916  vi 01.txt
 5917  ls
 5918  cd ..
 5919  ls
 5920  mv temp.txt tetragon_tutorial
 5921  cd tetragon_tutorial
 5922  ls
 5923  vi temp.txt
 5924  cat temp.txt
 5925  ls
 5926  vi 01.txt
 5927  sudo virsh list --all
 5928  sudo virsh start ubuntu22_04
 5929  ls
 5930  clear
 5931  ip a
 5932  sudo systemctl status libvirtd
 5933  sudo systemctl start libvirtd
 5934  sudo systemctl status libvirtd
 5935  sudo virsh start ubuntu22_04
 5936  sudo virsh list --al
 5937  sudo virsh list --all
 5938  ssh -p 22 root@143.244.134.73
 5939  sudo virsh console 1
 5940  sudo virt-viewer 1
 5941  ssh luthra@192.168.124.2
 5942  clear
 5943  ls
 5944  cd Desktop
 5945  ls
 5946  scp WhatsApp.apk luthra@192.168.124.2:/home/luthra/android_security/.
 5947  ip a
 5948  pwd
 5949  systemctl status sshd
 5950  systemctl start sshd
 5951  ls
 5952  java -version
 5953  ls
 5954  clear
 5955  exit
 5956  clear
 5957  ls
 5958  clear
 5959  ls
 5960  cd ws
 5961  ls
 5962  cd kubernetes
 5963  ls
 5964  cd ..
 5965  ls
 5966  cd kubernetes-goat
 5967  clear
 5968  ls
 5969  history | eksctl
 5970  history | grep eksctl
 5971  cd ..
 5972  ls
 5973  cd kubernetes-goat
 5974  ls
 5975  touch presentation.txt
 5976  vi presentation.txt
 5977  ls
 5978  history | grep helm
 5979  eksctl create cluster --name k8s-goat-cluster --region us-east-1 --node-type t4g.medium --nodes 2
 5980  ls
 5981  git status
 5982  bash setup-kubernetes-goat.sh
 5983  helm repo add cilium https://helm.cilium.io
 5984  helm repo update
 5985  kubectl get nodes
 5986  helm install tetragon cilium/tetragon -n kube-system
 5987  kubectl rollout status -n kube-system ds/tetragon -w
 5988  kubectl get pods -n kube-system --selector app.kubernetes.io/instance=tetragon
 5989  kubectl logs -n kube-system -l app.kubernetes.io/name=tetragon -c export-stdout -f 
 5990  export POD_NAME=$(kubectl get pods -l "app=system-monitor" -o jsonpath="{.items[0].metadata.name}")\nkubectl exec -it $POD_NAME bash
 5991  clear
 5992  export POD_NAME=$(kubectl get pods -l "app=system-monitor" -o jsonpath="{.items[0].metadata.name}")\nkubectl exec -it $POD_NAME bash
 5993  ls
 5994  vi setup-kubernetes-goat.sh
 5995  ls
 5996  vi scenarios/health-check/deployment.yaml
 5997  ls
 5998  bash teardown-kubernetes-goat.sh
 5999  ls
 6000  vi presentation.txt
 6001  history | grep eksctl
 6002  eksctl delete cluster --name k8s-goat-cluster
 6003  ls
 6004  cd ws
 6005  clear
 6006  ls
 6007  git clone git@github.com:LuthraShivam/microservices-demo.git
 6008  cd microservices-demo
 6009  clear
 6010  ls
 6011  cd release
 6012  ls
 6013  clear
 6014  ls
 6015  vi kubernetes-manifests.yaml
 6016  ls
 6017  #eksctl create cluster --name k8s-goat-cluster --region us-east-1 --node-type t4g.medium --nodes 4
 6018  eksctl create cluster --name microservices-demo --region us-east-1 --node-type t4g.medium --nodes 4
 6019  eksctl delete cluster --name microservices-demo
 6020  eksctl create cluster --name microservices-demo --region us-east-1 --node-type t4g.medium --nodes 2
 6021  ls
 6022  cd ..
 6023  ls
 6024  kubectl apply -f ./release/kubernetes-manifests.yaml\n
 6025  kubectl get pods
 6026  ls
 6027  kubectl get pods
 6028  eksctl delete cluster --name microservices-demo
 6029  ￼
 6030  ￼￼Tip
 6031  Author
 6032  eksctl create cluster --name microservices-demo --region us-east-1 --node-type t3a.medium --nodes 2
 6033  ll
 6034  kubectl apply -f ./release/kubernetes-manifests.yaml\n
 6035  kubectl get pods
 6036  cd ..
 6037  ls
 6038  cd kubernetes-goat
 6039  clear
 6040  ls
 6041  git status
 6042  vi presentation.txt
 6043  helm install tetragon cilium/tetragon -n kube-system
 6044  kubectl get namespaces
 6045  kubectl rollout status -n kube-system ds/tetragon -w
 6046  kubectl get pods -n kube-system --selector app.kubernetes.io/instance=tetragon
 6047  kubectl logs -n kube-system -l app.kubernetes.io/name=tetragon -c export-stdout -f
 6048  ckear
 6049  clear
 6050  kubectl logs -n kube-system -l app.kubernetes.io/name=tetragon -c export-stdout -f
 6051  ls
 6052  grep -inr "privileged: true" kubernetes-manifests
 6053  ls
 6054  grep -inr "privileged: true" release
 6055  vi release/kubernetes-manifests.yaml
 6056  grep -inr "NET_BIND_SERVICE" release
 6057  vi release/kubernetes-manifests.yaml
 6058  vi /tmp/t
 6059  clear
 6060  ls
 6061  python3
 6062  exit
 6063  top
 6064  kubectl get pods
 6065  helm list
 6066  helm help
 6067  helm repo list
 6068  helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx\nhelm repo add prometheus-community https://prometheus-community.github.io/helm-charts\nhelm repo add open-telemetry https://open-telemetry.github.io/opentelemetry-helm-charts\nhelm repo add minio https://operator.min.io\nhelm repo add grafana https://grafana.github.io/helm-charts\nhelm repo add strimzi https://strimzi.io/charts\nhelm repo add elastic https://helm.elastic.co
 6069  helm repo list
 6070  kubectl list pods
 6071  kubectl get pods
 6072  kubectl get pods | grep tetra
 6073  history | grep tetra
 6074  kubectl get pods -n kube-system --selector app.kubernetes.io/instance=tetragon
 6075  kubectl get pods -n kube-system
 6076  helm uninstall tetragon -n kube-system
 6077  helm repo list
 6078  kubectl get pods -n kube-system
 6079  helm template kube-prometheus prometheus-community/kube-prometheus-stack --include-crds \\n  | yq 'select(.kind == "CustomResourceDefinition") * {"metadata": {"annotations": {"meta.helm.sh/release-name": "kube-prometheus", "meta.helm.sh/release-namespace": "monitoring"}}}' \\n  | kubectl create -f -
 6080  vi /tmp/t
 6081  cilium version
 6082  ls
 6083  cd ..
 6084  ls
 6085  cd microservices-demo
 6086  ks
 6087  ls
 6088  vi project_steps.txt
 6089  history
 6090  history | grep eksctl
 6091  history | grep kubectl
 6092  kubectl get pods
 6093  kubectl get ing
 6094  kubectl get 
 6095  kubectl get ingress
 6096  kubectl get ingress -n kube-system
 6097  kubectl get ns
 6098  kubectl get ingress -n kube-public
 6099  kubectl get ingress -n kube-node-lease
 6100  kubectl get nodes -o wide
 6101  kubectl get pods --all-namespaces -l \n
 6102  kubectl get pods --all-namespaces\n
 6103  kubectl get pods --all-namespaces -o wide\n
 6104  c
 6105  lear
 6106  clear
 6107  kubectl version
 6108  sudo dnf install jq
 6109  jq
 6110  clear
 6111  sudo dnf install yq
 6112  ls
 6113  cd
 6114  ls
 6115  cd Desktop
 6116  ls
 6117  tar xz yq-4.35.1.tar.gz
 6118  tar xvf yq-4.35.1.tar.gz
 6119  ls
 6120  cd yq-4.35.1/
 6121  ls
 6122  cd ..
 6123  ls
 6124  rm -rf yq-4.35.1
 6125  ll
 6126  ll /usr/bin
 6127  ls
 6128  ll /usr/bin
 6129  mv yq_linux_amd64 /usr/bin/yq
 6130  sudo mv yq_linux_amd64 /usr/bin/yq
 6131  yq
 6132  sudo yq
 6133  ll /usr/bin
 6134  ll /usr/bin/yq
 6135  cd /usr/bin/yq
 6136  ls
 6137  sudo chmod +x /usr/bin/yq
 6138  yq
 6139  yq -v
 6140  yq version
 6141  clear
 6142  yq --version
 6143  clear
 6144  CILIUM_CLI_VERSION=$(curl -s https://raw.githubusercontent.com/cilium/cilium-cli/main/stable.txt)\nCLI_ARCH=amd64\nif [ "$(uname -m)" = "aarch64" ]; then CLI_ARCH=arm64; fi\ncurl -L --fail --remote-name-all https://github.com/cilium/cilium-cli/releases/download/$\{CILIUM_CLI_VERSION\}/cilium-linux-$\{CLI_ARCH\}.tar.gz\{,.sha256sum\}\nsha256sum --check cilium-linux-${CLI_ARCH}.tar.gz.sha256sum\nsudo tar xzvfC cilium-linux-${CLI_ARCH}.tar.gz /usr/local/bin\nrm cilium-linux-${CLI_ARCH}.tar.gz{,.sha256sum}\n
 6145  ls
 6146  clear
 6147  CILIUM_CLI_VERSION=$(curl -s https://raw.githubusercontent.com/cilium/cilium-cli/main/stable.txt)\nCLI_ARCH=amd64\nif [ "$(uname -m)" = "aarch64" ]; then CLI_ARCH=arm64; fi\n
 6148  echo $CLI_ARCH
 6149  curl -L --fail --remote-name-all https://github.com/cilium/cilium-cli/releases/download/$\{CILIUM_CLI_VERSION\}/cilium-linux-$\{CLI_ARCH\}.tar.gz\{,.sha256sum\}\nsha256sum --check cilium-linux-${CLI_ARCH}.tar.gz.sha256sum
 6150  echo https://github.com/cilium/cilium-cli/releases/download/$\{CILIUM_CLI_VERSION\}/cilium-linux-$\{CLI_ARCH\}.tar.gz\{,.sha256sum\}
 6151  printf("https://github.com/cilium/cilium-cli/releases/download/$\{CILIUM_CLI_VERSION\}/cilium-linux-$\{CLI_ARCH\}.tar.gz\{,.sha256sum\}")
 6152  echo #CILIUM_CLI_VERSION\
 6153  echo $CILIUM_CLI_VERSION\
 6154  echo $CILIUM_CLI_VERSION
 6155  curl -L --fail --remote-name-all https://github.com/cilium/cilium-cli/releases/download/v0.15.7/cilium-linux-amd64.tar.gz\{,.sha256sum\}
 6156  sha256sum --check cilium-linux-${CLI_ARCH}.tar.gz.sha256sum
 6157  sudo tar xzvfC cilium-linux-${CLI_ARCH}.tar.gz /usr/local/bin
 6158  rm cilium-linux-${CLI_ARCH}.tar.gz{,.sha256sum}
 6159  cilium -version
 6160  cilium --version
 6161  cilium -v
 6162  cilium v
 6163  cilium version
 6164  clear
 6165  ls
 6166  git status
 6167  vi project_steps.txt
 6168  helm template kube-prometheus prometheus-community/kube-prometheus-stack --include-crds \\n  | yq 'select(.kind == "CustomResourceDefinition") * {"metadata": {"annotations": {"meta.helm.sh/release-name": "kube-prometheus", "meta.helm.sh/release-namespace": "monitoring"}}}' \\n  | kubectl create -f -\n
 6169  kubectl create ns monitoring
 6170  MASTER_IP="$(docker inspect cilium-grafana-observability-demo-control-plane | jq '.[0].NetworkSettings.Networks.kind.IPAddress' -r)"
 6171  docker inspect
 6172  history | grep -i master
 6173  kubectl help | grep cluster
 6174  kubectl cluster-info
 6175  kubectl cluster-info dump
 6176  MASTER_IP="$(docker inspect microservices-demo | jq '.[0].NetworkSettings.Networks.kind.IPAddress' -r)"
 6177  kubectl get ns
 6178  vi project_steps.txt
 6179  helm install prometheus prometheus-community/kube-prometheus-stack
 6180  kubectl get pods
 6181  kubectl --namespace default get pods -l "release=prometheus"
 6182  kubectl get pods
 6183  kubectl get all
 6184  kubectl get configmaps
 6185  kubectl get secrets
 6186  kubectl get crd
 6187  kubectl get statefulsets
 6188  kubectl describe statefulset prometheus-prometheus-kube-prometheus-prometheus > /tmp/prom.yaml
 6189  vi /tmp/prom.yaml
 6190  nvim /tmp/prom.yaml
 6191  kubectl describe statefulset alertmanager-prometheus-kube-prometheus-alertmanager > /tmp/alert.yaml
 6192  nvim /tmp/alert.yaml
 6193  kubectl get deployment
 6194  kubectl describe deployment prometheus-kube-prometheus-operator > /tmp/operator.yaml
 6195  nvim /tmp/operator.yaml
 6196  kubectl get services
 6197  clear
 6198  kubectl get services
 6199  kubectl get ingress
 6200  kubectl get pods
 6201  kubectl get logs prometheus-grafana-7547ccf555-llhm2
 6202  kubectl logs prometheus-grafana-7547ccf555-llhm2
 6203  history
 6204  kubectl logs prometheus-grafana-7547ccf555-llhm2 -c grafana
 6205  ls
 6206  history | grep kubectl
 6207  eksctl delete cluster --name microservices-demo
 6208  ls
 6209  eksctl create cluster --name microservices-demo-new --region us-east-1 --node-type t3a.medium --nodes 2
 6210  clear
 6211  ls
 6212  vi project_steps.txt
 6213  clear
 6214  kubectl get nodes
 6215  kubectl create namespace prometheus
 6216  helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
 6217  helm upgrade -i prometheus prometheus-community/prometheus \\n    --namespace prometheus \\n    --set alertmanager.persistentVolume.storageClass="gp2",server.persistentVolume.storageClass="gp2"
 6218  kubectl get pods -n prometheus
 6219  kubectl --namespace=prometheus port-forward deploy/prometheus-server 9090
 6220  kubectl get pods -n prometheus
 6221  kubectl logs prometheus-server-6d77778b4b-7l896
 6222  kubectl get pods -n prometheus
 6223  kubectl logs prometheus-server
 6224  kubectl logs prometheus-alertmanager-0
 6225  kubectl get pods -n prometheus
 6226  kubectl get pods --field-selector=status.phase=Pending
 6227  kubectl get pods -n prometheus--field-selector=status.phase=Pending
 6228  kubectl get pods -n prometheus --field-selector=status.phase=Pending
 6229  kubectl describe pod prometheus-server-6d77778b4b-7l896
 6230  kubectl describe pod -n prometheus
 6231  kubectl get pods -n prometheus--field-selector=status.phase=Pending
 6232  kubectl get pods -n prometheus
 6233  kubectl describe pod -n prometheus | grep -i events
 6234  kubectl describe pod -n prometheus | grep -C10 -i events
 6235  kubectl describe pod -n prometheus > /tmp/t
 6236  grep -i "warn\|err" /tmp/t
 6237  # eksctl create iamserviceaccount \\n  --name aws-node \\n  --namespace kube-system \\n  --cluster $EKS_CLUSTER_NAME \\n  --role-name "AmazonEKSVPCCNIRole" \\n  --attach-policy-arn arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy \\n  --override-existing-serviceaccounts \\n  --approve
 6238  kubectl get clsuters
 6239  kubectl get cluster
 6240  kubectl describe cluster
 6241  eksctl create iamserviceaccount \\n  --name aws-node \\n  --namespace kube-system \\n  --cluster microservices-demo-new \\n  --role-name "AmazonEKSVPCCNIRole" \\n  --attach-policy-arn arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy \\n  --override-existing-serviceaccounts \\n  --approve
 6242  eksctl create iamserviceaccount \\n  --name aws-node \\n  --namespace kube-system \\n  --cluster microservices-demo-new \\n  --role-name "AmazonEKSVPCCNIRole" \\n  --attach-policy-arn arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy \\n  --override-existing-serviceaccounts \\n  --approve \\n--region=us-east-1
 6243  ls
 6244  vi project_steps.txt
 6245  eksctl utils associate-iam-oidc-provider --region=us-east-1 --cluster=microservices-demo-new
 6246  history 10
 6247  eksctl create iamserviceaccount \\n  --name aws-node \\n  --namespace kube-system \\n  --cluster microservices-demo-new \\n  --role-name "AmazonEKSVPCCNIRole" \\n  --attach-policy-arn arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy \\n  --override-existing-serviceaccounts \\n  --approve \\n--region=us-east-1
 6248  export cluster_name=microservices-demo-new\n\n
 6249  oidc_id=$(aws eks describe-cluster --name $cluster_name --query "cluster.identity.oidc.issuer" --output text | cut -d '/' -f 5)
 6250  echo $oidc_id
 6251  aws iam list-open-id-connect-providers | grep $oidc_id | cut -d "/" -f4\n
 6252  eksctl utils associate-iam-oidc-provider --cluster $cluster_name --approve
 6253  eksctl create iamserviceaccount \\n  --name aws-node \\n  --namespace kube-system \\n  --cluster microservices-demo-new \\n  --role-name "AmazonEKSVPCCNIRole" \\n  --attach-policy-arn arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy \\n  --override-existing-serviceaccounts \\n  --approve \\n--region=us-east-1
 6254  kubectl list pods -n kube-system -l k8s-app=aws-node
 6255  kubectl lget pods -n kube-system -l k8s-app=aws-node
 6256  kubectl get pods -n kube-system -l k8s-app=aws-node
 6257  curl -sSL -o ebs-csi-policy.json https://raw.githubusercontent.com/kubernetes-sigs/aws-ebs-csi-driver/master/docs/example-iam-policy.json
 6258  export EBS_CSI_POLICY_NAME=AmazonEBSCSIPolicy
 6259  aws iam create-policy \\n--region us-east-1 \\n--policy-name $EBS_CSI_POLICY_NAME \\n--policy-document file://ebs-csi-policy.json\n
 6260  aws iam list
 6261  aws iam list policies
 6262  aws help | grep -i policy
 6263  export EBS_CSI_POLICY_ARN=$(aws --region us-east-1 iam list-policies --query 'Policies[?PolicyName==`'$EBS_CSI_POLICY_NAME'`].Arn' --output text)
 6264  echo EBS_CSI_POLICY_ARN=
 6265  echo $EBS_CSI_POLICY_ARN
 6266  eksctl create iamserviceaccount \\n  --cluster $EKS_CLUSTER_NAME \\n  --name ebs-csi-controller-irsa \\n  --namespace kube-system \\n  --attach-policy-arn $EBS_CSI_POLICY_ARN \\n  --override-existing-serviceaccounts --approve
 6267  eksctl create iamserviceaccount \\n  --cluster microservices-demo-new \\n  --name ebs-csi-controller-irsa \\n  --namespace kube-system \\n  --attach-policy-arn $EBS_CSI_POLICY_ARN \\n  --override-existing-serviceaccounts --approve
 6268  helm repo add aws-ebs-csi-driver https://kubernetes-sigs.github.io/aws-ebs-csi-driver
 6269  helm repo update
 6270  kubectl get pdos
 6271  kubectl get pods
 6272  kubectl get pods -n all
 6273  helm upgrade --install aws-ebs-csi-driver \\n  --version=1.2.4 \\n  --namespace kube-system \\n  --set serviceAccount.controller.create=false \\n  --set serviceAccount.snapshot.create=false \\n  --set enableVolumeScheduling=true \\n  --set enableVolumeResizing=true \\n  --set enableVolumeSnapshot=true \\n  --set serviceAccount.snapshot.name=ebs-csi-controller-irsa \\n  --set serviceAccount.controller.name=ebs-csi-controller-irsa \\n  aws-ebs-csi-driver/aws-ebs-csi-driver\n
 6274  aws eks describe-addon-versions --addon-name aws-ebs-csi-driver
 6275  helm uninstall aws-ebs-csi-driver --namespace kube-system
 6276  aws eks describe-addon-versions --addon-name aws-ebs-csi-driver
 6277  eksctl create addon --name aws-ebs-csi-driver --cluster microservices-demo-new --service-account-role-arn arn:aws:iam::096791037869:role/AmazonEKS_EBS_CSI_DriverRole --force
 6278  eksctl get addon --name aws-ebs-csi-driver --cluster microservices-demo-new
 6279  eksctl update addon --name aws-ebs-csi-driver --version v1.22.0-eksbuild.2 --cluster my-cluster --force
 6280  eksctl update addon --name aws-ebs-csi-driver --version v1.22.0-eksbuild.2 --cluster microservices-demo-new --force
 6281  kubectl get all -n prometheus
 6282  kubectl describe pod pod/prometheus-server-6d77778b4b-7l896 -n prometheus
 6283  kubectl describe pod pod/prometheus-server-6d77778b4b-7l896 
 6284  kubectl describe pod prometheus-server-6d77778b4b-7l896 
 6285  kubectl describe pod prometheus-server-6d77778b4b-7l896 -n prometheus
 6286  aws iam list-open-id-connect-providers
 6287  eksctl utils associate-iam-oidc-provider --cluster microservices-demo-new --approve
 6288  kubectl logs prometheus-server-6d77778b4b-7l896 -n prometheus | grep -i 400
 6289  kubectl logs prometheus-server-6d77778b4b-7l896 -n prometheus 
 6290  kubectl logs prometheus-server-6d77778b4b-7l896
 6291  eksctl utils associate-iam-oidc-provider --cluster microservices-demo-new --approve
 6292  eksctl delete cluster --name microservices-demo-new
 6293  \tls
 6294  #eksctl create cluster --name microservices-demo-new --region us-east-1 --node-type t3a.medium --nodes 2
 6295  aws eks congigh
 6296  aws eks 
 6297  \n￼\n
 6298  #eksctl create cluster --name microservices-demo-new --region us-east-1 --node-type t3a.medium --nodes 2
 6299  eksctl create cluster --name microservices-demo --region us-east-1 --node-type t3a.medium --nodes 2
 6300* clear
 6301* ls
 6302* pwd
 6303* ls
 6304* git branch
 6305* git status
 6306* cd helm-chart
 6307* ls
 6308* vi Chart.yaml
 6309* vi values.yaml
 6310* vi templates
 6311* CD templates
 6312* LS
 6313* cd templates
 6314* ls
 6315* clear
 6316* ls
 6317* vi NOTES.txt
 6318* cd ..
 6319* ls
 6320* clear
 6321* ls
 6322* cd ..
 6323* ls
 6324* clear
 6325* ls
 6326* cd kubernetes-manifests
 6327* ls
 6328* vi currencyservice.yaml
 6329* cd .
 6330* cd ..
 6331* ls
 6332  kubectl get nodes
 6333* clear
 6334* ls
 6335* vi steps.txt
 6336  oidc_id=$(aws eks describe-cluster --name xxxx --query "cluster.identity.oidc.issuer" --output text | cut -d '/' -f 5)
 6337  oidc_id=$(aws eks describe-cluster --name microservices-demo --query "cluster.identity.oidc.issuer" --output text | cut -d '/' -f 5)
 6338  echo $oidc_id
 6339  aws iam list-open-id-connect-providers | grep $oidc_id | cut -d "/" -f4
 6340  eksctl utils associate-iam-oidc-provider --cluster microservices-demo --approve
 6341  eksctl create iamserviceaccount \\n  --name ebs-csi-controller-sa \\n  --namespace kube-system \\n  --cluster microservices-demo \\n  --attach-policy-arn arn:aws:iam::aws:policy/service-role/AmazonEBSCSIDriverPolicy \\n  --approve \\n  --role-only \\n  --role-name AmazonEKS_EBS_CSI_DriverRole\n
 6342  eksctl create addon --name aws-ebs-csi-driver --cluster my-cluster --service-account-role-arn
 6343  eksctl create addon --name aws-ebs-csi-driver --cluster my-cluster --service-account-role-arn arn:aws:iam::111122223333:role/AmazonEKS_EBS_CSI_DriverRole --force
 6344  eksctl create addon --name aws-ebs-csi-driver --cluster microservices-demo --service-account-role-arn arn:aws:iam::111122223333:role/AmazonEKS_EBS_CSI_DriverRole --force
 6345  eksctl create addon --name aws-ebs-csi-driver --cluster microservices-demo --service-account-role-arn arn:aws:iam::096791037869:role/AmazonEKS_EBS_CSI_DriverRole --force
 6346  helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
 6347  helm repo add grafana https://grafana.github.io/helm-charts
 6348  kubectl get ns
 6349  kubectl create namespace prometheus\n
 6350  helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
 6351  helm install prometheus prometheus-community/prometheus \\n    --namespace prometheus \\n    --set alertmanager.persistentVolume.storageClass="gp2" \\n    --set server.persistentVolume.storageClass="gp2"\n
 6352  kubectl get all -n prometheus
 6353  clear
 6354  kubectl port-forward -n prometheus deploy/prometheus-server 8080:9090
 6355  ls
 6356  cd helm-chart
 6357  ls
 6358  cd mm
 6359  cd ll
 6360  cd ..
 6361  ls
 6362  clear
 6363  ls
 6364  pwd
 6365  cd helm-chart
 6366  ls
 6367  cd templates
 6368  ls
 6369  cd ..
 6370  ls
 6371  mkdir grafana
 6372  cd grafana
 6373  ls
 6374  cat << EoF > grafana.yaml\ndatasources:\n  datasources.yaml:\n    apiVersion: 1\n    datasources:\n    - name: Prometheus\n      type: prometheus\n      url: http://prometheus-server.prometheus.svc.cluster.local\n      access: proxy\n      isDefault: true\nEoF
 6375  ls
 6376  vi grafana.yaml
 6377  kubectl create namespace grafana
 6378  kubectl get ns
 6379  helm install grafana grafana/grafana \\n    --namespace grafana \\n    --set persistence.storageClassName="gp2" \\n    --set persistence.enabled=true \\n    --set adminPassword='Bigchungus151376@' \\n    --values grafana.yaml \\n    --set service.type=LoadBalancer
 6380  export SERVICE_IP=$(kubectl get svc --namespace grafana grafana -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
 6381  echo http://$SERVICE_IP:80
 6382  export ELB=$(kubectl get svc -n grafana grafana -o jsonpath='{.status.loadBalancer.ingress[0].hostname}')\n
 6383  echo "http://$ELB"\n
 6384* vi steps.txt
 6385  kubectl get all -n grafana
 6386  clear
 6387  kubectl get all -n grafana
 6388  clear
 6389* ls
 6390* vi pro
 6391* vi project_steps.txt
 6392  ls
 6393  cd ..
 6394  ls
 6395  cd ..
 6396  ls
 6397  kubectl apply -f ./release/kubernetes-manifests.yaml
 6398  kubectl get pods -n all
 6399  kubectl get pods 
 6400  kubectl get pods --all-namespaces\n
 6401  clear
 6402* vi project_steps.txt
 6403  kubectl get pods --all-namespaces\n
 6404  kubectl port-forward -n prometheus deploy/prometheus-server 8080:9090
 6405  helm install tetragon cilium/tetragon -n kube-system
 6406  kubectl rollout status -n kube-system ds/tetragon -w\n
 6407  kubectl get namespaces
 6408  kubectl get pods kube-system
 6409  kubectl get pods -n kube-system
 6410  helm uninstall tetragon -n kube-system
 6411* ls
 6412* vi project_steps.txt
 6413* vi steps.txt
 6414  ls
 6415  vi release/kubernetes-manifests.yaml
 6416  kubectl get pods
 6417  ls
 6418  cd src
 6419  ls
 6420  cd ..
 6421  ls
 6422  cd helm-chart
 6423  ls
 6424  cd templates
 6425  ls
 6426  vi redis.yaml
 6427  grep -inr "operator" .
 6428  ls
 6429  cd ..
 6430  ls
 6431  cd ..
 6432  ls
 6433  cd ..
 6434  ls
 6435  cd microservices-demo
 6436  ls
 6437  grep -inr "operator" .
 6438  ls
 6439  vi release/kubernetes-manifests.yaml
 6440  ls
 6441  vi helm-chart/values.yaml
 6442  ls
 6443  ll protos
 6444  ll release
 6445  ll src
 6446  ls
 6447  ll kubernetes-manifests
 6448  vi kubernetes-manifests/redis.yaml
 6449  ls
 6450  vi release/kubernetes-manifests.yaml
 6451  grep -inr "cluster" .
 6452  ls
 6453  cd helm-chart
 6454  ls
 6455  cd tel
 6456  cd templates
 6457  ls
 6458  clear
 6459  ls
 6460  vi opentelemetry-collector.yaml
 6461  kubectl get pods --all-namespaces | grep -i tele
 6462  kubectl get pods --all-namespaces 
 6463  ls
 6464  vi cd ..
 6465  cd ..
 6466  ls
 6467  cd ..
 6468  ls
 6469  vi release/kubernetes-manifests.yaml
 6470  vi release/istio-manifests.yaml
 6471  ls
 6472  kubectl get namespaces
 6473  kubectl get pods -n prometheus
 6474  kubectl get pods -n grafana
 6475  kubectl get pods -n prometheus
 6476  helm install cilium cilium/cilium --version 1.14.1 \\n   --namespace kube-system \\n   --set prometheus.enabled=true \\n   --set operator.prometheus.enabled=true \\n   --set hubble.enabled=true \\n   --set hubble.metrics.enableOpenMetrics=true \\n   --set hubble.metrics.enabled="{dns,drop,tcp,flow,port-distribution,icmp,httpV2:exemplars=true;labelsContext=source_ip\,source_namespace\,source_workload\,destination_ip\,destination_namespace\,destination_workload\,traffic_direction}"\n
 6477* kubectl get pods
 6478* kubectl get pods -n all-namespaces
 6479* kubectl get pods -n-all-namespaces
 6480* kubectl get ns
 6481* kubectl get pods kube-system
 6482* kubectl get pods -n kube-system
 6483* kubectl get pods
 6484* kubectl port-forward -n prometheus deploy/prometheus-server 8080:9090
 6485  kubectl describe service cilium-agent -n kube-system
 6486  kubectl get pods -n kube-system
 6487  kubectl get logs cilium-tlkjf 
 6488  kubectl logs cilium-tlkjf -n kube-system
 6489  kubectl logs cilium-tlkjf -n kube-system | grep -i prometheus
 6490  kubectl logs cilium-tlkjf -n kube-system | grep -i listening
 6491  clear
 6492  kubectl logs cilium-tlkjf -n kube-system | grep -C5 -i prometheus
 6493  helm update cilium cilium/cilium --version 1.14.1 \\n   --namespace kube-system \\n   --set prometheus.enabled=true \\n   --set operator.prometheus.enabled=true \\n   --set hubble.enabled=true \\n   --set hubble.metrics.enableOpenMetrics=true \\n   --set hubble.metrics.enabled="{dns,drop,tcp,flow,port-distribution,icmp,httpV2:exemplars=true;labelsContext=source_ip\,source_namespace\,source_workload\,destination_ip\,destination_namespace\,destination_workload\,traffic_direction}" \\n
 6494  helm update cilium cilium/cilium --version 1.14.1 \\n   --namespace kube-system \\n   --set prometheus.enabled=true \\n   --set operator.prometheus.enabled=true \\n   --set hubble.enabled=true \\n   --set hubble.metrics.enableOpenMetrics=true \\n   --set hubble.metrics.enabled="{dns,drop,tcp,flow,port-distribution,icmp,httpV2:exemplars=true;labelsContext=source_ip\,source_namespace\,source_workload\,destination_ip\,destination_namespace\,destination_workload\,traffic_direction}" \\n   --set prometheus.port=9964
 6495  helm upgrade cilium cilium/cilium --version 1.14.1 \\n   --namespace kube-system \\n   --set prometheus.enabled=true \\n   --set operator.prometheus.enabled=true \\n   --set hubble.enabled=true \\n   --set hubble.metrics.enableOpenMetrics=true \\n   --set hubble.metrics.enabled="{dns,drop,tcp,flow,port-distribution,icmp,httpV2:exemplars=true;labelsContext=source_ip\,source_namespace\,source_workload\,destination_ip\,destination_namespace\,destination_workload\,traffic_direction}" \\n   --set prometheus.port=9964
 6496  kubectl logs cilium-tlkjf -n kube-system | grep -C5 -i prometheus
 6497  kubectl get pods -n kube-ssytem
 6498  kubectl get pods -n kube-system
 6499  kubectl logs cilium-tsp44 -n kube-system | grep -C5 -i prometheus
 6500  kubectl get deploy
 6501  kubectl get pods -n prometheus
 6502  ls
 6503  cd release
 6504  ls
 6505  cd ..
 6506  ls
 6507  cd protos
 6508  ls
 6509  cd ..
 6510  ls
 6511  cd release
 6512  ls
 6513  cd ..
 6514  ls
 6515  cd kubernetes-manifests
 6516  ls
 6517  clear
 6518  ls
 6519  mkdir monitoring
 6520  cd monitoring
 6521  ls
 6522  kubectl get pods -n prometheus
 6523  helm uninstall prometheus --namespace prometheus
 6524  kubectl delete ns prometheus
 6525  helm uninstall grafana --namespace grafana
 6526  kubectl delete ns grafana
 6527  clear
 6528  kubectl get pods
 6529* clear
 6530* ls
 6531* cd ..
 6532* ls
 6533* git clone git@github.com:antonputra/tutorials.git
 6534* ll
 6535* cd tutorials
 6536* ls
 6537* clear
 6538* ls
 6539* cd lessons
 6540* ls
 6541* cd 130
 6542* ls
 6543* cd k8s
 6544* ls
 6545* clear
 6546* ls
 6547  clear
 6548  ls
 6549* cd
 6550* ls
 6551* cd ws
 6552* ls
 6553* mkdir IITK_PROJECT
 6554* cd IITK_PROJECT
 6555* ls
 6556* clear
 6557* ls
 6558* touch 01-cluster-config.yaml
 6559* eksctl create cluster --name microservices-demo --region us-east-1 --node-type t3a.medium --nodes 2 --dry-run > 01-cluster-config.yaml
 6560* eksctl utils associate-iam-oidc-provider --cluster=microservices-demo --dry-run
 6561  aws eks describe-cluster --name microservices-demo --query "cluster.identity.oidc.issuer"
 6562  aws eks describe-cluster --name microservices-demo --query "cluster.identity.oidc.issuer" --output text
 6563  aws eks describe-cluster --name microservices-demo --query "cluster.identity.oidc.issuer" --output text | cut -d '/' -f 5
 6564  eksctl delete cluster --name microservices-demo-new
 6565  eksctl delete cluster --name microservices-demo
 6566  ls
 6567  clear
 6568  ls
 6569  cd ..
 6570  ls
 6571  cd ..
 6572  ls
 6573  cd ..
 6574  ls
 6575  cd IITK_PROJECT
 6576  ls
 6577  eksctl create cluster -f 01-cluster-config.yaml
 6578  vi 01-cluster-config.yaml
 6579  eksctl version
 6580  ls
 6581  eksctl create cluster -f 01-cluster-config.yaml
 6582  kubectl get nodes
 6583  kubectl get pods
 6584  clear
 6585  kubectl get --raw /metrics
 6586  kubectl create namespace prometheus
 6587  helm install prometheus prometheus-community/prometheus \\n    --namespace prometheus \\n    --set alertmanager.persistentVolume.storageClass="gp2" \\n    --set server.persistentVolume.storageClass="gp2"\n
 6588  kubectl get pods -n prometheus
 6589  helm template prometheus > prometheus.yaml
 6590  helm template prometheus
 6591  ls
 6592  clear
 6593  ls
 6594  vi prometheus.yaml
 6595  rm prometheus.yaml
 6596  helm template
 6597  helm repo list
 6598  helm teplate prometheus-community prometheus/prometheus-community .
 6599  helm template prometheus-community prometheus/prometheus-community .
 6600  helm template prometheus-community 
 6601  helm template prometheus/prometheus-community .
 6602  clear
 6603  helm template --help
 6604  help repo list
 6605  helm repo list
 6606  helm search repo prometheus-community
 6607  clear
 6608  helm search repo prometheus-community
 6609  helm search repo prometheus-community | grep cilium
 6610  kubectl get pods -n prometheus
 6611  kubectl get crd
 6612  clear
 6613  kubectl get crd
 6614  kubectl get prometheusrules -n prometheus
 6615  kubectl get crd -n prometheus
 6616  helm search repo prometheus-community | grep cilium
 6617  helm search repo prometheus-community | grep operator
 6618  helm install prometheus-community/kube-prometheus-stack
 6619  helm show values prometheus-community/kube-prometheus-stackhelm show values prometheus-community/kube-prometheus-stack
 6620  helm show values prometheus-community/kube-prometheus-stack
 6621  ls
 6622  helm show values prometheus-community/kube-prometheus-stack > prom.yaml
 6623  helm uninstall prometheus --namespace prometheus
 6624  kubectl get pods -n prometheus
 6625  kubectl delete ns prometheus
 6626  #helm show values prometheus-community/kube-prometheus-stack > prom.yaml
 6627  help repo list
 6628  helm repo list
 6629  #helm show values prometheus-community/kube-prometheus-stack > prom.yaml
 6630  helm search repo cilium | grep tetragon
 6631  helm show values cilium/tetragon > tetragon.yaml
 6632  ls
 6633  helm show values prometheus-community/kube-prometheus-stack > prom.yaml
 6634  #helm install prometheus prometheus-community/kube-prometheus-stack -f po
 6635  ls
 6636  mv prom.yaml kube-prometheus-stack.yaml
 6637  helm install prometheus prometheus-community/kube-prometheus-stack -f kube-prometheus-stack.yaml -n monitoring
 6638  kubectl get pods
 6639  kubectl get namespaces
 6640  kubectl create namespace monitoring
 6641  kubectl get namespaces
 6642  helm install prometheus prometheus-community/kube-prometheus-stack -f kube-prometheus-stack.yaml -n monitoring
 6643  kubectl get pods -n monitoring
 6644  kubectl port-forward -n prometheus deploy/prometheus-server 8080:9090
 6645  kubectl port-forward -n monitoring deploy/prometheus-server 8080:9090
 6646  kubectl port-forward -n monitoring prometheus-prometheus-kube-prometheus-prometheus-0 8080:9090
 6647  kubectl --namespace monitoring port-forward svc/grafana 3000\n
 6648  kubectl --namespace monitoring port-forward prometheus-grafana-7dd9ccd99b-vhdsj 3000\n
 6649  ls
 6650  vi kube-prometheus-stack.yaml
 6651  kubectl --namespace monitoring port-forward prometheus-grafana-7dd9ccd99b-vhdsj 3000\n
 6652  history 
 6653* ls
 6654* touch quicker-steps.txt
 6655* vi quicker-steps.txt
 6656* ls
 6657* cd ..
 6658* ls
 6659* cd k8s
 6660* cd ..
 6661* ls
 6662* cd microservices-demo
 6663* ls
 6664* vi steps.txt
 6665  cilium version
 6666  ci 01-cluster-config.yaml
 6667  cilium status
 6668  ls
 6669  eksctl delete cluster --name microservices-demo
 6670  ls
 6671  eksctl create cluster -f 01-cluster-config.yaml
 6672  kubectl create namespace monitoring
 6673  kubectl list namespaces
 6674  kubectl get namespaces
 6675  helm install prometheus prometheus-community/kube-prometheus-stack -f kube-prometheus-stack.yaml -n monitoring
 6676* kubectl get namespaces
 6677* kubectl get pods -n monitoring
 6678  history
 6679  helm install prometheus prometheus-community/kube-prometheus-stack -f kube-prometheus-stack.yaml -n monitoring
 6680* kubectl get pods -n monitoring
 6681  kubectl delete job
 6682  kubectl get pods -n monitoring
 6683  kubectl logs prometheus-kube-prometheus-admission-create-bhv2w -n monitoring
 6684  eksctl delete cluster --name microservices-demo
 6685  ls
 6686  eksctl create cluster -f 01-cluster-config.yaml
 6687  cilium install --version 1.14.1
 6688  cilium status --wait
 6689  cilium status
 6690  kubectl get pods -n kube-system
 6691  kubectl describe pod cilium-operator-7454d756db-btlvb -n kube-system
 6692  kubectl -n kube-system exec 
 6693  kubectl get pods -n kube-system
 6694  kubectl describe pod ebs-csi-controller-7b7c84b88b-lmc8q -n kube-system
 6695  kubectl get pods -n kube-system
 6696  kubectl -n kube-system exec cilium-7bzmf -- cilium status
 6697  eksctl delete cluster --name microservices-demo
 6698  ls
 6699  vi 01-cluster-config.yaml
 6700  ls
 6701  eksctl create cluster -f 01-cluster-config.yaml
 6702  kubectl get nodes
 6703  kubectl get namespaces
 6704  kubect get pods -n kube-system
 6705  kubectl get pods -n kube-system
 6706  clear
 6707  ls
 6708  kubectl create namespace monitoring
 6709  helm install prometheus prometheus-community/kube-prometheus-stack -f kube-prometheus-stack.yaml -n monitoring
 6710* kubectl get pods -n monitoring
 6711* kubectl get namespaces
 6712* kubectl get pods -n monitoring
 6713* kubectl get pods -n monitoring --watch
 6714* kubectl get pods -n monitoring
 6715* kubectl get pods -n monitoring --watch
 6716  ls
 6717  vi tetragon.yaml
 6718* ls
 6719* vi steps.txt
 6720* ls
 6721* vi project_steps.txt
 6722* ls
 6723* i steps.txt
 6724* vi steps.txt
 6725* ls
 6726* kubectl apply -f ./release/kubernetes-manifests.yaml
 6727* kubectl get pods
 6728  ls
 6729* vi project_steps.txt
 6730* vi steps.txt
 6731* kubectl port-forward -n prometheus deploy/prometheus-server 8080:9090
 6732* kubectl port-forward -n monitoring deploy/prometheus-server 8080:9090
 6733* history | grep port-forward
 6734* kubectl get pods -n monitoring
 6735* kubectl port-forward -n monitoring prometheus-prometheus-kube-prometheus-prometheus-0 8080:9090
 6736  kubectl get pods
 6737  ls
 6738  helm install tetragon cilium/tetragon -n kube-system
 6739  kubectl get pods -n kube-system
 6740  kubectl rollout status -n kube-system ds/tetragon -w
 6741  kubectl describe pods tetragon-298w4 -n kube-system
 6742  kubectl logs -n kube-system -l app.kubernetes.io/name=tetragon -c export-stdout -f\n
 6743  kubectl describe pods tetragon-298w4 -n kube-system
 6744  kubectl logs tetragon-298w4 -n kube-system
 6745  clear
 6746  kubectl get pods -n monitoring
 6747* kubectl port-forward -n monitoring prometheus-prometheus-kube-prometheus-prometheus-0 8080:9090
 6748  ls
 6749  vi kube-prometheus-stack.yaml
 6750  kubectl describe pod tetragon-298w4 -n kube-system
 6751  kubectl describe pod tetragon-298w4 -n kube-system | grep -i "port\|2112"
 6752  #helm show values prometheus-community/kube-prometheus-stack > prom.yaml
 6753  history | grep -B5 "show values"
 6754  ls
 6755  vi tetragon.yaml
 6756  helm uninstall tetragon -n kube-system
 6757  history | grep yaml
 6758  ls
 6759  vi tetragon.yaml
 6760  ls
 6761  history 500 | grep prometheus
 6762  helm list repos
 6763  helm list 
 6764  helm show repos
 6765  helm list all
 6766  helm repo list
 6767  helm search cilium | grep tetragon
 6768  helm search cilium 
 6769  helm search repo cilium | grep tetragon
 6770  #helm install prometheus prometheus-community/kube-prometheus-stack -f kube-prometheus-stack.yaml -n monitoring
 6771  vi tetragon.yaml
 6772  helm install tetragon cilium/tetragon -f tetragon.yaml -n kube-system
 6773  ls
 6774  kubectl get pods -n kube-system
 6775  history | grep tetragon
 6776  kubectl logs -n kube-system -l app.kubernetes.io/name=tetragon -c export-stdout -f\n
 6777  kubectl logs -n kube-system -l app.kubernetes.io/name=tetragon -c export-stdout -f
 6778* kubectl port-forward -n monitoring prometheus-prometheus-kube-prometheus-prometheus-0 8080:9090
 6779  kubectl get pods -n kube-system
 6780  kubectl describe pods kube-proxy-qpfm6 -n kube-system
 6781  kubectl describe pods kube-proxy-qpfm6 -n kube-system | grep 2112
 6782  kubectl get pods -n kube-system
 6783  kubectl get pods -n monitoring
 6784  kubectl list pods -n kube-system
 6785  kubectl get pods -n kube-system
 6786  kubectl describe pod tetragon-wpgst -n kube-system
 6787  kubectl get pods -n kube-system -o wide
 6788* kubectl port-forward -n monitoring prometheus-prometheus-kube-prometheus-prometheus-0 8080:9090
 6789  ls
 6790  vi kube-prometheus-stack.yaml
 6791  ls
 6792  vi kube-prometheus-stack.yaml
 6793  kubectl get services
 6794  kubectl get services -n kube-system
 6795  kubectl describe service tetragon -n kube-system
 6796  kubectl get servicemonitor
 6797  kubectl get servicemonitor -n kube-systenm
 6798  kubectl get servicemonitor -n kube-systm
 6799  kubectl get servicemonitor -n kube-system
 6800  kubectl describe service tetragon -n kube-system
 6801  ls
 6802  vi tetragon.yaml
 6803  kubectl get servicemonitor -n kube-systm
 6804  kubectl get servicemonitor -n kube-system
 6805  history | grep json
 6806  history | grep yaml
 6807  ls
 6808  kubectl get servicemonitor -n kube-system
 6809  kubectl get servicemonitor tetragon -n kube-system
 6810  kubectl get servicemonitor tetragon -n kube-system -o yaml 
 6811  kubectl get servicemonitor tetragon -n kube-system -o yaml > tetragon-servicemonitor.yaml
 6812  ls
 6813  vi prometheus-config.yaml
 6814  clear
 6815  ls
 6816  vi prometheus-config.yaml
 6817  ls
 6818  history | grep helm | grep yaml
 6819  helm install --dry-run -debug prometheus prometheus-community/kube-prometheus-stack -f kube-prometheus-stack.yaml -n monitoring
 6820  helm install --dry-run prometheus prometheus-community/kube-prometheus-stack -f kube-prometheus-stack.yaml -n monitoring
 6821* kubectl get nodes -n monitoring
 6822* kubectl get pods -n monitoring
 6823  helm install --dry-run prometheus prometheus-community/kube-prometheus-stack -f kube-prometheus-stack.yaml -n monitoring > prom-complete.yaml
 6824* kubectl get pods -n monitoring
 6825* kubectl get pods -n monitoring --watch
 6826  ll
 6827* kubectl port-forward -n monitoring prometheus-prometheus-kube-prometheus-prometheus-0 8080:9090
 6828  ls
 6829  vi tetragon-servicemonitor.yaml
 6830  ks
 6831  l
 6832  ls
 6833  #kubectl get servicemonitor tetragon -n kube-system -o yaml > tetragon-servicemonitor.yaml
 6834  ks
 6835  ls
 6836  kubectl get servicemonitors
 6837  kubectl get servicemonitors --all-namespaces
 6838  kubectl get servicemonitors --all-namespaces -o wide
 6839  ls
 6840  vi values.yaml
 6841* ls
 6842* helm upgrade prometheus-operator prometheus-community/kube-prometheus-stack --namespace monitoring --namespace monitoring --values values.yml
 6843* ls
 6844* helm upgrade prometheus-operator prometheus-community/kube-prometheus-stack --namespace monitoring --namespace monitoring --values values.yaml
 6845* kubectl get pods -n monitoring
 6846* helm upgrade -n monitoring prometheus-kube-prometheus-operator-cd5465b94-hgz4c prometheus-community/kube-prometheus-stack --namespace monitoring --namespace monitoring --values values.yaml
 6847* helm upgrade -n monitoring prometheus-operator prometheus-community/kube-prometheus-stack --namespace monitoring --namespace monitoring --values values.yaml
 6848* helm upgrade prometheus prometheus-community/kube-prometheus-stack -f kube-prometheus-stack.yaml -n monitoring
 6849  kubectl get pods -n monitoring --watch
 6850  kubectl get pods -n monitoring 
 6851* helm upgrade prometheus prometheus-community/kube-prometheus-stack -f kube-prometheus-stack.yaml -n monitoring
 6852  kubectl get pods -n monitoring 
 6853* clear
 6854  ls
 6855  clear
 6856  ls
 6857  kubectl logs -n kube-system -l app.kubernetes.io/name=tetragon -c export-stdout -f 
 6858  ls
 6859  clear
 6860  tetragon help
 6861  tetra help
 6862  kubectl get pods --all-namespaces
 6863  ls
 6864  clear
 6865  ls
 6866  history 100
 6867  ls
 6868  vi kube-prometheus-stack.yaml
 6869  vi values.yaml
 6870  vi kube-prometheus-stack.yaml
 6871  ls
